@component-name = "portal-workflow-ee"
definition {

	property portal.acceptance = "true";
	property portal.release = "false";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Reports";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			ReportsAdmin.tearDownReports();

			ReportsAdmin.tearDownDefinitions();

			ReportsAdmin.tearDownSources();

			ServerAdministration.tearDownMailServerSettings();
		}
	}

	@priority = "4"
	test AddReportInvalidEmail {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		var key_reportsDefinitionName = "Reports Definition Name";

		Click(locator1 = "ReportsAdmin#DEFINITIONS_DEFINITION_TABLE_ACTIONS");

		AssertClick(
			locator1 = "ReportsAdmin#DEFINITIONS_DEFINITION_MENULIST_ADD_REPORT",
			value1 = "Add Report");

		Select(
			locator1 = "Select#REPORT_FORMAT",
			value1 = "csv");

		Type(
			locator1 = "TextInput#EMAIL_NOTIFICATIONS",
			value1 = "InvalidEmail");

		AssertClick(
			locator1 = "ReportsAdminEditReportEntry#GENERATE_BUTTON",
			value1 = "Generate");

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_ENTER_A_VALID_EMAIL_ADDRESS",
			value1 = "Please enter a valid email address.");

		Type(
			locator1 = "TextInput#EMAIL_NOTIFICATIONS",
			value1 = "liferay.qa1@gmail.com");

		Type(
			locator1 = "TextInput#EMAIL_RECIPIENT",
			value1 = "InvalidEmail");

		AssertClick(
			locator1 = "ReportsAdminEditReportEntry#GENERATE_BUTTON",
			value1 = "Generate");

		Alert.viewRequestFailedToComplete();

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_ENTER_A_VALID_EMAIL_ADDRESS",
			value1 = "Please enter a valid email address.");
	}

	@priority = "4"
	test AddSchedule {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addScheduleEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "pdf",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewNoReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name");

		AssertTextEquals(
			locator1 = "ReportsAdminViewReportEntry#INFO_MESSAGE",
			value1 = "Processing report. This may take several minutes.");

		Pause(locator1 = "180000");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name",
			scheduled = "true",
			userName = "Test Test");
	}

	@priority = "4"
	test ChangeReportName {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "csv",
			reportName = "Custom Name",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "Custom Name.csv",
			userName = "Test Test");

		ReportsAdmin.viewNoReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name");
	}

	@description = "LRQA-64780 - Automate LPS-127390: Filter and Order options in Reports Admin do not function properly"
	@priority = "5"
	test CheckFilterAndOrderOption {
		property portal.acceptance = "true";

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		Click(locator1 = "Dropdown#FILTER_AND_ORDER");
		MenuItem.click(menuItem = "All");
		ReportsAdmin.assertReportEntryPresent(reportsDefinitionName = "Reports Definition Name");
	}

	@priority = "4"
	test DeleteReportFile {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "csv",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.csv",
			userName = "Test Test");

		ReportsAdmin.deleteReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name.csv");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewNoReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name.csv");
	}

	@priority = "4"
	test DeliverReportToEmail {
		property test.assert.javascript.errors = "false";
		property test.smtp.server.enabled = "true";

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "pdf",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.pdf",
			userName = "Test Test");

		ReportsAdmin.deliverReportEntryFile(
			emailRecipientAddress = "user1@liferay.com",
			reportsFileName = "reports_admin_template_source_sample_class_name.pdf");

		MockMock.viewMail(
			asset = "New Report: reports_admin_template_source_sample_class_name.pdf",
			content = "New Report: reports_admin_template_source_sample_class_name.pdf",
			recipient = "user1@liferay.com",
			sender = "Joe Bloggs",
			subject = "New Report: reports_admin_template_source_sample_class_name.pdf");

		Navigator.openSpecificURL(url = "${portalURL}");
	}

	@priority = "4"
	test DownloadReportCSV {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "csv",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.csv",
			userName = "Test Test");

		ReportsAdmin.downloadReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name.csv");
	}

	@priority = "4"
	test DownloadReportHTML {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "HTML",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.html",
			userName = "Test Test");

		ReportsAdmin.downloadReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name.html");
	}

	@priority = "4"
	test DownloadReportPDF {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "pdf",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.pdf",
			userName = "Test Test");

		ReportsAdmin.downloadReportEntryFile(
			reportFormat = "pdf",
			reportsFileName = "reports_admin_template_source_sample_class_name.pdf");
	}

	@priority = "4"
	test DownloadReportRTF {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "rtf",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.rtf",
			userName = "Test Test");

		ReportsAdmin.downloadReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name.rtf");
	}

	@priority = "4"
	test DownloadReportTXT {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "txt",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.txt",
			userName = "Test Test");

		ReportsAdmin.downloadReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name.txt");
	}

	@priority = "4"
	test DownloadReportXLS {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "xls",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.xls",
			userName = "Test Test");

		ReportsAdmin.downloadReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name.xls");
	}

	@priority = "4"
	test DownloadReportXML {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "XML",
			reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntry(reportsDefinitionName = "Reports Definition Name");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "reports_admin_template_source_sample_class_name.xml",
			userName = "Test Test");

		ReportsAdmin.downloadReportEntryFile(reportsFileName = "reports_admin_template_source_sample_class_name.xml");
	}

	@description = "This is a use case for LPS-43525."
	@ignore = "true"
	@priority = "3"
	test TestDatabaseConnection {
		property database.types = "mysql";

		var databasePassword = PropsUtil.get("database.mysql.password");
		var databaseURL = PropsUtil.get("database.mysql.url");
		var databaseUsername = PropsUtil.get("database.mysql.username");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoSources();

		ReportsAdmin.addSource(
			reportsDataSourceClass = "com.mysql.cj.jdbc.Driver",
			reportsDataSourceName = "Reports Data Source Name",
			reportsDataSourcePassword = "${databasePassword}",
			reportsDataSourceURL = "${databaseURL}",
			reportsDataSourceUser = "${databaseUsername}");

		ReportsAdmin.testDatabaseConnection();

		PortletEntry.save();
	}

	@priority = "4"
	test ViewEmailNotificationDelivery {
		property portal.upstream = "quarantine";
		property test.assert.javascript.errors = "false";
		property test.name.skip.portal.instance = "CPReportsadmin#ViewEmailNotificationDelivery";

		var portalURL = PropsUtil.get("portal.url");

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "Server Administration");

		ServerAdministration.configureMailServerSettings(
			userName = PropsUtil.get("email.address.2"),
			userPassword = PropsUtil.get("email.password.2"));

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = PropsUtil.get("email.address.4"),
			emailRecipientAddress = "test@liferay.com",
			reportFormat = "pdf",
			reportName = "Custom Report Name",
			reportsDefinitionName = "Reports Definition Name");

		Pause(locator1 = "30000");

		Gmail.login(
			userEmailAddress = PropsUtil.get("email.address.4"),
			userPassword = PropsUtil.get("email.password.4"));

		Gmail.gotoHtmlMode();

		Gmail.viewMail(
			emailFromUserName = "Joe Bloggs",
			gmailAssetType = "New Report: Custom Report Name.pdf",
			gmailMessageBody = "You have a new report.",
			gmailMessageTitle = "New Report: Custom Report Name.pdf");

		var key_gmailAssetType = "New Report: Custom Report Name.pdf";
		var key_pageNameURL = "report";

		AssertClick.assertPartialTextClickAt(
			locator1 = "Gmail#GMAIL_HTML_MODE_MESSAGE_BODY_LINK",
			value1 = "report");

		Pause(locator1 = "30000");

		SelectWindow(locator1 = "title=Reports Definition Name - ${siteName}");

		ReportsAdmin.viewReportEntryFields(
			dataSource = "portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			reportsFileName = "Custom Report Name.pdf",
			userName = "Test Test");

		Gmail.gotoHtmlMode();

		Gmail.deleteSpecificMail(gmailMessageTitleList = "New Report: Custom Report Name.pdf,Your New Account,Your New Password");

		Navigator.openSpecificURL(url = "${portalURL}");
	}

	@priority = "4"
	test ViewEmailRecipientDelivery {
		property portal.upstream = "quarantine";
		property test.assert.javascript.errors = "false";
		property test.name.skip.portal.instance = "CPReportsadmin#ViewEmailRecipientDelivery";

		var portalURL = PropsUtil.get("portal.url");

		ApplicationsMenu.gotoPortlet(
			category = "System",
			panel = "Control Panel",
			portlet = "Server Administration");

		ServerAdministration.configureMailServerSettings(
			userName = PropsUtil.get("email.address.2"),
			userPassword = PropsUtil.get("email.password.2"));

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		ReportsAdmin.addReportDefinition(
			dataSource = "Portal",
			reportsDefinitionDescription = "Reports Definition Description",
			reportsDefinitionName = "Reports Definition Name",
			templateFile = "reports_admin_template_source_sample_class_name.jrxml");

		ReportsAdmin.addReportEntry(
			emailNotificationsAddress = "test@liferay.com",
			emailRecipientAddress = PropsUtil.get("email.address.4"),
			reportFormat = "pdf",
			reportsDefinitionName = "Reports Definition Name");

		Pause(locator1 = "30000");

		Gmail.login(
			userEmailAddress = PropsUtil.get("email.address.4"),
			userPassword = PropsUtil.get("email.password.4"));

		Gmail.gotoHtmlMode();

		Gmail.viewMail(
			emailFromUserName = "Joe Bloggs",
			gmailAssetType = "New Report: reports_admin_template_source_sample_class_name.pdf",
			gmailMessageAttachment = "reports_admin_template_source_sample_class_name.pdf",
			gmailMessageBody = "Please review the attached report.",
			gmailMessageTitle = "New Report: reports_admin_template_source_sample_class_name.pdf");

		var key_gmailAssetType = "New Report: reports_admin_template_source_sample_class_name.pdf";
		var key_pageNameURL = "report";

		AssertElementNotPresent(locator1 = "Gmail#GMAIL_HTML_MODE_MESSAGE_BODY_LINK");

		Gmail.gotoHtmlMode();

		Gmail.deleteSpecificMail(gmailMessageTitleList = "New Report: reports_admin_template_source_sample_class_name.pdf,Your New Account,Your New Password");

		Navigator.openSpecificURL(url = "${portalURL}");
	}

	@priority = "3"
	test ViewReportDefinitionParametersFields {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Configuration",
			portlet = "Reports Admin");

		ReportsAdmin.gotoDefinitions();

		Click(locator1 = "Button#PLUS");

		ReportsAdmin.viewDefinitionParameterFields();
	}

}