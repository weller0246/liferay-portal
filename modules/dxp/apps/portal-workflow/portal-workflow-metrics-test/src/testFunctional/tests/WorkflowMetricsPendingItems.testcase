@component-name = "portal-workflow-ee"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Workflow Metrics";

	setUp {
		TestCase.setUpPortalInstance();

		var testPortalInstance = PropsUtil.get("test.portal.instance");

		User.firstLoginPG();

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Metrics");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@description = "LPS-93410 - Verify that when there is no SLA defined for the process, all items will be displayed as Untracked"
	@priority = "4"
	test ItemsWithNoSlaAreDisplayedUntracked {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.checkPendingWorkflowValues(
			key_ontime = "0",
			key_overdue = "0",
			key_pending = "1",
			key_untracked = "1");

		WorkflowMetrics.goToDashboardAllItemsWithFilter(
			workflowFilterOption = "UNTRACKED",
			workflowMetricsTab = "DASHBOARD",
			workflowProcess = "Single Approver");

		AssertElementPresent(
			key_workflowInstanceName = "Blogs Entry Title",
			locator1 = "WorkflowAllItems#WORKFLOW_INSTANCE_NAME");
	}

	@description = "LPS-93410 - Verify that the items are classified by Overdue, On Time and Untracked"
	@priority = "3"
	test PendingItemsCardsAreOverdueOnTimeUntracked {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		AssertElementPresent(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_OVERDUE_ITEMS_TITLE");

		AssertElementPresent(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_ONTIME_ITEMS_TITLE");

		AssertElementPresent(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_UNTRACKED_ITEMS_TITLE");
	}

	@description = "LPS-93410 - Verify that the percentage is displayed in Overdue, On Time and Untracked cards"
	@priority = "3"
	test PercentageIsDisplayedInCards {
		Click(
			key_processName = "Single Approver",
			locator1 = "WorkflowMetricsProcessListView#ENTER_PROCESS_METRICS");

		AssertElementPresent(
			key_cardName = "Overdue",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_PERCENTAGE_CARDS");

		AssertElementPresent(
			key_cardName = "On Time",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_PERCENTAGE_CARDS");

		AssertElementPresent(
			key_cardName = "Untracked",
			locator1 = "WorkflowMetricsProcessListView#ASSERT_PERCENTAGE_CARDS");
	}

	@description = "LPS-93410 - Verify that the sum for items Overdue + On Time + Untracked is equal to the Total Pending"
	@priority = "3"
	test SumOfOverdueOnTimeUntrackedIsEqualToTotalPending {
		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		AssertElementPresent(locator1 = "WorkflowMetrics#METRICS_NO_SLA_MESSAGE");

		WorkflowMetrics.goToWorkflowSLASettings(workflowProcessName = "Single Approver");

		Click(locator1 = "WorkflowMetricsSLA#ADD_NEW_SLA_BUTTON");

		WorkflowMetrics.fillSLAForm(
			slaDefinitionDays = "0",
			slaDefinitionDescription = "SLA Description",
			slaDefinitionEnd = "Process Ends: Approved",
			slaDefinitionHours = "0001",
			slaDefinitionName = "SLAName",
			slaDefinitionPause = "On Task: Update",
			slaDefinitionStart = "Process Begins");

		Button.clickSave();

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		JSONBlog.addEntry(
			entryContent = "Test Content 1",
			entryTitle = "Test Blog 1");

		JSONBlog.addEntry(
			entryContent = "Test Content 2",
			entryTitle = "Test Blog 2");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Test Blog 2",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Workflow.rejectTaskByDetails(
			workflowAssetContent = "Test Content 2",
			workflowAssetTitle = "Test Blog 2",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		WorkflowMetrics.goToWorkflowProcessMetrics(workflowProcessName = "Single Approver");

		WorkflowMetrics.waitForSLA(
			key_expectedValue = "0",
			key_status = "OVERDUE");

		var overdueItems = selenium.getText(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_OVERDUE_ITEMS_VALUE");
		var onTimeItems = selenium.getText(locator1 = "WorkflowMetrics#DASHBOARD_TOTAL_ONTIME_ITEMS_VALUE");
		var untrackedItems = selenium.getText(locator = "WorkflowMetrics#DASHBOARD_TOTAL_UNTRACKED_ITEMS_VALUE");
		var expectedResult = MathUtil.sum("${overdueItems}", "${onTimeItems}");
		var expectedResultTotal = MathUtil.sum("${expectedResult}", "${untrackedItems}");

		AssertTextEquals(
			key_statusName = "Total Pending",
			locator1 = "WorkflowMetrics#DASHBOARD_AND_PERFORMANCE_CARD_BY_PROCESS_STATUS",
			value1 = "${expectedResultTotal}");
	}

}