@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			JSONDepot.deleteDepot(depotName = "Remote Depot");

			Site.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This ensures that OG image tag can be viewed on the remote live site when enabling remote staging."
	@priority = "4"
	@refactorneeded
	test ViewOGImageTagOnLiveSite {
		property app.server.bundles.size = "1";
		property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
		property databases.size = "1";
		property minimum.slave.ram = "24";
		property test.name.skip.portal.instance = "DepotStaging#ViewOGImageTagOnLiveSite";

		Depot.remoteStagingSetUpViaJson(
			groupName = "Test Depot Name",
			remotePort = "9080",
			site = "false");

		Staging.remoteStagingSetUpViaJson(
			groupName = "Site Name",
			remotePort = "9080");

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Test Depot Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive(remoteStaging = "true");

		SitePages.openPagesAdmin(siteURLKey = "site-name");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page");

		Navigator.gotoNavTab(navTab = "Open Graph");

		OpenGraph.configureOpenGraph(
			customImage = "true",
			depotName = "Test Depot Name",
			uploadFileName = "Document_2.jpg");

		Navigator.openSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		var depotID = Depot.getDepotID(depotName = "Remote Depot");

		User.logoutPG();

		Navigator.openSpecificURL(url = "http://localhost:9080/web/remote-site/test-page");

		OpenGraph.viewOpenGraphProperties(ogPropertyList = '''"og:image" content="http://localhost:9080/documents/${depotID}/0/Document_2.jpg''');
	}

}