@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Depot";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			Site.tearDownCP();

			DMDocument.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This ensures that the approved image from a depot is available to use in its connected site."
	@priority = "5"
	@refactorneeded
	test ApproveImage {
		property portal.acceptance = "true";

		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg");

		AssertTextEquals(
			key_dmDocumentTitle = "Document_1.jpg",
			locator1 = "DocumentsAndMedia#ICON_DOCUMENT_WORKFLOW_STATUS",
			value1 = "Pending");

		BlogsNavigator.openToAddEntry(siteURLKey = "site-name");

		BlogsNavigator.gotoSelectFile();

		SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

		AssertClick(
			key_navTab = "Documents and Media",
			locator1 = "ItemSelector#NAVIGATION_SPECIFIC_TAB",
			value1 = "Documents and Media");

		ManagementBar.setFilterAndOrder(filterBy = "Everywhere");

		Click(
			key_rowEntry = "DM Folder Name",
			locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME");

		AssertElementNotPresent(
			key_imageFileName = "Document_1.jpg",
			locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no documents or media files in this folder.");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Document_1.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Document_1.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewCPStatus(
			dmDocumentStatus = "Approved",
			dmDocumentTitle = "Document_1.jpg");

		BlogsNavigator.openToAddEntry(siteURLKey = "site-name");

		BlogsNavigator.gotoSelectFile();

		ItemSelector.selectRepositoryImage(
			depotName = "Test Depot Name",
			folderName = "DM Folder Name",
			imageFileName = "Document_1.jpg",
			navTab = "Documents and Media");
	}

	@description = "This ensures that the approved WC article from a depot is available to use in its connected site."
	@priority = "5"
	@refactorneeded
	test ApproveWCArticle {
		property portal.acceptance = "true";

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Web Content",
			fieldName = "Web Content");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Web Content",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			available = "false",
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			structureName = "WC Structure Name",
			webContentSelectWCFile = "WC Depot WebContent",
			webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentSelectWCFile = "Depot WebContent Title",
			webContentTitle = "WC WebContent Title");

		PortletEntry.submitForPublication();
	}

	@description = "This test covers LPS-113392. It ensures that an asset library WC article can be approved by the content reviewer."
	@priority = "5"
	@refactorneeded
	test ApproveWCArticleByContentReviewer {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONUser.addUser(
			userEmailAddress = "user1@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "user1@liferay.com");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepotPortlet(
			depotName = "Test Depot Name",
			portlet = "Memberships");

		Depot.assignUserAsMember(
			depotName = "Test Depot Name",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignAssetLibraryRole(
			roleTitle = "Asset Library Content Reviewer",
			userScreenName = "usersn");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepotPortlet(
			depotName = "Test Depot Name",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user1@liferay.com",
			userLoginFullName = "userfn userln");

		WorkflowAsset.gotoViaNotification(
			assetType = "Web Content Article",
			user = "Test Test");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		WorkflowAsset.gotoViaNotification(
			assetType = "Web Content Article",
			user = "Test Test");

		Workflow.assignByDetails(user = "usersn (userfn userln)");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user1@liferay.com",
			userLoginFullName = "userfn userln");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to Me");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title");
	}

	@description = "This ensures that a single approver workflow of web content can be defined for the asset library."
	@priority = "5"
	@refactorneeded
	test ApproveWCArticleWithinDepot {
		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepotPortlet(
			category = "Configuration",
			depotName = "Test Depot Name",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WorkflowAsset.gotoViaNotification(
			assetType = "Web Content Article",
			user = "Test Test");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title");
	}

	@description = "This ensures that the approved WC article in folder from a depot is available to use in its connected site."
	@priority = "5"
	@refactorneeded
	test ApproveWCInFolder {
		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name");

		WebContentFolder.configureWorkflowCP(
			folderName = "WC Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Web Content",
			fieldName = "Web Content");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Web Content",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			available = "false",
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			folderName = "WC Folder Name",
			structureName = "WC Structure Name",
			webContentSelectWCFile = "WC Depot WebContent",
			webContentTitle = "WC WebContent Title");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			folderName = "WC Folder Name",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentSelectWCFile = "Depot WebContent Title",
			webContentTitle = "WC WebContent Title");

		PortletEntry.publish();
	}

	@description = "This ensures that the resubmitted image from a depot is available to use in its connected site."
	@priority = "5"
	@refactorneeded
	test RejectAndResubmitImage {
		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMFolder.configureWorkflowCP(
			dmDocumentTypeName = "Basic Document",
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Specific Restrictions");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Document_1.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Document_1.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Notifications.gotoNotifications();

		AssertClick(
			locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
			value1 = "Your submission was rejected by Test Test, please modify and resubmit.");

		Workflow.gotoPreviewEdit();

		DMDocument.editDocument(
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "Document_2.jpg");

		Button.clickSubmitForPublication();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "Document_2.jpg",
			workflowAssetType = "Document",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Document_2.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Document_2.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewCPStatus(
			dmDocumentStatus = "Approved",
			dmDocumentTitle = "Document_2.jpg");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Image",
			fieldName = "Image");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Image",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			depotName = "Test Depot Name",
			folderName = "DM Folder Name",
			navTab = "Documents and Media",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentImage = "Document_2.jpg",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();
	}

	@description = "This ensures that the resubmitted WC article from a depot is available to use in its connected site."
	@priority = "5"
	@refactorneeded
	test RejectAndResubmitWC {
		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Navigator.gotoNavItem(navItem = "Configuration");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Notifications.gotoNotifications();

		AssertClick(
			locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
			value1 = "Your submission was rejected by Test Test, please modify and resubmit.");

		Workflow.gotoPreviewEdit();

		WebContent.editInReview(
			dropdownItem = "My Workflow Tasks",
			webContentTitleEdit = "Depot WebContent Title Edit");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title Edit");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "WC Structure Description",
			structureName = "WC Structure Name");

		DataEngine.addField(
			fieldFieldLabel = "Web Content",
			fieldName = "Web Content");

		WebContentStructures.saveCP(structureName = "WC Structure Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		NavItem.gotoTemplates();

		WebContentTemplates.addCP(
			structureName = "WC Structure Name",
			templateDescription = "WC Template Description",
			templateFieldNames = "Web Content",
			templateName = "WC Template Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			depotName = "Test Depot Name",
			fieldName = "WebContent",
			structureName = "WC Structure Name",
			templateName = "WC Template Name",
			webContentSelectWCFile = "Depot WebContent Title Edit",
			webContentTitle = "WC WebContent Title");

		PortletEntry.submitForPublication();
	}

	@description = "This ensures that the resubmitted web content can be approved in an asset library."
	@priority = "5"
	@refactorneeded
	test RejectandResubmitWCArticleWithinDepot {
		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepotPortlet(
			depotName = "Test Depot Name",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		Navigator.openURL();

		Notifications.gotoNotifications();

		AssertClick(
			locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
			value1 = "Your submission was rejected by Test Test, please modify and resubmit.");

		Workflow.gotoPreviewEdit();

		WebContent.addCP(webContentTitle = "Depot WebContent Title Edit");

		Button.clickSave();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.resubmitTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Update");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "Depot WebContent Title Edit",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title Edit");
	}

	@description = "This ensures that an asset library WC article can be rejected by the content reviewer."
	@priority = "5"
	@refactorneeded
	test RejectWCArticleByContentReviewer {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONUser.addUser(
			userEmailAddress = "user1@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "user1@liferay.com");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepotPortlet(
			category = "People",
			depotName = "Test Depot Name",
			portlet = "Memberships");

		Depot.assignUserAsMember(
			depotName = "Test Depot Name",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignAssetLibraryRole(
			roleTitle = "Asset Library Content Reviewer",
			userScreenName = "usersn");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepotPortlet(
			depotName = "Test Depot Name",
			portlet = "Workflow");

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Web Content Article");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addWithWorkflowCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");

		WorkflowAsset.gotoViaNotification(
			assetType = "Web Content Article",
			user = "Test Test");

		Workflow.assignByDetails(user = "usersn (userfn userln)");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user1@liferay.com",
			userLoginFullName = "userfn userln");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Navigator.gotoNavTab(navTab = "Assigned to Me");

		Workflow.rejectTaskByActions(
			workflowAssetTitle = "Depot WebContent Title",
			workflowAssetType = "Web Content Article",
			workflowTask = "Review");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Pending",
			webContentTitle = "Depot WebContent Title");
	}

	@description = "This ensures that a DM folder workflow can be restored to default from other settings."
	@priority = "4"
	@refactorneeded
	test RestoreDMFolderWorkflowToDefault {
		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMFolder.configureWorkflowCP(
			dmDocumentTypeName = "Basic Document",
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Specific Restrictions");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowRestriction = "Parent Folder");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addCP(
			dmDocumentDescription = "Depot Document Description",
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Depot Document Title");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.viewCPStatus(
			dmDocumentStatus = "Approved",
			dmDocumentTitle = "Depot Document Title");
	}

	@description = "This ensures that a WC folder workflow can be restored to default from other settings."
	@priority = "4"
	@refactorneeded
	test RestoreWCFolderWorkflowToDefault {
		DepotNavigator.openDepotWebContentAdmin(depotName = "Test Depot Name");

		WebContentFolder.addCP(
			folderDescription = "WC Folder Description",
			folderName = "WC Folder Name");

		WebContentFolder.configureWorkflowCP(
			folderName = "WC Folder Name",
			structureName = "Basic Web Content",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Specific Restrictions");

		WebContentFolder.configureWorkflowCP(
			folderName = "WC Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		WebContentFolder.configureWorkflowCP(
			folderName = "WC Folder Name",
			workflowRestriction = "Parent Folder");

		WebContentFolder.gotoCP(
			folderName = "WC Folder Name",
			webContentTitle = "WC Folder Name");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			webContentContent = "Depot WebContent Content",
			webContentTitle = "Depot WebContent Title");

		PortletEntry.publish();

		WebContentNavigator.gotoViewStatus(
			webContentStatus = "Approved",
			webContentTitle = "Depot WebContent Title");
	}

	@description = "This ensures that the workflow can be set in an asset library."
	@priority = "5"
	@refactorneeded
	test Smoke {
		property portal.acceptance = "true";

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepotPortlet(
			category = "Configuration",
			depotName = "Test Depot Name",
			portlet = "Workflow");

		AssertVisible(
			key_rowEntry = "Web Content Article",
			locator1 = "Button#EDIT_ROW",
			value1 = "Edit");

		AssertElementNotPresent(
			key_rowEntry = "Blogs Entry",
			locator1 = "Button#EDIT_ROW");

		JSONDocument.addFolder(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name",
			groupName = "Test Depot Name");

		DepotNavigator.openDepotDocumentsAndMediaAdmin(depotName = "Test Depot Name");

		Depot.viewDMWorkflowPresent(dmFolderName = "DM Folder Name");

		DepotNavigator.openDepotSettingsGeneral(depotName = "Test Depot Name");

		Depot.configureApplication(
			applicationList = "Web Content",
			status = "Disabled");

		DepotNavigator.openDepotAdmin();

		DepotNavigator.gotoDepotPortlet(
			category = "Configuration",
			depotName = "Test Depot Name",
			portlet = "Workflow");

		Depot.viewNoWorkflowResource();
	}

}