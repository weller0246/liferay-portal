@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Shopping Experience";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();
		}
	}

	@description = "COMMERCE-6374. As a buyer, I want to be able to create a new order by clicking on 'Add Order' button"
	@priority = "3"
	test CreateNewOrderFromPendingOrdersPage {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SFCommerceOrders#CreateNewOrderFromPendingOrdersPage";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Test",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		Click.mouseDownMouseUp(
			key_text = "Add Order",
			locator1 = "Button#ANY");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		AssertElementPresent(
			key_errorMessage = "Approved",
			locator1 = "WorkflowMetricsSLA#SLA_ERROR_MESSAGE");
	}

	@description = "COMMERCE-6380. As a buyer, I want to be able to delete an Order in Pending Order details page"
	@priority = "3"
	test DeleteOrderFromPendingOrderDetailsPage {
		property portal.acceptance = "Intern Test";
		property test.name.skip.portal.instance = "SFCommerceOrders#DeleteOrderFromPendingOrderDetailsPage";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		Click(
			key_orderAuthor = "Test Account",
			locator1 = "CommerceAccelerators#ORDERS_ENTRY_VIEW_BUTTON");

		ClickNoError(
			key_text = "jbfs",
			locator1 = "Icon#SVG_ELLIPSIS_BY_ID");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		AssertElementNotPresent(
			key_orderAuthor = "Test Account",
			locator1 = "CommerceAccelerators#ORDERS_ENTRY_VIEW_BUTTON");
	}

	@description = "COMMERCE-6379. As a buyer, I want to be able to edit the order in Pending Order details page and I want to view the changes I made applied to order"
	@priority = "3"
	test EditOrderFromPendingOrderDetailsPage {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SFCommerceOrders#EditOrderFromPendingOrderDetailsPage";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Test",
			adminEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Accounts",
			panel = "Applications",
			portlet = "Accounts");

		CommerceNavigator.gotoEntry(entryName = "Test Test");

		CommerceEntry.gotoMenuTab(menuTab = "Addresses");

		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "Test");

		SelectField.select(
			selectFieldLabel = "Type",
			selectFieldValue = "Billing and Shipping");

		Type(
			locator1 = "TextInput#STREET_1",
			value1 = "Test Street");

		Select(
			locator1 = "Select#COUNTRY",
			value1 = "Italy");

		Type(
			locator1 = "TextInput#CITY",
			value1 = "Roma");

		Select(
			locator1 = "Select#REGION",
			value1 = "Roma");

		Type(
			locator1 = "TextInput#POSTAL_CODE",
			value1 = "00100");

		Type(
			locator1 = "TextInput#NUMBER",
			value1 = "1234");

		Button.clickSave();

		Alert.viewSuccessMessage();

		ApplicationsMenu.gotoSite(site = "Minium");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		ApplicationsMenu.gotoPortlet(
			category = "Order Management",
			panel = "Commerce",
			portlet = "Orders");

		Click(
			key_orderStatus = "Open",
			locator1 = "CommerceOrders#ORDER_ELLIPSIS_BY_STATUS");

		CommerceEntry.clickNoError(menuItem = "View");

		Click(
			key_buttonName = "Add",
			key_titleName = "Billing Address",
			locator1 = "CommerceOrders#ORDER_GENERAL_DETAILS_ADD_EDIT_BUTTON");

		SelectFrame(locator1 = "IFrame#MODAL_IFRAME");

		Click.clickNoWaitForVisible(
			key_radioOption = "",
			locator1 = "CommerceEntry#RADIO_BUTTON");

		Button.click(button = "Submit");

		SelectFrameTop();

		Click(
			key_buttonName = "Add",
			key_titleName = "Shipping Address",
			locator1 = "CommerceOrders#ORDER_GENERAL_DETAILS_ADD_EDIT_BUTTON");

		SelectFrame(locator1 = "IFrame#MODAL_IFRAME");

		Click.clickNoWaitForVisible(
			key_radioOption = "",
			locator1 = "CommerceEntry#RADIO_BUTTON");

		Button.click(button = "Submit");

		SelectFrameTop();

		Refresh();

		AssertTextEquals.assertPartialText(
			key_titleName = "Billing Address",
			locator1 = "CommerceOrders#ORDER_GENERAL_DETAILS_DESCRIPTION",
			value1 = "Test Street, Roma");

		AssertTextEquals.assertPartialText(
			key_titleName = "Shipping Address",
			locator1 = "CommerceOrders#ORDER_GENERAL_DETAILS_DESCRIPTION",
			value1 = "Test Street, Roma");
	}

	@description = "COMMERCE-6383. As a buyer, I want to be able to Reorder the Placed Order by clicking on 'Reorder' button"
	@priority = "3"
	test ReorderFromPlacedOrdersDetailsPage {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SFCommerceOrders#ReorderFromPlacedOrdersDetailsPage";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "View Details");

		Button.click(button = "Checkout");

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			productName = "U-Joint",
			productQuantity = "1",
			productUnitPrice = "24",
			shippingMethod = "Standard");

		Click(
			key_text = "Go to Order Details",
			locator1 = "Button#ANY");

		Click(
			key_text = "Reorder",
			locator1 = "Button#ANY");

		for (var iterator : list "1,2,3,4,5") {
			if ("${iterator}" == "2") {
				Click(
					key_radioOption = "Standard",
					locator1 = "CommerceEntry#RADIO_BUTTON");
			}
			else {
				Click(locator1 = "Button#CONTINUE");
			}
		}

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Placed Orders");

		AssertTextEquals(
			locator1 = "CommerceEntry#PAGINATION_RESULTS",
			value1 = "Showing 1 to 2 of 2");
	}

	@description = "COMMERCE-6375. As a buyer, I want to be able to search for one pending order using the search bar"
	@priority = "3"
	test SearchOrderInPendingOrdersPage {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SFCommerceOrders#SearchOrderInPendingOrdersPage";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Test",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		Click.mouseDownMouseUp(
			key_text = "Add Order",
			locator1 = "Button#ANY");

		SelectFrameTop();

		var firstOrderId = selenium.getText("CommerceEntry#ACTIVE_ORDER_ID");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		Click.mouseDownMouseUp(
			key_text = "Add Order",
			locator1 = "Button#ANY");

		SelectFrameTop();

		var secondOrderId = selenium.getText("CommerceEntry#ACTIVE_ORDER_ID");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		CommerceNavigator.searchEntry(entryName = "${firstOrderId}");

		AssertElementPresent(
			key_errorMessage = "${firstOrderId}",
			locator1 = "WorkflowMetricsSLA#SLA_ERROR_MESSAGE");

		AssertElementNotPresent(
			key_errorMessage = "${secondOrderId}",
			locator1 = "WorkflowMetricsSLA#SLA_ERROR_MESSAGE");
	}

	@description = "COMMERCE-6381. As a buyer, I want to be able to search for one placed order using the search bar"
	@priority = "3"
	test SearchOrderInPlacedOrdersPage {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SFCommerceOrders#SearchOrderInPlacedOrdersPage";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		Click(
			key_text = "Add Order",
			locator1 = "Button#ANY");

		SelectFrameTop();

		var firstOrderId = selenium.getText("CommerceEntry#ACTIVE_ORDER_ID");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "View Details");

		Button.click(button = "Checkout");

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			productName = "U-Joint",
			productQuantity = "1",
			productUnitPrice = "24",
			shippingMethod = "Standard");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		Click(
			key_text = "Add Order",
			locator1 = "Button#ANY");

		SelectFrameTop();

		var secondOrderId = selenium.getText("CommerceEntry#ACTIVE_ORDER_ID");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "Transmission Cooler Line Assembly",
			productQuantity = "2");

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "View Details");

		Button.click(button = "Checkout");

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			productName = "Transmission Cooler Line Assembly",
			productQuantity = "2",
			productUnitPrice = "15",
			shippingMethod = "Standard");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Placed Orders");

		CommerceNavigator.searchEntry(entryName = "${firstOrderId}");

		AssertElementPresent(
			key_errorMessage = "${firstOrderId}",
			locator1 = "WorkflowMetricsSLA#SLA_ERROR_MESSAGE");

		AssertElementNotPresent(
			key_errorMessage = "${secondOrderId}",
			locator1 = "WorkflowMetricsSLA#SLA_ERROR_MESSAGE");
	}

	@description = "COMMERCE-6665. I want to be able to select a Display Template in Pending Orders widget and see it applied to the widget"
	@priority = "3"
	test UseADTInPendingOrdersWidget {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SFCommerceOrders#UseADTInPendingOrdersWidget";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		Pause(locator1 = "5000");

		var orderId = selenium.getText("CommerceEntry#ACTIVE_ORDER_ID");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Pending Orders");

		MouseOver(locator1 = "CommerceEntry#PAGINATION_BAR");

		Click.clickNoWaitForVisible(
			key_text = "qfkd",
			locator1 = "Icon#SVG_ELLIPSIS_BY_ID");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Click(
			key_text = "Manage Templates",
			locator1 = "Link#ANY");

		SelectFrameTop();

		SelectFrame(
			key_title = "Widget Templates",
			locator1 = "IFrame#MODAL_ANY");

		Click(locator1 = "Button#PLUS");

		Type(
			key_fieldLabel = "Name",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "Pending Orders Template");

		Click(
			key_fieldName = "Commerce Orders",
			locator1 = "DDMEditTemplate#SCRIPT_FIELD");

		Button.clickSave();

		SelectFrameTop();

		Click(
			key_modalTitle = "Widget Templates",
			locator1 = "Button#CLOSE_MODAL");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Select(
			key_selectFieldLabel = "Display Template",
			locator1 = "Select#ANY",
			value1 = "Pending Orders Template");

		Button.clickSave();

		SelectFrameTop();

		Click(
			key_modalTitle = "Open Carts",
			locator1 = "Button#CLOSE_MODAL");

		AssertElementPresent(
			key_portletName = "${orderId}",
			locator1 = "Portlet#BODY");
	}

	@description = "COMMERCE-6666. I want to be able to select a Display Template in Placed Orders widget and see it applied to the widget"
	@priority = "3"
	test UseADTInPlacedOrdersWidget {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SFCommerceOrders#UseADTInPlacedOrdersWidget";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		Pause(locator1 = "5000");

		var orderId = selenium.getText("CommerceEntry#ACTIVE_ORDER_ID");

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "View Details");

		Button.click(button = "Checkout");

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			productName = "U-Joint",
			productQuantity = "1",
			productUnitPrice = "24",
			shippingMethod = "Standard");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Placed Orders");

		MouseOver(locator1 = "CommerceEntry#PAGINATION_BAR");

		Click.clickNoWaitForVisible(
			key_text = "qfkd",
			locator1 = "Icon#SVG_ELLIPSIS_BY_ID");

		MenuItem.click(menuItem = "Configuration");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Click(
			key_text = "Manage Templates",
			locator1 = "Link#ANY");

		SelectFrameTop();

		SelectFrame(
			key_title = "Widget Templates",
			locator1 = "IFrame#MODAL_ANY");

		Click(locator1 = "Button#PLUS");

		Type(
			key_fieldLabel = "Name",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "Placed Orders Template");

		Click(
			key_fieldName = "Commerce Orders",
			locator1 = "DDMEditTemplate#SCRIPT_FIELD");

		Button.clickSave();

		SelectFrameTop();

		Click(
			key_modalTitle = "Widget Templates",
			locator1 = "Button#CLOSE_MODAL");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Select(
			key_selectFieldLabel = "Display Template",
			locator1 = "Select#ANY",
			value1 = "Placed Orders Template");

		Button.clickSave();

		SelectFrameTop();

		Click(locator1 = "CommerceEntry#MODAL_CLOSE");

		AssertElementPresent(
			key_portletName = "${orderId}",
			locator1 = "Portlet#BODY");
	}

	@description = "COMMERCE-6382. As a buyer, I want to be able to see the list of shipments for an order item by clicking on 'Shipments'"
	@priority = "3"
	test ViewListOfShipmentsInPlacedOrdersDetailsPage {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "SFCommerceOrders#ViewListOfShipmentsInPlacedOrdersDetailsPage";

		// TODO Review

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Account Management");

		CommerceAcceleratorsInitializer.createNewAccountViaFront(
			accountName = "Test Account",
			adminEmailAddress = "test@liferay.com");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Catalog");

		ApplicationsMenu.gotoSite(site = "Minium");

		FrontStore.addInitializerProductToCart(
			productName = "U-Joint",
			productQuantity = "1");

		CommerceNavigator.gotoMiniCart();

		Button.click(button = "View Details");

		Button.click(button = "Checkout");

		CommerceCheckout.initializersCheckout(
			newAddressAddress = "Test Address",
			newAddressCity = "Test City",
			newAddressCountry = "United States",
			newAddressName = "Address Name",
			newAddressZipCode = "Test Zip Code",
			productName = "U-Joint",
			productQuantity = "1",
			productUnitPrice = "24",
			shippingMethod = "Standard");

		CommerceNavigator.gotoPortlet(
			category = "Order Management",
			portlet = "Orders");

		CommerceNavigator.gotoOrderEntryViaAdmin(status = "Pending");

		Click(
			key_text = "Accept Order",
			locator1 = "Button#ANY");

		CommerceOrders.createShipment(
			carrierDetail = "Test Carrier",
			complement = "Deliver",
			productSKUList = "MIN55861",
			warehouseName = "Italy");

		ApplicationsMenu.gotoSite(site = "Minium");

		CommerceNavigator.gotoMiniumSidebarItem(menuItem = "Placed Orders");

		Click(
			key_orderAuthor = "Test Account",
			locator1 = "CommerceAccelerators#ORDERS_ENTRY_VIEW_BUTTON");

		Click(
			key_text = "Shipments",
			locator1 = "Button#ANY");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertVisible(
			key_title = "Shipments",
			locator1 = "Header#H2_TITLE");

		for (var currentRow : list "status;Delivered,carrier;Test Carrier,tracking-number;Test Tracking Number") {
			var currentColumn = StringUtil.extractFirst("${currentRow}",";");
			var currentValue = StringUtil.extractLast("${currentRow}",";");

			AssertTextEquals(
				key_columnName = "${currentColumn}",
				key_tableEntry = "",
				locator1 = "LexiconTable#TABLE_ENTRY_INFO",
				value1 = "${currentValue}");
		}
	}

}