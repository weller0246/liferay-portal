@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Product Info Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceConfiguration.commerceAdminTearDown();

			CommerceConfiguration.commerceInitializersTearDown();

			User.logoutPG();
		}
	}

	test CreateAnOption {
		property portal.acceptance = "true";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Options");

		CPCommerceCatalog.newOptionsEntry(
			optionDescription = "Option Description",
			optionFieldType = "Text",
			optionName = "Color");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		CommerceEntry.viewOptionsEntry(
			optionDescription = "Option Description",
			optionName = "Color");
	}

	@description = "This is a test for COMMERCE-6280. RemoveAnOption"
	@priority = "3"
	test RemoveAnOption {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "CPCommerceOptions#RemoveAnOption";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Options");

		CPCommerceCatalog.newOptionsEntry(
			optionDescription = "",
			optionFieldType = "Select from List",
			optionName = "Color");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		CPCommerceCatalog.addOptionValues(optionValuesList = "Black:0");

		Button.clickSave();

		AssertElementPresent(locator1 = "Message#SUCCESS");

		Click(locator1 = "Icon#BACK");

		ClickNoError(
			key_value = "Color",
			locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertElementPresent(locator1 = "Message#SUCCESS");
	}

}