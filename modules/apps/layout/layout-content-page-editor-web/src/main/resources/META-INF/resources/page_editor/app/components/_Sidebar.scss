@import './variables';

$toolbarHeight: 112px;
$sidebarButtonHeight: $sidebarButtonWidth;
$desktopToolbarHeight: 64px;

// z-indexes for childern of page-editor-sidebar (which is a stacking context).

$zIndexButtons: 1;
$zIndexContent: 0;

html#{$cadmin-selector} {
	.cadmin {
		&.page-editor__sidebar {
			display: flex;
			height: calc(100vh - #{$desktopToolbarHeight});
			position: fixed;
			right: 0;
			top: $desktopToolbarHeight;
			z-index: $sidebarZIndex;
		}

		.page-editor__sidebar {
			&__buttons {
				background-color: $cadmin-secondary-d1;
				flex-direction: column;
				padding-top: 16px;
				width: $sidebarButtonWidth;
				z-index: $zIndexButtons;

				&.light {
					background-color: $cadmin-gray-200;
					font-size: 14px;
					padding: 16px 5px;
					width: 42px;

					button {
						color: $cadmin-secondary;
						margin-bottom: 4px;

						&.active,
						&:active,
						&:focus,
						&:hover {
							background-color: $cadmin-light-d1;
							color: $cadmin-secondary-d2;
						}
					}

					a {
						color: $cadmin-secondary;
						height: 32px;

						&.active,
						&:active,
						&:focus,
						&:hover {
							background-color: $cadmin-light-d1;
							color: $cadmin-secondary-d2;
						}
					}
				}

				a {
					align-items: center;
					border-radius: 4px;
					color: $cadmin-secondary-l1;
					display: flex;
					height: 2.5em;
					justify-content: center;

					&.active,
					&:active,
					&:focus,
					&:hover {
						color: $cadmin-white;
					}

					&:focus {
						box-shadow: 0 0 0 2px $cadmin-white,
							0 0 0 4px $cadmin-primary-l1,
							inset 0 0 rgba(0, 0, 0, 0);
						outline: none;
					}
				}

				button {
					color: $cadmin-secondary-l1;

					&.active,
					&:active,
					&:focus,
					&:hover {
						color: $cadmin-white;
					}
				}

				hr {
					border-color: $cadmin-secondary;
					margin: 12px 8px;
				}
			}

			&__content {
				background-color: $cadmin-white;
				border-left: 1px solid $cadmin-secondary-l3;
				height: calc(100vh - #{$controlMenuHeight + $toolbarHeight});
				overflow-x: hidden;
				position: fixed;
				right: $sidebarButtonWidth;
				transform: translateX(100%);
				transition: transform ease $defaultTransitionDuration;
				width: $sidebarContentWidth;
				z-index: $zIndexContent;

				&--open.page-editor__sidebar__content {
					transform: translateX(0%);
				}

				@include media-breakpoint-up(sm, $cadmin-grid-breakpoints) {
					height: calc(
						100vh - #{$desktopControlMenuHeight + $toolbarHeight}
					);
				}

				@include media-breakpoint-up(xl, $cadmin-grid-breakpoints) {
					height: calc(
						100vh - #{$desktopControlMenuHeight +
							$desktopToolbarHeight}
					);
				}
			}
		}
	}

	.page-editor__wrapper {
		padding-right: $sidebarButtonWidth;
		position: relative;
		transition: padding-left ease $defaultTransitionDuration,
			padding-right ease $defaultTransitionDuration;
		will-change: padding-left, padding-right;

		&--padded {
			@include media-breakpoint-up(sm) {
				padding-right: $sidebarButtonWidth + $sidebarContentWidth;
			}
		}
	}

	body.has-control-menu .cadmin.page-editor__sidebar {
		height: calc(100vh - #{$controlMenuHeight + $toolbarHeight});
		top: $controlMenuHeight + $toolbarHeight;

		@include media-breakpoint-up(sm, $cadmin-grid-breakpoints) {
			height: calc(100vh - #{$desktopControlMenuHeight + $toolbarHeight});
			top: $desktopControlMenuHeight + $toolbarHeight;
		}

		@include media-breakpoint-up(xl, $cadmin-grid-breakpoints) {
			height: calc(
				100vh - #{$desktopControlMenuHeight + $desktopToolbarHeight}
			);
			top: $desktopControlMenuHeight + $desktopToolbarHeight;
		}
	}
}
