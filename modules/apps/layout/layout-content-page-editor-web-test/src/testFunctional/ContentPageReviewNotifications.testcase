@component-name = "portal-collaboration"
definition {

	property custom.properties = "default.layout.template.id=1_column${line.separator}jsonws.web.service.paths.excludes=";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Page Review";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Import test fragments from dependencies folder") {
			FragmentsAdminNavigator.openFragmentsAdmin(siteURLKey = "test-site-name");

			FragmentsAdmin.importCollectionFromDependenciesFolder(collectionZipFile = "fragment-collection.zip");
		}

		task ("Add second user with administrator permissions") {
			JSONUser.addUser(
				userEmailAddress = "user2@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "user2");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "user2@liferay.com");

			JSONRole.assignRoleToUser(
				roleTitle = "Administrator",
				userEmailAddress = "user2@liferay.com");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");

			JSONUser.tearDownNonAdminUsers();
		}
	}

	@description = "This case ensures that the user is notified when someone comments on their content page fragment."
	@priority = "5"
	@refactordone
	test CanViewComment {
		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Content Page Name",
			type = "content");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user2@liferay.com",
			userLoginFullName = "userfn userln");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addComment(
			fragmentComment = "Comment by User 2",
			fragmentName = "Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewComment(
			contentBody = "Comment by User 2",
			fragmentName = "Title",
			user = "userfn userln");

		Notifications.navigateToContent(contentBody = "Comment by User 2");

		PageEditor.viewComment(
			fragmentComment = "Comment by User 2",
			fromNotifications = "true");
	}

	@description = "This test covers LPS-101493. It ensures that a user who replies to a comment will receive further reply notifications."
	@priority = "4"
	@refactordone
	test CanViewCommentFurtherReply {
		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Content Page Name",
			type = "content");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title");

		PageEditor.addComment(
			fragmentComment = "Comment By User 1",
			fragmentName = "Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user2@liferay.com",
			userLoginFullName = "userfn userln");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.gotoCommentViaFragment(
			content = "Lorem ipsum dolor sit amet",
			fragmentClass = "header",
			fragmentName = "Title");

		PageEditor.replyToComment(commentReply = "Reply from User 2");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.gotoCommentViaFragment(
			content = "Lorem ipsum dolor sit amet",
			fragmentClass = "header",
			fragmentName = "Title");

		PageEditor.replyToComment(commentReply = "Reply from User Test");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user2@liferay.com",
			userLoginFullName = "userfn userln");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewComment(
			contentBody = "Reply from User Test",
			fragmentName = "Title",
			user = "Test Test");

		Notifications.navigateToContent(contentBody = "Reply from User Test");

		PageEditor.viewComment(
			fragmentComment = "Reply from User Test",
			fromNotifications = "true");
	}

	@description = "This case ensures that a user is notified when a reply is added to their comment."
	@priority = "5"
	@refactordone
	test CanViewCommentReply {
		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Content Page Name",
			type = "content");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title");

		PageEditor.addComment(
			fragmentComment = "Comment By User 1",
			fragmentName = "Title");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user2@liferay.com",
			userLoginFullName = "userfn userln");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.gotoCommentViaFragment(
			content = "Lorem ipsum dolor sit amet",
			fragmentClass = "header",
			fragmentName = "Title");

		PageEditor.replyToComment(commentReply = "Reply from User 2");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewComment(
			contentBody = "Reply from User 2",
			fragmentName = "Title",
			user = "userfn userln");

		Notifications.navigateToContent(contentBody = "Reply from User 2");

		PageEditor.viewCommentReply(
			commentReply = "Reply from User 2",
			user = "userfn userln");
	}

	@description = "This case ensures a user who is mentioned in a comment will receive notifications."
	@priority = "4"
	@refactordone
	test CanViewMentionFromComment {
		User.logoutAndLoginPG(
			userLoginEmailAddress = "user2@liferay.com",
			userLoginFullName = "userfn userln");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Content Page Name",
			type = "content");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Content Page Name",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Collection Name",
			fragmentName = "Title");

		PageEditor.addComment(
			fragmentComment = "Comment by Test",
			fragmentName = "Title",
			mentionsUserFullName = "userfn userln",
			mentionsUserScreenName = "user2");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "user2@liferay.com",
			userLoginFullName = "userfn userln");

		Notifications.viewBadgeCount(
			activePanel = "Notifications",
			notificationCount = "1");

		Notifications.gotoNotifications();

		Notifications.viewNewComment(
			assetType = "fragment",
			contentBody = "Comment by Test @user2",
			mentioned = "true",
			user = "Test Test");

		Notifications.navigateToContent(contentBody = "Comment by Test @user2");

		PageEditor.viewComment(
			fragmentComment = "Comment by Test ",
			mentionsUserFullName = "My Site",
			mentionsUserScreenName = "user2");
	}

}