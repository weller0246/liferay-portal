@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "SEO";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a Page via JSON") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name");
		}
	}

	@description = "This ensures that the custom meta tag can be added with escape characters."
	@priority = "3"
	@refactordone
	test CanAddTagWithEscapeCharacters {
		var portalURL = PropsUtil.get("portal.url");

		CustomMetaTags.openToCustomMetaTags(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			siteURLKey = "test-site-name");

		CustomMetaTags.addTag(
			customContent = "&amp; content",
			customProperty = "&amp; property");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		CustomMetaTags.viewTags(customMetaTagsList = '''property="&amp; property" content="&amp; content"''');
	}

	@description = "This ensures that the custom meta tag can be cleared."
	@priority = "5"
	@refactordone
	test CanClearCustomTag {
		var portalURL = PropsUtil.get("portal.url");

		CustomMetaTags.openToCustomMetaTags(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			siteURLKey = "test-site-name");

		CustomMetaTags.addTag(
			customContent = "custom meta content",
			customProperty = "custom meta property");

		CustomMetaTags.editTag(
			customContent = "custom meta content",
			customProperty = "custom meta property",
			newCustomContent = "",
			newCustomProperty = "");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		CustomMetaTags.viewNoTags(customMetaTagsList = '''property="custom meta property" content="custom meta content",property="" content=""''');
	}

	@description = "This ensures that the custom meta tag can be edited."
	@priority = "5"
	@refactordone
	test CanEditTag {
		var portalURL = PropsUtil.get("portal.url");

		CustomMetaTags.openToCustomMetaTags(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			siteURLKey = "test-site-name");

		CustomMetaTags.addTag(
			customContent = "custom meta content",
			customProperty = "custom meta property");

		CustomMetaTags.editTag(
			customContent = "custom meta content",
			customProperty = "custom meta property",
			newCustomContent = "custom meta content edit",
			newCustomProperty = "custom meta property edit");

		Alert.viewSuccessMessage();

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		CustomMetaTags.viewTags(customMetaTagsList = '''property="custom meta property edit" content="custom meta content edit"''');
	}

	@description = "This ensures that users can add multiple translated custom meta tags."
	@priority = "5"
	@refactordone
	test CanViewMultipleTranslatedTags {
		var portalURL = PropsUtil.get("portal.url");

		CustomMetaTags.openToCustomMetaTags(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			siteURLKey = "test-site-name");

		CustomMetaTags.addTag(
			customContent = "custom Tag 1 content",
			customProperty = "custom Tag 1 property");

		CustomMetaTags.addMultipleTags(customTagsList = "custom Tag 2,custom Tag 3");

		CustomMetaTags.changeLocale(locale = "ca-ES");

		CustomMetaTags.editMultipleTags(
			customContentsList = "custom Tag 1 content,custom Tag 2 content,custom Tag 3 content",
			newCustomContent = "contenido de metaetiqueta personalizado");

		CustomMetaTags.removeTag(tagNum = "2");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/ca/web/test-site-name/test-page-name");

		CustomMetaTags.viewTags(customMetaTagsList = '''property="custom Tag 1 property" content="contenido de metaetiqueta personalizado",property="custom Tag 3 property" content="contenido de metaetiqueta personalizado"''');

		CustomMetaTags.viewNoTags(customMetaTagsList = '''property="custom Tag 2 property" content="contenido de metaetiqueta personalizado"''');
	}

	@description = "This test covers LPS-125971. It ensures that the custom meta tag can be viewed in the HTML after editing and republishing the page."
	@priority = "4"
	@refactordone
	test CanViewTagAfterEditingPage {
		var portalURL = PropsUtil.get("portal.url");

		CustomMetaTags.openToCustomMetaTags(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			siteURLKey = "test-site-name");

		CustomMetaTags.addTag(
			customContent = "custom meta content",
			customProperty = "custom meta property");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		CustomMetaTags.viewTags(customMetaTagsList = '''property="custom meta property" content="custom meta content"''');

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		Navigator.gotoEditPageViaControlMenu(pageName = "Test Page Name");

		PortletEntry.save();

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		CustomMetaTags.viewTags(customMetaTagsList = '''property="custom meta property" content="custom meta content"''');
	}

	@description = "This ensures that the custom meta tag can not be generated without property or content."
	@priority = "5"
	@refactordone
	test CanViewTagWithoutPropertyOrContent {
		var portalURL = PropsUtil.get("portal.url");

		CustomMetaTags.openToCustomMetaTags(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			siteURLKey = "test-site-name");

		CustomMetaTags.addTag(
			customContent = "custom meta content",
			customProperty = "custom meta property");

		CustomMetaTags.editTag(
			customContent = "custom meta content",
			customProperty = "custom meta property",
			newCustomContent = "custom meta content edit",
			newCustomProperty = "");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		CustomMetaTags.viewNoTags(customMetaTagsList = '''property="custom meta property" content="custom meta content",property="" content="custom meta content edit"''');

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		CustomMetaTags.openToCustomMetaTags(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			siteURLKey = "test-site-name");

		CustomMetaTags.editTag(
			customContent = "custom meta content edit",
			customProperty = "",
			newCustomContent = "",
			newCustomProperty = "custom meta property edit");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name/test-page-name");

		CustomMetaTags.viewNoTags(customMetaTagsList = '''property="custom meta property edit" content=""''');
	}

	@description = "This ensures that the translated tag inherits the default property and content."
	@priority = "4"
	@refactordone
	test CanViewTranslatedTagWithDefaultValue {
		var portalURL = PropsUtil.get("portal.url");

		CustomMetaTags.openToCustomMetaTags(
			groupName = "Test Site Name",
			layoutName = "Test Page Name",
			siteURLKey = "test-site-name");

		CustomMetaTags.addTag(
			customContent = "custom meta content",
			customProperty = "custom meta property");

		CustomMetaTags.changeLocale(locale = "ca-ES");

		CustomMetaTags.viewDisabledProperty(customContent = "custom meta content");

		Navigator.openSpecificURL(url = "${portalURL}/c/portal/logout");

		Navigator.openSpecificURL(url = "${portalURL}/ca/web/test-site-name/test-page-name");

		CustomMetaTags.viewTags(customMetaTagsList = '''property="custom meta property" content="custom meta content"''');
	}

}