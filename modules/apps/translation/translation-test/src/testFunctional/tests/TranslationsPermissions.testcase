@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Translation Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@description = "This ensures that the user can not translate a web content to an unavailable language."
	@priority = "4"
	@refactorneeded
	test TranslateWCToUnavailableLanguage {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_translation_web_internal_portlet_TranslationPortlet",
				roleTitle = "Regrole Name");
		}

		for (var resourceNameIndex : list "com.liferay.translation.zh_CN") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "TRANSLATE",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		Site.openSiteSettingsAdmin(siteURLKey = "guest");

		Site.configureCurrentLanguagesCP(
			currentSiteLanguages = "English (United States),Spanish (Spain),Arabic (Saudi Arabia),Catalan (Spain),Dutch (Netherlands),Finnish (Finland),French (France),German (Germany),Hungarian (Hungary),Japanese (Japan),Portuguese (Brazil),Swedish (Sweden)",
			defaultSiteLanguage = "English (United States)");

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Alert.viewInfoMessageSpecific(infoMessage = "You do not have permissions to translate to any of the available languages.");
	}

	@description = "This ensures that the user can not translate a web content without any languages permissions."
	@priority = "4"
	@refactorneeded
	test TranslateWCWithoutLanguagesPermissions {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		JSONRole.addRegularRole(roleTitle = "Regrole Name");

		JSONRole.assignRoleToUser(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com");

		for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_translation_web_internal_portlet_TranslationPortlet",
				roleTitle = "Regrole Name");
		}

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Alert.viewInfoMessageSpecific(infoMessage = "You do not have permissions to translate to any of the available languages.");
	}

	@description = "This ensures that the user can translate a Web content to the language she has permissions."
	@priority = "5"
	@refactorneeded
	test TranslateWCWithSpecificLanguagesPermissions {
		property custom.properties = "jsonws.web.service.paths.excludes=";

		JSONWebcontent.addWebContent(
			content = "WC WebContent Content",
			groupName = "Guest",
			title = "WC WebContent Title");

		Permissions.setUpRegRoleLoginUserCP(
			roleTitle = "Regrole Name",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_SITE_ADMINISTRATION",
			resourceName = "com.liferay.portal.kernel.model.Group",
			roleTitle = "Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_journal_web_portlet_JournalPortlet",
			roleTitle = "Regrole Name");

		for (var resourceNameIndex : list "com_liferay_journal_web_portlet_JournalPortlet,com.liferay.journal,com.liferay.journal.model.JournalArticle") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "VIEW",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		for (var resourceActionIndex : list "ACCESS_IN_CONTROL_PANEL,VIEW") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "${resourceActionIndex}",
				resourceName = "com_liferay_translation_web_internal_portlet_TranslationPortlet",
				roleTitle = "Regrole Name");
		}

		for (var resourceNameIndex : list "com.liferay.translation.es_ES,com.liferay.translation.zh_CN") {
			Permissions.definePermissionViaJSONAPI(
				resourceAction = "TRANSLATE",
				resourceName = "${resourceNameIndex}",
				roleTitle = "Regrole Name");
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.viewTargetLocales(
			currentTargetLocale = "zh-CN",
			noTargetLocale = "ar-SA,ca-ES,nl-NL,fi-FI,fr-FR,de-DE,hu-HU,ja-JP,pt-BR,sv-SE",
			targetLocale = "es-ES,zh-CN");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "guest");

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "zh-CN",
			newTargetLocale = "es-ES");

		Translations.viewBaseFields(
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		Translations.translateFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		PortletEntry.publish();

		Translations.gotoTranslate(webContentTitle = "WC WebContent Title");

		Translations.changeTargetLocale(
			currentTargetLocale = "zh-CN",
			newTargetLocale = "es-ES");

		Translations.viewTargetFields(
			webContentContent = "WC WebContent Contenido",
			webContentDescription = "WC WebContent Descripción",
			webContentTitle = "WC WebContent Título");

		Translations.openTranslationAdmin(siteURLKey = "guest");

		Translations.viewTranslationEntry(
			language = "es-ES",
			status = "Approved",
			title = "Translation of WC WebContent Title to es-ES");
	}

}