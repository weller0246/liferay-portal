@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Item Selector";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			BlogsEntry.tearDownCP();

			DMFolder.tearDownCP();

			User.logoutPG();
		}
	}

	@description = "This makes sure that multiple blog images can be previewed by using the keyboard."
	@priority = "5"
	@refactordone
	test CanPreviewMultipleImagesInBlogsImages {
		for (var num : list "1,2,3") {
			JSONBlog.uploadBlogImage(
				groupName = "Guest",
				sourceFileName = "Document_${num}.jpg");
		}

		BlogsNavigator.openToAddEntry(siteURLKey = "guest");

		BlogsNavigator.gotoSelectFile();

		ItemSelector.gotoPreviewViaSelectFile(navTab = "Blog Images");

		ItemSelector.viewPreview(
			footer = "1 of 3",
			imageFileName = "Document_1.jpg");

		KeyPress(
			locator1 = "ItemSelector#VIEWER_RIGHT",
			value1 = "\RIGHT");

		KeyPress(
			locator1 = "ItemSelector#VIEWER_LEFT",
			value1 = "\LEFT");

		KeyPress(
			locator1 = "ItemSelector#VIEWER_LEFT",
			value1 = "\LEFT");

		ItemSelector.viewPreview(
			footer = "3 of 3",
			imageFileName = "Document_3.jpg");

		KeyPress(
			locator1 = "ItemSelector#VIEWER_INFO",
			value1 = "\ESCAPE");

		SelectFrame(value1 = "relative=top");

		Click(
			key_modalTitle = "Select File",
			locator1 = "Button#CLOSE_MODAL");

		for (var coverImageName : list "Document_1,Document_2,Document_3") {
			AssertElementNotPresent(
				key_coverImageName = "${coverImageName}",
				locator1 = "BlogsEntry#ENTRY_COVER_IMAGE_UNPUBLISHED");
		}
	}

	@description = "This makes sure that multiple DM images can be previewed by using the keyboard."
	@priority = "5"
	@refactordone
	test CanPreviewMultipleImagesInDM {
		for (var documentTitle : list "Document_1,Document_2,Document_3") {
			JSONDocument.addFileWithUploadedFile(
				dmDocumentDescription = "DM Document Description",
				dmDocumentTitle = "${documentTitle}",
				groupName = "Guest",
				mimeType = "image/jpeg",
				sourceFileName = "${documentTitle}.jpg");
		}

		BlogsNavigator.openToAddEntry(siteURLKey = "guest");

		BlogsNavigator.gotoSelectFile();

		ItemSelector.gotoPreviewViaSelectFile(navTab = "Documents and Media");

		ItemSelector.viewPreview(
			footer = "1 of 3",
			imageFileName = "Document_1");

		AssertVisible(locator1 = "ItemSelector#VIEWER_LEFT");

		AssertVisible(locator1 = "ItemSelector#VIEWER_RIGHT");

		KeyPress(
			locator1 = "ItemSelector#VIEWER_RIGHT",
			value1 = "\RIGHT");

		KeyPress(
			locator1 = "ItemSelector#VIEWER_LEFT",
			value1 = "\LEFT");

		KeyPress(
			locator1 = "ItemSelector#VIEWER_LEFT",
			value1 = "\LEFT");

		ItemSelector.viewPreview(
			footer = "3 of 3",
			imageFileName = "Document_3");

		KeyPress(
			locator1 = "ItemSelector#VIEWER_INFO",
			value1 = "\ESCAPE");

		SelectFrame(value1 = "relative=top");

		Click(
			key_modalTitle = "Select File",
			locator1 = "Button#CLOSE_MODAL");

		for (var coverImageName : list "Document_1,Document_2,Document_3") {
			AssertElementNotPresent(
				key_coverImageName = "${coverImageName}",
				locator1 = "BlogsEntry#ENTRY_COVER_IMAGE_UNPUBLISHED");
		}
	}

	@description = "This ensures that navigation arrows do not appear in image preview when there is only one image in the library."
	@priority = "5"
	@refactordone
	test CanPreviewSingleImage {
		property portal.acceptance = "true";

		Blogs.addImageToBlogImages(
			siteURLKey = "guest",
			uploadFileNames = "Document_1.jpg");

		BlogsNavigator.openToAddEntry(siteURLKey = "guest");

		BlogsNavigator.gotoSelectFile();

		ItemSelector.gotoPreviewViaSelectFile(navTab = "Blog Images");

		ItemSelector.viewPreview(
			footer = "1 of 1",
			imageFileName = "Document_1.jpg");

		AssertElementNotPresent(locator1 = "ItemSelector#VIEWER_LEFT");

		AssertElementNotPresent(locator1 = "ItemSelector#VIEWER_RIGHT");
	}

}