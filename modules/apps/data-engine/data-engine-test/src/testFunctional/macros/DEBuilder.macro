definition {

	macro addField {
		Navigator.gotoSidebarTab(tabName = "Builder");

		Navigator.gotoNavTab(navTab = "Fields");

		if (!(isSet(fieldLocation))) {
			var fieldLocation = "last()";
		}

		DragAndDrop.javaScriptDragAndDropToObject(
			key_fieldLocation = "${fieldLocation}",
			key_fieldName = "${fieldName}",
			locator1 = "Sidebar#ADD_FIELD_NAME",
			locator2 = "Sidebar#ADD_FIELD_POSITION",
			value1 = "${fieldName}");

		WaitForVisible(locator1 = "Sidebar#BACK");

		Type(
			key_fieldLabel = "Label",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "${fieldLabel}");

		Click(locator1 = "Sidebar#BACK");
	}

	macro addFieldNested {
		Navigator.gotoSidebarTab(tabName = "Builder");

		Navigator.gotoNavTab(navTab = "Fields");

		if (isSet(targetFieldsGroupLabel)) {
			DragAndDrop.javaScriptDragAndDropToObject(
				key_fieldFieldGroupLabel = "${targetFieldsGroupLabel}",
				key_fieldName = "${fieldName}",
				locator1 = "Sidebar#ADD_FIELD_NAME",
				locator2 = "DDMEditStructure#FORM_FIELD_GROUP_TARGET",
				value1 = "${fieldName}");
		}
		else {
			DragAndDrop.javaScriptDragAndDropToObject(
				key_fieldFieldLabel = "${targetFieldLabel}",
				key_fieldName = "${fieldName}",
				locator1 = "Sidebar#ADD_FIELD_NAME",
				locator2 = "DDMEditStructure#FORM_FIELD_CONTAINER",
				value1 = "${fieldName}");
		}

		WaitForVisible(locator1 = "Sidebar#BACK");

		Type(
			key_fieldLabel = "Label",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "${fieldLabel}");

		Click(locator1 = "Sidebar#BACK");
	}

	macro addFieldOptions {
		if (!(isSet(index))) {
			var index = "1";
		}

		DEBuilder.openField(
			fieldLabel = "${fieldLabel}",
			index = "${index}");

		var optionIndex = "1";

		for (var optionValue : list "${optionValueList}") {
			if (isSet(optionFieldLabel)) {
				Type(
					index = "${optionIndex}",
					key_optionFieldLabel = "${optionFieldLabel}",
					locator1 = "Sidebar#OPTION_INPUT",
					value1 = "${optionValue}");
			}
			else {
				Type(
					index = "${optionIndex}",
					locator1 = "Sidebar#OPTION_INPUT_WITHOUT_LABEL",
					value1 = "${optionValue}");
			}

			var optionIndex = ${optionIndex} + 1;
		}

		Click(locator1 = "Sidebar#BACK");
	}

	macro addFieldsetNestedToBuilder {
		Navigator.gotoSidebarTab(tabName = "Builder");

		Navigator.gotoNavTab(navTab = "Fieldsets");

		if (isSet(targetFieldsGroupLabel)) {
			DragAndDrop.javaScriptDragAndDropToObject(
				key_fieldFieldGroupLabel = "${targetFieldsGroupLabel}",
				key_fieldName = "${fieldsetName}",
				locator1 = "Sidebar#ADD_FIELD_NAME",
				locator2 = "DDMEditStructure#FORM_FIELD_GROUP_TARGET",
				value1 = "${fieldsetName}");
		}
		else {
			DragAndDrop.javaScriptDragAndDropToObject(
				key_fieldFieldLabel = "${targetFieldLabel}",
				key_fieldName = "${fieldsetName}",
				locator1 = "Sidebar#ADD_FIELD_NAME",
				locator2 = "DDMEditStructure#FORM_FIELD_CONTAINER",
				value1 = "${fieldsetName}");
		}

		Click(locator1 = "Sidebar#BACK");
	}

	macro assertDeleteIsDisabled {
		AssertElementPresent(
			key_text = "Delete",
			locator1 = "Button#ANY_DISABLED");
	}

	macro assertFieldActionsIsNotPresent {
		if (!(isSet(index))) {
			var index = "1";
		}

		AssertElementNotPresent(
			index = "${index}",
			key_fieldLabel = "${fieldLabel}",
			locator1 = "DataEngineBuilder#FIELD_ACTIONS_CONTAINER_INDEXED");
	}

	macro assertFieldNotPresent {
		if (!(isSet(index))) {
			var index = "1";
		}

		if (IsElementPresent(locator1 = "Modal#MODAL")) {
			AssertElementNotPresent(
				index = "${index}",
				key_fieldLabel = "${fieldLabel}",
				locator1 = "DataEngineBuilder#FIELD_LABEL_IN_MODAL_INDEXED");
		}
		else {
			AssertElementNotPresent(
				index = "${index}",
				key_fieldLabel = "${fieldLabel}",
				locator1 = "DataEngineBuilder#FIELD_LABEL_INDEXED");
		}
	}

	macro assertFieldOptionLabels {
		Navigator.gotoSidebarTab(tabName = "Builder");

		AssertClick.assertPartialTextClickAt(
			key_fieldFieldLabel = "${fieldFieldLabel}",
			locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_LABEL",
			value1 = "${fieldFieldLabel}");

		if (IsTextEqual(locator1 = "DataEngineBuilder#SIDEBAR_FIELD_NAME_BUTTON", value1 = "Grid")) {
			var index = "1";

			for (var optionLabel : list "${optionLabelList}") {
				AssertTextEquals(
					index = "${index}",
					key_optionFieldLabel = "${optionFieldLabel}",
					locator1 = "Sidebar#OPTION_INPUT",
					value1 = "${optionLabel}");

				var index = ${index} + 1;
			}
		}
		else if (IsTextEqual(locator1 = "DataEngineBuilder#SIDEBAR_FIELD_NAME_BUTTON", value1 = "Select from List")) {
			var index = "1";

			for (var optionLabel : list "${optionLabelList}") {
				AssertTextEquals(
					index = "${index}",
					locator1 = "Sidebar#OPTION_INPUT_WITHOUT_LABEL",
					value1 = "${optionLabel}");

				var index = ${index} + 1;
			}
		}
		else {
			var index = "1";

			for (var optionLabel : list "${optionLabelList}") {
				AssertTextEquals(
					index = "${index}",
					key_optionFieldLabel = "Options",
					locator1 = "Sidebar#OPTION_INPUT",
					value1 = "${optionLabel}");

				var index = ${index} + 1;
			}
		}
	}

	macro assertFieldOptionLabelsNotPresent {
		if (isSet(fieldFieldLabel)) {
			AssertClick.assertPartialTextClickAt(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER",
				value1 = "${fieldFieldLabel}");
		}

		if (isSet(optionFieldLabel)) {
			for (var optionLabel : list "${optionLabelList}") {
				AssertElementNotPresent(
					key_optionFieldLabel = "${optionFieldLabel}",
					key_optionValue = "${optionLabel}",
					locator1 = "DataEngineBuilder#OPTION_VALUE_INPUT_WITH_LABEL");
			}
		}
		else {
			for (var optionLabel : list "${optionLabelList}") {
				AssertElementNotPresent(
					key_optionValue = "${optionLabel}",
					locator1 = "DataEngineBuilder#OPTION_VALUE_INPUT");
			}
		}

		if (isSet(fieldFieldLabel)) {
			Click(locator1 = "Sidebar#BACK");
		}
	}

	macro assertFieldReference {
		if (!(isSet(index))) {
			var index = "1";
		}

		DEBuilder.openField(
			fieldLabel = "${fieldLabel}",
			index = "${index}");

		Navigator.gotoNavTab(navTab = "Advanced");

		AssertTextEquals.assertValue(
			locator1 = "Sidebar#DDM_FIELD_REFERENCE",
			value1 = "${fieldReference}");

		Click(locator1 = "Sidebar#BACK");
	}

	macro assertFieldsetNotPresentInSidebar {
		Navigator.gotoSidebarTab(tabName = "Builder");

		Navigator.gotoNavTab(navTab = "Fieldsets");

		AssertElementNotPresent(
			key_fieldName = "${fieldsetName}",
			locator1 = "Sidebar#ADD_FIELD_NAME");
	}

	macro assertFieldsGroup {
		for (var fieldFieldLabel : list "${fieldsLabelList}") {
			AssertElementPresent(
				key_fieldFieldLabel = "${fieldFieldLabel}",
				key_fieldGroupDepth = "${fieldGroupDepth}",
				key_fieldGroupLabel = "${fieldGroupLabel}",
				locator1 = "DataEngineBuilder#FIELDS_GROUP_FIELD_WITH_DEPTH");
		}
	}

	macro assertFieldType {
		AssertTextEquals(
			locator1 = "DataEngineBuilder#SIDEBAR_FIELD_NAME_BUTTON",
			value1 = "${fieldType}");
	}

	macro assertOptionReferences {
		if (!(isSet(index))) {
			var index = "1";
		}

		DEBuilder.openField(
			fieldLabel = "${fieldLabel}",
			index = "${index}");

		var optionIndex = "1";

		for (var optionReference : list "${optionReferenceList}") {
			if (isSet(optionFieldLabel)) {
				AssertTextEquals.assertValue(
					index = "${optionIndex}",
					key_optionFieldLabel = "${optionFieldLabel}",
					locator1 = "Sidebar#OPTION_FIELD_REFERENCE_INPUT",
					value1 = "${optionReference}");
			}
			else {
				AssertTextEquals.assertValue(
					index = "${optionIndex}",
					locator1 = "Sidebar#OPTION_WITHOUT_LABEL_FIELD_REFERENCE_INPUT",
					value1 = "${optionReference}");
			}

			var optionIndex = ${optionIndex} + 1;
		}

		Click(locator1 = "Sidebar#BACK");
	}

	macro assertPropagateChangesModalIsOpened {
		AssertTextEquals(
			locator1 = "DataEngineModal#MODAL_TITLE",
			value1 = "Propagate Changes");
	}

	macro deleteFieldsetFromSideBar {
		Navigator.gotoSidebarTab(tabName = "Builder");

		Navigator.gotoNavTab(navTab = "Fieldsets");

		DataEngine.gotoFieldsetItemEllipsis(fieldsetName = "${fieldsetName}");

		MenuItem.click(menuItem = "Delete");

		Button.clickDelete();
	}

	macro editFieldReference {
		if (!(isSet(index))) {
			var index = "1";
		}

		DEBuilder.openField(
			fieldLabel = "${fieldLabel}",
			index = "${index}");

		Navigator.gotoNavTab(navTab = "Advanced");

		Type(
			key_fieldLabel = "Field Reference",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "${fieldReference}");

		if (isSet(assertErrorMessage)) {
			AssertTextEquals(
				locator1 = "DataEngineBuilder#FIELD_REFERENCE_ERROR",
				value1 = "${assertErrorMessage}");
		}

		Click(locator1 = "Sidebar#BACK");
	}

	macro editOptionReferences {
		if (!(isSet(index))) {
			var index = "1";
		}

		DEBuilder.openField(
			fieldLabel = "${fieldLabel}",
			index = "${index}");

		var optionIndex = "1";

		for (var optionReference : list "${optionReferenceList}") {
			if (isSet(optionFieldLabel)) {
				Type(
					index = "${optionIndex}",
					key_optionFieldLabel = "${optionFieldLabel}",
					locator1 = "Sidebar#OPTION_FIELD_REFERENCE_INPUT",
					value1 = "${optionReference}");

				if (isSet(assertErrorMessage) && ("${optionIndex}" == "${assertOptionIndex}")) {
					AssertTextEquals(
						index = "${assertOptionIndex}",
						key_optionFieldLabel = "${optionFieldLabel}",
						locator1 = "DataEngineBuilder#OPTION_REFERENCE_ERROR_WITH_LABEL",
						value1 = "${assertErrorMessage}");
				}
			}
			else {
				Type(
					index = "${optionIndex}",
					locator1 = "Sidebar#OPTION_WITHOUT_LABEL_FIELD_REFERENCE_INPUT",
					value1 = "${optionReference}");

				if (isSet(assertErrorMessage) && ("${optionIndex}" == "${assertOptionIndex}")) {
					AssertTextEquals(
						index = "${assertOptionIndex}",
						locator1 = "DataEngineBuilder#OPTION_REFERENCE_ERROR",
						value1 = "${assertErrorMessage}");
				}
			}

			var optionIndex = ${optionIndex} + 1;
		}

		Click(locator1 = "Sidebar#BACK");
	}

	macro getFieldReference {
		if (!(isSet(index))) {
			var index = "1";
		}

		DEBuilder.openField(
			fieldLabel = "${fieldLabel}",
			index = "${index}");

		Navigator.gotoNavTab(navTab = "Advanced");

		var fieldReference = selenium.getElementValue(locator1 = "Sidebar#DDM_FIELD_REFERENCE");

		Click(locator1 = "Sidebar#BACK");

		return "${fieldReference}";
	}

	macro getOptionReference {
		if (!(isSet(index))) {
			var index = "1";
		}

		DEBuilder.openField(
			fieldLabel = "${fieldLabel}",
			index = "${index}");

		if (isSet(optionFieldLabel)) {
			var index = "${optionIndex}";
			var key_optionFieldLabel = "${optionFieldLabel}";
			var optionReference = selenium.getElementValue(locator1 = "Sidebar#OPTION_FIELD_REFERENCE_INPUT");
		}
		else {
			var index = "${optionIndex}";
			var optionReference = selenium.getElementValue(locator1 = "Sidebar#OPTION_WITHOUT_LABEL_FIELD_REFERENCE_INPUT");
		}

		Click(locator1 = "Sidebar#BACK");

		return "${optionReference}";
	}

	macro nestCreatedFields {
		if (isSet(targetFieldGroupLabel)) {
			DragAndDrop.javaScriptDragAndDropToObject(
				key_fieldFieldGroupLabel = "${targetFieldGroupLabel}",
				key_fieldFieldLabel = "${fieldLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER",
				locator2 = "DDMEditStructure#FORM_FIELD_GROUP_TARGET");
		}
		else {
			DragAndDrop.javaScriptDragAndDropToObject(
				key_fieldFieldLabel = "${fieldLabel}",
				key_targetFieldLabel = "${targetFieldLabel}",
				locator1 = "DDMEditStructure#FORM_FIELD_CONTAINER_TARGET",
				locator2 = "DDMEditStructure#FORM_FIELD_CONTAINER");
		}
	}

	macro openField {
		if (!(isSet(index))) {
			var index = "1";
		}

		if (IsElementPresent(locator1 = "Modal#MODAL")) {
			AssertClick.assertPartialTextClickAt(
				index = "${index}",
				key_fieldLabel = "${fieldLabel}",
				locator1 = "DataEngineBuilder#FIELD_LABEL_IN_MODAL_INDEXED",
				value1 = "${fieldLabel}");
		}
		else {
			AssertClick.assertPartialTextClickAt(
				index = "${index}",
				key_fieldLabel = "${fieldLabel}",
				locator1 = "DataEngineBuilder#FIELD_LABEL_INDEXED",
				value1 = "${fieldLabel}");
		}
	}

}