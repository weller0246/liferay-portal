@component-name = "data-engine"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Data Engine";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LRQA-66585. This test validates the creation, edition and persistence of fields with Options on the Web Content Admin."
	@priority = "5"
	test AddAndEditTranslatedFieldsWithOptions {
		property portal.acceptance = "true";

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		for (var fieldName : list "Multiple Selection,Single Selection,Select from List") {
			DataEngine.addField(
				fieldFieldLabel = "${fieldName}",
				fieldName = "${fieldName}");
		}

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			for (var index : list "1,2,3") {
				DataEngine.addFieldOption(
					fieldFieldLabel = "${fieldName}",
					index = "${index}",
					optionValue = "Option ${index}");
			}
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContentStructures.addName(structureName = "WC Structure Title - pt-BR");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DataEngine.editFieldLabel(
				fieldFieldLabel = "${fieldName}",
				fieldFieldLabelEdit = "${fieldName} - pt-BR");
		}

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			for (var index : list "1,2,3") {
				DataEngine.addFieldOption(
					fieldFieldLabel = "${fieldName} - pt-BR",
					index = "${index}",
					optionValue = "Option ${index} - pt-BR");
			}
		}

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DataEngine.viewField(
				fieldFieldLabel = "${fieldName}",
				fieldName = "${fieldName}");
		}

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DEBuilder.assertFieldOptionLabels(
				fieldFieldLabel = "${fieldName}",
				optionLabelList = "Option 1,Option 2,Option 3");
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DataEngine.viewField(
				fieldFieldLabel = "${fieldName} - pt-BR",
				fieldName = "${fieldName}");
		}

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DEBuilder.assertFieldOptionLabels(
				fieldFieldLabel = "${fieldName} - pt-BR",
				optionLabelList = "Option 1 - pt-BR,Option 2 - pt-BR,Option 3 - pt-BR");
		}

		PortletEntry.changeLocale(locale = "en-US");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DataEngine.editFieldLabel(
				fieldFieldLabel = "${fieldName}",
				fieldFieldLabelEdit = "${fieldName} - edited");
		}

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			for (var index : list "1,2,3") {
				DataEngine.addFieldOption(
					fieldFieldLabel = "${fieldName} - edited",
					index = "${index}",
					optionValue = "Option ${index} - edited");
			}
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DataEngine.editFieldLabel(
				fieldFieldLabel = "${fieldName} - pt-BR",
				fieldFieldLabelEdit = "${fieldName} - pt-BR edited");
		}

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			for (var index : list "1,2,3") {
				DataEngine.addFieldOption(
					fieldFieldLabel = "${fieldName} - pt-BR edited",
					index = "${index}",
					optionValue = "Option ${index} - pt-BR edited");
			}
		}

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DataEngine.viewField(
				fieldFieldLabel = "${fieldName} - edited",
				fieldName = "${fieldName}");
		}

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DEBuilder.assertFieldOptionLabels(
				fieldFieldLabel = "${fieldName} - edited",
				optionLabelList = "Option 1 - edited,Option 2 - edited,Option 3 - edited");
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DataEngine.viewField(
				fieldFieldLabel = "${fieldName} - pt-BR edited",
				fieldName = "${fieldName}");
		}

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			DEBuilder.assertFieldOptionLabels(
				fieldFieldLabel = "${fieldName} - pt-BR edited",
				optionLabelList = "Option 1 - pt-BR edited,Option 2 - pt-BR edited,Option 3 - pt-BR edited");
		}

		WebContentStructures.saveCP();

		NavItem.gotoWebContent();

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			WebContent.assertFieldOnWebContent(fieldFieldLabel = "${fieldName} - edited");
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		for (var fieldName : list "Select from List,Single Selection,Multiple Selection") {
			WebContent.assertFieldOnWebContent(fieldFieldLabel = "${fieldName} - pt-BR edited");
		}

		PortletEntry.changeLocale(locale = "en-US");

		WebContent.addWithStructureCP(
			webContentMultipleSelection = "Option 1 - edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - edited",
			webContentSelectFromList = "Option 1 - edited",
			webContentSelectFromListFieldLabel = "Select from List - edited",
			webContentSingleSelection = "Option 1 - edited",
			webContentSingleSelectionFieldLabel = "Single Selection - edited",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentMultipleSelection = "Option 2 - pt-BR edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - pt-BR edited",
			webContentSelectFromList = "Option 2 - pt-BR edited",
			webContentSelectFromListFieldLabel = "Select from List - pt-BR edited",
			webContentSingleSelection = "Option 2 - pt-BR edited",
			webContentSingleSelectionFieldLabel = "Single Selection - pt-BR edited",
			webContentTitle = "Web Content Title - pt-BR");

		DataEngine.toggleMultipleSelectionOption(
			webContentMultipleSelection = "Option 1 - pt-BR edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - pt-BR edited");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentMultipleSelection = "Option 1 - edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - edited",
			webContentSelectFromList = "Option 1 - edited",
			webContentSelectFromListFieldLabel = "Select from List - edited",
			webContentSingleSelection = "Option 1 - edited",
			webContentSingleSelectionFieldLabel = "Single Selection - edited",
			webContentTitle = "Web Content Title");

		WebContent.viewWithStructureCP(
			skipGotoEditCP = "true",
			webContentLocaleFieldLabel = "pt-BR",
			webContentMultipleSelection = "Option 2 - pt-BR edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - pt-BR edited",
			webContentSelectFromList = "Option 2 - pt-BR edited",
			webContentSelectFromListFieldLabel = "Select from List - pt-BR edited",
			webContentSingleSelection = "Option 2 - pt-BR edited",
			webContentSingleSelectionFieldLabel = "Single Selection - pt-BR edited",
			webContentTitle = "Web Content Title - pt-BR");

		PortletEntry.changeLocale(locale = "en-US");

		WebContent.addWithStructureCP(
			webContentMultipleSelection = "Option 3 - edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - edited",
			webContentSelectFromList = "Option 3 - edited",
			webContentSelectFromListFieldLabel = "Select from List - edited",
			webContentSingleSelection = "Option 3 - edited",
			webContentSingleSelectionFieldLabel = "Single Selection - edited");

		DataEngine.toggleMultipleSelectionOption(
			webContentMultipleSelection = "Option 1 - edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - edited");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentMultipleSelection = "Option 1 - pt-BR edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - pt-BR edited",
			webContentSelectFromList = "Option 1 - pt-BR edited",
			webContentSelectFromListFieldLabel = "Select from List - pt-BR edited",
			webContentSingleSelection = "Option 1 - pt-BR edited",
			webContentSingleSelectionFieldLabel = "Single Selection - pt-BR edited");

		DataEngine.toggleMultipleSelectionOption(
			webContentMultipleSelection = "Option 2 - pt-BR edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - pt-BR edited");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentMultipleSelection = "Option 3 - edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - edited",
			webContentSelectFromList = "Option 3 - edited",
			webContentSelectFromListFieldLabel = "Select from List - edited",
			webContentSingleSelection = "Option 3 - edited",
			webContentSingleSelectionFieldLabel = "Single Selection - edited",
			webContentTitle = "Web Content Title");

		WebContent.viewWithStructureCP(
			skipGotoEditCP = "true",
			webContentLocaleFieldLabel = "pt-BR",
			webContentMultipleSelection = "Option 1 - pt-BR edited",
			webContentMultipleSelectionFieldLabel = "Multiple Selection - pt-BR edited",
			webContentSelectFromList = "Option 1 - pt-BR edited",
			webContentSelectFromListFieldLabel = "Select from List - pt-BR edited",
			webContentSingleSelection = "Option 1 - pt-BR edited",
			webContentSingleSelectionFieldLabel = "Single Selection - pt-BR edited",
			webContentTitle = "Web Content Title - pt-BR");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "4"
	test CheckDefaultWebContentTitleOnWebContentList {
		property portal.acceptance = "false";

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		WebContent.addWithStructureCP(webContentTitle = "WC Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(webContentTitle = "Titulo do WC");

		PortletEntry.publish();

		AssertElementPresent(
			key_webContentTitle = "WC Title",
			locator1 = "WC#ENTRY_LIST_TITLE_NAME");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test CheckDuplicatedRepeatableStructureOnWebContent {
		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Text",
			fieldHelp = "Text Field Help Text");

		DataEngine.toggleFieldRepeatable(fieldFieldLabel = "Text");

		PortletEntry.changeLocale(locale = "pt-BR");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		DataEngine.editFieldTip(
			fieldFieldLabel = "Texto",
			fieldHelp = "Texto de ajuda do campo de texto");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		WebContent.addWithStructureCP(webContentTitle = "Web Content Title");

		DataEngine.addRepeatableField(fieldLabel = "Text");

		Type(
			index = "1",
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "This is a Text field");

		Type(
			index = "2",
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "This is a duplicated Text field");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(webContentTitle = "Título do conteúdo da web");

		Type(
			index = "1",
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "Este é um campo de texto");

		Type(
			index = "2",
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "Este é um campo de texto duplicado");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Web Content Title");

		AssertTextEquals.assertValue(
			index = "1",
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "This is a Text field");

		AssertTextEquals.assertValue(
			index = "2",
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "This is a duplicated Text field");

		for (var n : list "1,2") {
			AssertTextEquals(
				key_fieldFieldLabel = "Text",
				key_index = "${n}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT_ANY",
				value1 = "Text Field Help Text");
		}

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Título do conteúdo da web");

		AssertTextEquals.assertValue(
			index = "1",
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "Este é um campo de texto");

		AssertTextEquals.assertValue(
			index = "2",
			key_fieldFieldLabel = "Texto",
			locator1 = "WCEditWebContent#ANY_TEXT_INPUT",
			value1 = "Este é um campo de texto duplicado");

		for (var n : list "1,2") {
			AssertTextEquals(
				key_fieldFieldLabel = "Texto",
				key_index = "${n}",
				locator1 = "DDMEditStructure#SETTINGS_TEXT_ANY",
				value1 = "Texto de ajuda do campo de texto");
		}
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test CheckLanguageSelectorAndStructureTranslationsOnWebContent {
		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Structure Description",
			structureName = "WC Structure Title");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.changeLocale(locale = "zh-CN");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "文本");

		Click.clickNoMouseOver(locator1 = "Button#LOCALIZATION_GENERIC");

		AssertElementPresent(locator1 = "WCD#WEB_CONTENT_TRANSLATION_SPAN_LANGUAGE_ENGLISH");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		WebContent.addWithStructureCP(
			webContentText = "Content Text",
			webContentTitle = "WC Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addWithStructureCP(
			webContentText = "测试",
			webContentTextFieldLabel = "文本",
			webContentTitle = "测试");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "测试");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "文本",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "测试");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test CheckLocalizationOfWebContentUponLanguageChange {
		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		WebContent.addWithStructureCP(
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentText = "Este é um campo de texto",
			webContentTitle = "Título do conteúdo da web");

		PortletEntry.changeLocale(locale = "es-ES");

		WebContent.addWithStructureCP(
			webContentText = "Este es un campo de texto",
			webContentTitle = "Título de contenido web");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Título do conteúdo da web");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "Este é um campo de texto");

		PortletEntry.changeLocale(locale = "es-ES");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Título de contenido web");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "Este es un campo de texto");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test CheckStructureTranslationsOnWebContent {
		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Structure Description Test",
			structureName = "Structure Name Test");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.changeLocale(locale = "zh-CN");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "文本");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "Structure Name Test");

		WebContent.addWithStructureCP(
			webContentText = "Test",
			webContentTitle = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addWithStructureCP(
			webContentText = "测试",
			webContentTextFieldLabel = "文本",
			webContentTitle = "测试");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "测试");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "文本",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "测试");
	}

	@description = "This is a test for LRQA-66639. This test validates the creation, edition, deletion and persistence of fields into Web Contents."
	@priority = "5"
	test CreateEditAndDeleteLocalizedWebContent {
		property portal.acceptance = "true";

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DataEngine.addFields(fieldNameList = "Text,Numeric,Date");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		WebContent.addWithStructureCP(
			webContentDate = "04/01/2021",
			webContentNumeric = "12",
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentDate = "04/01/2021",
			webContentNumeric = "12",
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentDate = "12/04/2021",
			webContentNumeric = "28",
			webContentText = "This is a Text field - pt-BR",
			webContentTitle = "Web Content Title - pt-BR");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentDate = "04/01/2021",
			webContentNumeric = "12",
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		WebContent.viewWithStructureCP(
			skipGotoEditCP = "true",
			webContentDate = "12/04/2021",
			webContentLocaleFieldLabel = "pt-BR",
			webContentNumeric = "28",
			webContentText = "This is a Text field - pt-BR",
			webContentTitle = "Web Content Title - pt-BR");

		Navigator.gotoBack();

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Text - pt-BR");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Date",
			fieldFieldLabelEdit = "Date - pt-BR");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Numeric",
			fieldFieldLabelEdit = "Numeric - pt-BR");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.viewWithStructureCP(
			skipGotoEditCP = "true",
			webContentDate = "12/04/2021",
			webContentDateFieldLabel = "Date - pt-BR",
			webContentLocaleFieldLabel = "pt-BR",
			webContentNumeric = "28",
			webContentNumericFieldLabel = "Numeric - pt-BR",
			webContentText = "This is a Text field - pt-BR",
			webContentTextFieldLabel = "Text - pt-BR",
			webContentTitle = "Web Content Title - pt-BR");

		PortletEntry.changeLocale(locale = "en-US");

		WebContent.addWithStructureCP(
			webContentDate = "04/20/2021",
			webContentNumeric = "50",
			webContentText = "This is a Text field - en-US",
			webContentTitle = "Web Content Title - en-US");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentDate = "04/20/2021",
			webContentNumeric = "50",
			webContentText = "This is a Text field - en-US",
			webContentTitle = "Web Content Title - en-US");

		WebContent.viewWithStructureCP(
			skipGotoEditCP = "true",
			webContentDate = "12/04/2021",
			webContentDateFieldLabel = "Date - pt-BR",
			webContentLocaleFieldLabel = "pt-BR",
			webContentNumeric = "28",
			webContentNumericFieldLabel = "Numeric - pt-BR",
			webContentText = "This is a Text field - pt-BR",
			webContentTextFieldLabel = "Text - pt-BR",
			webContentTitle = "Web Content Title - pt-BR");

		Navigator.gotoBack();

		NavItem.gotoStructures();

		WebContentStructures.deleteCP(structureName = "WC Structure Title");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "The structure cannot be deleted because it is required by one or more structure links.");

		NavItem.click(navItem = "Web Content");

		WebContent.deleteCP(
			siteURLKey = "test-site-name",
			webContentTitle = "Web Content Title - en-US");

		NavItem.gotoStructures();

		WebContentStructures.deleteCP(structureName = "WC Structure Title");

		AssertElementNotPresent(
			key_ddlDataDefinitionName = "WC Structure Title",
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_LINK");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "4"
	test DefaultTitleDisplayedUponFirstlyTranslatingForAnotherLocale {
		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		WebContent.addWithStructureCP(webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "ca-ES");

		WebContent.addWithStructureCP(webContentTitle = "Web Content Title - ca_ES");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		AssertElementPresent(
			key_webContentTitle = "Web Content Title",
			locator1 = "TextInput#TITLE");

		PortletEntry.changeLocale(locale = "ca-ES");

		AssertElementPresent(
			key_webContentTitle = "Web Content Title - ca_ES",
			locator1 = "TextInput#TITLE");

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertElementPresent(
			key_webContentTitle = "Web Content Title",
			locator1 = "TextInput#TITLE");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "4"
	test DefaultTitlePersistsAfterTranslatingForAnotherLocale {
		WebContentNavigator.gotoAddCP();

		WebContent.addCP(webContentTitle = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addCP(webContentTitle = "测试");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Test");

		AssertAttributeValue(
			attribute1 = "value",
			locator1 = "TextInput#TITLE",
			value1 = "Test");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertAttributeValue(
			attribute1 = "value",
			locator1 = "TextInput#TITLE",
			value1 = "测试");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "4"
	test DefaultValuesDisplayedForNonTranslatedWebContent {
		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.changeLocale(locale = "pt-BR");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Texto");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		PortletEntry.viewLocale(
			locale = "en-US",
			portletName = "Web Content");

		WebContent.addWithStructureCP(
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentText = "Este é um campo de texto",
			webContentTextFieldLabel = "Texto",
			webContentTitle = "Título do conteúdo da web");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Web Content Title");

		PortletEntry.changeLocale(locale = "pt-BR");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Título do conteúdo da web");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "Web Content Title");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "This is a Text field");
	}

	@description = "This is a test for LRQA-66585. This test validates the creation, edition, duplication and persistence of Grid field on the Web Content Admin."
	@priority = "5"
	test DuplicateAndEditTranslatedFieldsWithOptions {
		property portal.acceptance = "true";

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		DataEngine.addField(
			fieldFieldLabel = "Grid",
			fieldName = "Grid");

		for (var index : list "1,2,3") {
			DataEngine.addFieldOption(
				fieldFieldLabel = "Grid",
				index = "${index}",
				optionFieldLabel = "Rows",
				optionValue = "Option ${index}");
		}

		for (var index : list "1,2,3") {
			DataEngine.addFieldOption(
				fieldFieldLabel = "Grid",
				index = "${index}",
				optionFieldLabel = "Columns",
				optionValue = "Option ${index}");
		}

		PortletEntry.changeLocale(locale = "ca-ES");

		WebContentStructures.addName(structureName = "WC Structure Title - ca-ES");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Grid",
			fieldFieldLabelEdit = "Grid - ca-ES");

		for (var index : list "1,2,3") {
			DataEngine.addFieldOption(
				fieldFieldLabel = "Grid - ca-ES",
				index = "${index}",
				optionFieldLabel = "Rows",
				optionValue = "Option ${index} - ca-ES");
		}

		for (var index : list "1,2,3") {
			DataEngine.addFieldOption(
				fieldFieldLabel = "Grid - ca-ES",
				index = "${index}",
				optionFieldLabel = "Columns",
				optionValue = "Option ${index} - ca-ES");
		}

		PortletEntry.changeLocale(locale = "en-US");

		DataEngine.duplicate(fieldFieldLabel = "Grid");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		DataEngine.viewField(
			fieldFieldLabel = "Grid",
			fieldName = "Grid");

		DEBuilder.assertFieldOptionLabels(
			fieldFieldLabel = "Grid",
			optionFieldLabel = "Rows",
			optionLabelList = "Option 1,Option 2,Option 3");

		DEBuilder.assertFieldOptionLabels(
			fieldFieldLabel = "Grid",
			optionFieldLabel = "Columns",
			optionLabelList = "Option 1,Option 2,Option 3");

		DataEngine.viewField(
			fieldFieldLabel = "Copy of Grid",
			fieldName = "Grid");

		DEBuilder.assertFieldOptionLabels(
			fieldFieldLabel = "Copy of Grid",
			optionFieldLabel = "Rows",
			optionLabelList = "Option 1,Option 2,Option 3");

		DEBuilder.assertFieldOptionLabels(
			fieldFieldLabel = "Copy of Grid",
			optionFieldLabel = "Columns",
			optionLabelList = "Option 1,Option 2,Option 3");

		PortletEntry.changeLocale(locale = "ca-ES");

		DataEngine.viewField(
			fieldFieldLabel = "Grid - ca-ES",
			fieldName = "Grid");

		DEBuilder.assertFieldOptionLabels(
			fieldFieldLabel = "Grid - ca-ES",
			optionFieldLabel = "Rows",
			optionLabelList = "Option 1 - ca-ES,Option 2 - ca-ES,Option 3 - ca-ES");

		DEBuilder.assertFieldOptionLabels(
			fieldFieldLabel = "Grid - ca-ES",
			optionFieldLabel = "Columns",
			optionLabelList = "Option 1 - ca-ES,Option 2 - ca-ES,Option 3 - ca-ES");

		DataEngine.viewField(
			fieldFieldLabel = "Copy of Grid - ca-ES",
			fieldName = "Grid");

		DEBuilder.assertFieldOptionLabels(
			fieldFieldLabel = "Copy of Grid - ca-ES",
			optionFieldLabel = "Rows",
			optionLabelList = "Option 1 - ca-ES,Option 2 - ca-ES,Option 3 - ca-ES");

		DEBuilder.assertFieldOptionLabels(
			fieldFieldLabel = "Copy of Grid - ca-ES",
			optionFieldLabel = "Columns",
			optionLabelList = "Option 1 - ca-ES,Option 2 - ca-ES,Option 3 - ca-ES");

		PortletEntry.changeLocale(locale = "en-US");

		DataEngine.delete(fieldFieldLabel = "Copy of Grid");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		DataEngine.assertFieldNotPresent(fieldFieldLabel = "Copy of Grid");

		Navigator.gotoBack();

		NavItem.gotoWebContent();

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		PortletEntry.inputTitle(title = "Web Content Title");

		for (var index : list "1,2,3") {
			WebContent.addWithStructureCP(
				column = "1",
				row = "${index}",
				webContentGrid = "true");
		}

		PortletEntry.changeLocale(locale = "ca-ES");

		PortletEntry.inputTitle(title = "Web Content Title - ca-ES");

		for (var index : list "1,2,3") {
			WebContent.addWithStructureCP(
				column = "2",
				row = "${index}",
				webContentGrid = "true",
				webContentGridFieldLabel = "Grid - ca-ES");
		}

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		for (var index : list "1,2,3") {
			WebContent.viewWithStructureCP(
				column = "1",
				row = "${index}",
				skipGotoEditCP = "true",
				webContentGrid = "true",
				webContentTitle = "Web Content Title");
		}

		PortletEntry.changeLocale(locale = "ca-ES");

		for (var index : list "1,2,3") {
			WebContent.viewWithStructureCP(
				column = "2",
				row = "${index}",
				skipGotoEditCP = "true",
				webContentGrid = "true",
				webContentGridFieldLabel = "Grid - ca-ES",
				webContentTitle = "Web Content Title - ca-ES");
		}

		PortletEntry.changeLocale(locale = "en-US");

		for (var index : list "1,2,3") {
			WebContent.addWithStructureCP(
				column = "3",
				row = "${index}",
				webContentGrid = "true");
		}

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		for (var index : list "1,2,3") {
			WebContent.viewWithStructureCP(
				column = "3",
				row = "${index}",
				skipGotoEditCP = "true",
				webContentGrid = "true",
				webContentTitle = "Web Content Title");
		}

		PortletEntry.changeLocale(locale = "ca-ES");

		for (var index : list "1,2,3") {
			WebContent.viewWithStructureCP(
				column = "2",
				row = "${index}",
				skipGotoEditCP = "true",
				webContentGrid = "true",
				webContentGridFieldLabel = "Grid - ca-ES",
				webContentTitle = "Web Content Title - ca-ES");
		}
	}

	@description = "This is a test for LRQA-66639. This test validates the creation, edition, deletion and persistence of fields into Web Contents in different instance language."
	@priority = "5"
	test LocalizedWebContentWithDifferentInstanceLanguage {
		property portal.acceptance = "quarantine";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Localization",
			configurationName = "Language",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.configureCurrentLanguagesCP(defaultPortalLanguage = "Portuguese (Brazil)");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Web Content");

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Title");

		AssertElementPresent(
			key_locale = "pt-BR",
			locator1 = "Translation#CURRENT_LOCALE");

		DataEngine.addFields(fieldNameList = "Text,Numeric,Date");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		WebContent.addWithStructureCP(
			webContentDate = "04/01/2021",
			webContentNumeric = "12",
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentDate = "04/01/2021",
			webContentNumeric = "12",
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		PortletEntry.changeLocale(locale = "ca-ES");

		WebContent.addWithStructureCP(
			webContentDate = "12/04/2021",
			webContentNumeric = "28",
			webContentText = "This is a Text field - ca-ES",
			webContentTitle = "Web Content Title - ca-ES");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentDate = "04/01/2021",
			webContentNumeric = "12",
			webContentText = "This is a Text field",
			webContentTitle = "Web Content Title");

		WebContent.viewWithStructureCP(
			skipGotoEditCP = "true",
			webContentDate = "12/04/2021",
			webContentLocaleFieldLabel = "ca-ES",
			webContentNumeric = "28",
			webContentText = "This is a Text field - ca-ES",
			webContentTitle = "Web Content Title - ca-ES");

		Navigator.gotoBack();

		NavItem.gotoStructures();

		WebContentNavigator.gotoEditStructure(structureName = "WC Structure Title");

		PortletEntry.changeLocale(locale = "ca-ES");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "Text - ca-ES");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Date",
			fieldFieldLabelEdit = "Date - ca-ES");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Numeric",
			fieldFieldLabelEdit = "Numeric - ca-ES");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoEditCP(webContentTitle = "Web Content Title");

		WebContent.viewWithStructureCP(
			skipGotoEditCP = "true",
			webContentDate = "12/04/2021",
			webContentDateFieldLabel = "Date - ca-ES",
			webContentLocaleFieldLabel = "ca-ES",
			webContentNumeric = "28",
			webContentNumericFieldLabel = "Numeric - ca-ES",
			webContentText = "This is a Text field - ca-ES",
			webContentTextFieldLabel = "Text - ca-ES",
			webContentTitle = "Web Content Title - ca-ES");

		PortletEntry.changeLocale(locale = "pt-BR");

		WebContent.addWithStructureCP(
			webContentDate = "18/04/2021",
			webContentNumeric = "50",
			webContentText = "This is a Text field - pt-BR",
			webContentTitle = "Web Content Title - pt-BR");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			webContentDate = "18/04/2021",
			webContentNumeric = "50",
			webContentText = "This is a Text field - pt-BR",
			webContentTitle = "Web Content Title - pt-BR");

		WebContent.viewWithStructureCP(
			skipGotoEditCP = "true",
			webContentDate = "12/04/2021",
			webContentDateFieldLabel = "Date - ca-ES",
			webContentLocaleFieldLabel = "ca-ES",
			webContentNumeric = "28",
			webContentNumericFieldLabel = "Numeric - ca-ES",
			webContentText = "This is a Text field - ca-ES",
			webContentTextFieldLabel = "Text - ca-ES",
			webContentTitle = "Web Content Title - ca-ES");

		Navigator.gotoBack();

		NavItem.gotoStructures();

		WebContentStructures.deleteCP(structureName = "WC Structure Title");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR",
			value1 = "The structure cannot be deleted because it is required by one or more structure links.");

		NavItem.click(navItem = "Web Content");

		WebContent.deleteCP(
			siteURLKey = "test-site-name",
			webContentTitle = "Web Content Title - pt-BR");

		NavItem.gotoStructures();

		WebContentStructures.deleteCP(structureName = "WC Structure Title");

		AssertElementNotPresent(
			key_ddlDataDefinitionName = "WC Structure Title",
			locator1 = "DDMSelectStructure#DDM_STRUCTURE_TABLE_NAME_LINK");

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Localization",
			configurationName = "Language",
			configurationScope = "Virtual Instance Scope");

		PortalSettings.configureCurrentLanguagesCP(defaultPortalLanguage = "English (United States)");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test TranslateWebContentWithAllFields {
		for (var n : list "1,2") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name ${n}");
		}

		for (var n : list "1,2") {
			JSONWebcontent.addWebContent(
				content = "Web Content Content",
				groupName = "Test Site Name",
				title = "Web Content Title ${n}");
		}

		NavItem.gotoStructures();

		WebContentStructures.addCP(structureName = "WC Structure Name");

		DataEngine.addFields(fieldNameList = "Text,Select from List,Single Selection,Multiple Selection,Grid,Date,Numeric,Image,Rich Text,Upload,Color,Web Content,Geolocation,Separator,Link to Page");

		WebContentStructures.addLocalization(
			locale = "zh-CN",
			localization1Name = "网页内容结构");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "文本框");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Select from List",
			fieldFieldLabelEdit = "下拉列表");

		DataEngine.addFieldOption(
			fieldFieldLabel = "下拉列表",
			index = "1",
			optionValue = "选择 2");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Single Selection",
			fieldFieldLabelEdit = "单选列表框");

		DataEngine.addFieldOption(
			fieldFieldLabel = "单选列表框",
			index = "1",
			optionValue = "选择 3");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Multiple Selection",
			fieldFieldLabelEdit = "复选列表框");

		DataEngine.addFieldOption(
			fieldFieldLabel = "复选列表框",
			index = "1",
			optionValue = "选择 1");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Grid",
			fieldFieldLabelEdit = "网格");

		var index = "1";

		for (var optionValue : list "R3,R4") {
			DataEngine.addFieldOption(
				fieldFieldLabel = "网格",
				index = "${index}",
				optionFieldLabel = "Rows",
				optionValue = "行 ${index}");

			DataEngine.editFieldReferenceOfFieldOption(
				fieldFieldLabel = "网格",
				fieldReferenceOfFieldOption = "${optionValue}",
				index = "${index}",
				optionFieldLabel = "Rows");

			var index = ${index} + 1;
		}

		var index = "1";

		for (var optionValue : list "C3,C4") {
			DataEngine.addFieldOption(
				fieldFieldLabel = "网格",
				index = "${index}",
				optionFieldLabel = "Columns",
				optionValue = "列 ${index}");

			DataEngine.editFieldReferenceOfFieldOption(
				fieldFieldLabel = "网格",
				fieldReferenceOfFieldOption = "${optionValue}",
				index = "${index}",
				optionFieldLabel = "Rows");

			var index = ${index} + 1;
		}

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Date",
			fieldFieldLabelEdit = "日期");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Numeric",
			fieldFieldLabelEdit = "数字");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Image",
			fieldFieldLabelEdit = "图片");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Rich Text",
			fieldFieldLabelEdit = "多格式文本框");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Upload",
			fieldFieldLabelEdit = "文件");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Color",
			fieldFieldLabelEdit = "颜色");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Web Content",
			fieldFieldLabelEdit = "网页内容");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Geolocation",
			fieldFieldLabelEdit = "地理位置");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Separator",
			fieldFieldLabelEdit = "分割线");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Link to Page",
			fieldFieldLabelEdit = "网页链接");

		WebContentStructures.saveCP();

		WebContentNavigator.gotoManageTemplatesViaStructures(structureName = "WC Structure Name");

		WebContentTemplates.addCP(
			templateFieldNames = "Text,Select from List,Single Selection,Multiple Selection,Grid,Date,Numeric,Image,Rich Text,Upload,Color,Web Content,Geolocation,Link to Page",
			templateName = "WC Template Name");

		Navigator.gotoNavItem(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Name");

		WebContent.addWithStructureCP(
			column = "1",
			dmNavTab = "User Personal Folder",
			navTab = "Web Content Images",
			row = "1",
			webContentColor = "FF0D0D",
			webContentDate = "10/10/2020",
			webContentGrid = "true",
			webContentImage = "Document_3.png",
			webContentLinkToPage = "Test Page Name 1",
			webContentMultipleSelection = "Option 1",
			webContentNumeric = "9",
			webContentRichText = "This is a Rich Text field",
			webContentSelectFromList = "Option 2",
			webContentSingleSelection = "Option 3",
			webContentText = "This is a Text field",
			webContentTitle = "WC Title",
			webContentUpload = "Document_1.jpg",
			webContentWebContent = "Web Content Title 1");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addWithStructureCP(
			column = "2",
			dmNavTab = "User Personal Folder",
			navTab = "Web Content Images",
			row = "2",
			webContentColor = "2BA676",
			webContentColorFieldLabel = "颜色",
			webContentDate = "2020/01/01",
			webContentDateFieldLabel = "日期",
			webContentGrid = "true",
			webContentGridFieldLabel = "网格",
			webContentImage = "Document_1.png",
			webContentImageFieldLabel = "图片",
			webContentLinkToPage = "Test Page Name 2",
			webContentLinkToPageFieldLabel = "网页链接",
			webContentMultipleSelection = "选择 1",
			webContentMultipleSelectionFieldLabel = "复选列表框",
			webContentNumeric = "123",
			webContentNumericFieldLabel = "数字",
			webContentRichText = "这是多格式文本框",
			webContentRichTextFieldLabel = "多格式文本框",
			webContentSelectFromList = "选择 2",
			webContentSelectFromListFieldLabel = "下拉列表",
			webContentSingleSelection = "选择 3",
			webContentSingleSelectionFieldLabel = "单选列表框",
			webContentText = "这是文本框",
			webContentTextFieldLabel = "文本框",
			webContentTitle = "网页内容标题",
			webContentUpload = "Document_2.jpg",
			webContentUploadFieldLabel = "文件",
			webContentWebContent = "Web Content Title 2",
			webContentWebContentFieldLabel = "网页内容");

		PortletEntry.publish();

		WebContent.viewWithStructureCP(
			column = "1",
			dmNavTab = "User Personal Folder",
			navTab = "Web Content Images",
			row = "1",
			webContentColor = "FF0D0D",
			webContentDate = "10/10/2020",
			webContentGeolocation = "true",
			webContentGrid = "true",
			webContentImage = "Document_3.png",
			webContentLinkToPage = "Test Page Name 1",
			webContentMultipleSelection = "Option 1",
			webContentNumeric = "9",
			webContentRichText = "This is a Rich Text field",
			webContentSelectFromList = "Option 2",
			webContentSeparator = "true",
			webContentSingleSelection = "Option 3",
			webContentText = "This is a Text field",
			webContentTitle = "WC Title",
			webContentUpload = "Document_1.jpg",
			webContentWebContent = "Web Content Title 1");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "网页内容标题");

		WebContent.viewWithStructureCP(
			column = "2",
			dmNavTab = "User Personal Folder",
			navTab = "Web Content Images",
			predefinedValue = "true",
			row = "2",
			webContentColor = "2BA676",
			webContentColorFieldLabel = "颜色",
			webContentDate = "2020/01/01",
			webContentDateFieldLabel = "日期",
			webContentGeolocation = "true",
			webContentGeolocationFieldLabel = "地理位置",
			webContentGrid = "true",
			webContentGridFieldLabel = "网格",
			webContentImage = "Document_1.png",
			webContentImageFieldLabel = "图片",
			webContentLinkToPage = "Test Page Name 2",
			webContentLinkToPageFieldLabel = "网页链接",
			webContentMultipleSelection = "选择 1",
			webContentMultipleSelectionFieldLabel = "复选列表框",
			webContentNumeric = "123",
			webContentNumericFieldLabel = "数字",
			webContentRichText = "这是多格式文本框",
			webContentRichTextFieldLabel = "多格式文本框",
			webContentSelectFromList = "选择 2",
			webContentSelectFromListFieldLabel = "下拉列表",
			webContentSeparator = "true",
			webContentSeparatorFieldLabel = "分割线",
			webContentSingleSelection = "选择 3",
			webContentSingleSelectionFieldLabel = "单选列表框",
			webContentText = "这是文本框",
			webContentTextFieldLabel = "文本框",
			webContentUpload = "Document_2.jpg",
			webContentUploadFieldLabel = "文件",
			webContentWebContent = "Web Content Title 2",
			webContentWebContentFieldLabel = "网页内容");
	}

	@description = "This is a test for LPS-122317. As Content Creator, I want to leverage the structures' translations without nested fields or fieldsets when creating a new Web Content"
	@priority = "5"
	test TranslationDoesNotChangeAnotherAndPersistsAfterEditingAnother {
		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "Structure Description",
			structureName = "WC Structure Title");

		DataEngine.addField(
			fieldFieldLabel = "Text",
			fieldName = "Text");

		PortletEntry.changeLocale(locale = "zh-CN");

		DataEngine.editFieldLabel(
			fieldFieldLabel = "Text",
			fieldFieldLabelEdit = "文本");

		WebContentStructures.saveCP();

		NavItem.click(navItem = "Web Content");

		WebContentNavigator.gotoAddWithStructureCP(structureName = "WC Structure Title");

		WebContent.addWithStructureCP(
			webContentText = "Text Content",
			webContentTitle = "WC Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addWithStructureCP(
			webContentText = "测试",
			webContentTextFieldLabel = "文本",
			webContentTitle = "测试");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC Title");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "测试");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "文本",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "测试");

		PortletEntry.changeLocale(locale = "en-US");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "WC Title");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "Text Content");

		WebContent.addWithStructureCP(
			webContentText = "Test Content Edited",
			webContentTitle = "WC Title Edited");

		PortletEntry.changeLocale(locale = "zh-CN");

		WebContent.addWithStructureCP(
			webContentText = "测试文本",
			webContentTextFieldLabel = "文本",
			webContentTitle = "测试标题");

		PortletEntry.publish();

		WebContentNavigator.gotoEditCP(webContentTitle = "WC Title Edited");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "WC Title Edited");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "Text",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "Test Content Edited");

		PortletEntry.changeLocale(locale = "zh-CN");

		AssertTextEquals(
			locator1 = "TextInput#TITLE",
			value1 = "测试标题");

		AssertTextEquals.assertValue(
			key_fieldFieldLabel = "文本",
			locator1 = "WCEditWebContent#TEXT_INPUT",
			value1 = "测试文本");
	}

}