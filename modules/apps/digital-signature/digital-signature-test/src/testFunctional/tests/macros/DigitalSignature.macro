definition {

	macro createEnvelope {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "${dmDocumentFile}",
			dmDocumentTitle = "DM Document Title");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Digital Signature");

		LexiconEntry.gotoAdd();

		Type(
			key_text = "Envelope Name",
			locator1 = "TextInput#ANY",
			value1 = "${envelopeName}");

		Type(
			key_text = "Recipient Full Name",
			locator1 = "TextInput#ANY",
			value1 = "${recipientFullName}");

		Type(
			key_text = "Email Subject",
			locator1 = "TextInput#ANY",
			value1 = "${emailSubject}");

		Type(
			key_text = "Recipient Email",
			locator1 = "TextInput#ANY",
			value1 = "${recipientEmail}");

		Type(
			key_text = "emailMessage",
			locator1 = "TextArea#ANY",
			value1 = "${emailMessage}");

		Click(
			key_text = "Add Document",
			locator1 = "Button#ANY_WITH_SPAN");

		while (IsElementNotPresent(locator1 = "DocumentsAndMediaSelectDocument#SELECT_DOCUMENT_IFRAME")) {
			Pause(locator1 = "1000");
		}

		SelectFrame(locator1 = "DocumentsAndMediaSelectDocument#SELECT_DOCUMENT_IFRAME");

		Click(
			dmDocumentTitle = "DM Document Title",
			locator1 = "DigitalSignatureEnvelopeSettings#DIGITAL_SIGNATURE_SELECT_DOCUMENT_MODAL");
	}

	macro createEnvelopeWith2Documents {
		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMDocument.addMultipleCP(dmDocumentFileList = "Document_2.docx,Document_3.docx");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Digital Signature");

		LexiconEntry.gotoAdd();

		Type(
			key_text = "Envelope Name",
			locator1 = "TextInput#ANY",
			value1 = "${envelopeName}");

		Type(
			key_text = "Recipient Full Name",
			locator1 = "TextInput#ANY",
			value1 = "${recipientFullName}");

		Type(
			key_text = "Email Subject",
			locator1 = "TextInput#ANY",
			value1 = "${emailSubject}");

		Type(
			key_text = "Recipient Email",
			locator1 = "TextInput#ANY",
			value1 = "${recipientEmail}");

		Type(
			key_text = "emailMessage",
			locator1 = "TextArea#ANY",
			value1 = "${emailMessage}");

		Click(
			key_text = "Add Document",
			locator1 = "Button#ANY_WITH_SPAN");

		while (IsElementNotPresent(locator1 = "DocumentsAndMediaSelectDocument#SELECT_DOCUMENT_IFRAME")) {
			Pause(locator1 = "1000");
		}

		SelectFrame(locator1 = "DocumentsAndMediaSelectDocument#SELECT_DOCUMENT_IFRAME");

		Click(
			dmDocumentTitle = "Document_2",
			locator1 = "DigitalSignatureEnvelopeSettings#DIGITAL_SIGNATURE_SELECT_DOCUMENT_MODAL");

		Click(
			key_text = "Add Document",
			locator1 = "Button#ANY_WITH_SPAN");

		while (IsElementNotPresent(locator1 = "DocumentsAndMediaSelectDocument#SELECT_DOCUMENT_IFRAME")) {
			Pause(locator1 = "1000");
		}

		SelectFrame(locator1 = "DocumentsAndMediaSelectDocument#SELECT_DOCUMENT_IFRAME");

		Click(
			dmDocumentTitle = "Document_3",
			locator1 = "DigitalSignatureEnvelopeSettings#DIGITAL_SIGNATURE_SELECT_DOCUMENT_MODAL");
	}

	macro deleteEnvelope {
		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Digital Signature");

		Click(
			key_text = "${envelopeName}",
			locator1 = "Link#ANY");

		AssertElementPresent(locator1 = "TextInput#HIDDEN");

		var value = selenium.getElementValue("TextInput#HIDDEN");

		Navigator.openSpecificURL(url = "${value}");
	}

	macro enableDigitalSignature {
		Select(
			locator1 = "ClickToChatConfiguration#SITE_SETTINGS_STRATEGY",
			value1 = "${siteStrategy}");

		var digitalSignatureApiUsername = PropsUtil.get("digital.signature.api.username");
		var digitalSignatureApiAccountId = PropsUtil.get("digital.signature.api.accountId");
		var digitalSignatureAccountBaseUri = PropsUtil.get("digital.signature.account.base.uri");
		var digitalSignatureIntegrationKey = PropsUtil.get("digital.signature.integration.key");
		var digitalSignatureRsaPrivateKey = PropsUtil.get("digital.signature.rsa.private.key");

		Type(
			locator1 = "DigitalSignatureConfiguration#DIGITAL_SIGNATURE_USER_ID",
			value1 = "${digitalSignatureApiUsername}");

		Type(
			locator1 = "DigitalSignatureConfiguration#DIGITAL_SIGNATURE_ACCOUNT_ID",
			value1 = "${digitalSignatureApiAccountId}");

		Type(
			locator1 = "DigitalSignatureConfiguration#DIGITAL_SIGNATURE_BASE_URI",
			value1 = "${digitalSignatureAccountBaseUri}");

		Type(
			locator1 = "DigitalSignatureConfiguration#DIGITAL_SIGNATURE_INTEGRATION_KEY",
			value1 = "${digitalSignatureIntegrationKey}");

		Type(
			locator1 = "DigitalSignatureConfiguration#DIGITAL_SIGNATURE_RSA_PRIVATE_KEY",
			value1 = "${digitalSignatureRsaPrivateKey}");

		SystemSettings.saveConfiguration();
	}

}