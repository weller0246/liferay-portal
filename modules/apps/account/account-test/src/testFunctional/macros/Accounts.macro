definition {

	macro _inputAddressDetails {
		PortletEntry.inputName(name = "${addressName}");

		if (isSet(addressDescription)) {
			PortletEntry.inputDescription(description = "${addressDescription}");
		}

		if (isSet(addressType)) {
			SelectField.select(
				selectFieldLabel = "Type",
				selectFieldValue = "${addressType}");
		}
		else {
			AssertTextEquals(
				key_typeName = "Billing and Shipping",
				locator1 = "Select#TYPE_SELECTED",
				value1 = "Billing and Shipping");
		}

		Type(
			locator1 = "TextInput#STREET_1",
			value1 = "${addressStreet1}");

		if (isSet(addressStreet2)) {
			Type(
				key_streetNumber = "2",
				locator1 = "TextInput#STREET_N",
				value1 = "${addressStreet2}");
		}

		if (isSet(addressStreet3)) {
			Type(
				key_streetNumber = "3",
				locator1 = "TextInput#STREET_N",
				value1 = "${addressStreet3}");
		}

		Select(
			locator1 = "Select#COUNTRY",
			value1 = "${addressCountry}");

		Type(
			locator1 = "TextInput#CITY",
			value1 = "${addressCity}");

		if (isSet(addressRegion)) {
			Select(
				locator1 = "Select#REGION",
				value1 = "${addressRegion}");
		}

		Type(
			locator1 = "TextInput#POSTAL_CODE",
			value1 = "${addressPostalCode}");

		if (isSet(phoneNumber)) {
			Type(
				locator1 = "TextInput#NUMBER",
				value1 = "${phoneNumber}");
		}
	}

	macro addAccountWithDomain {
		LexiconEntry.gotoAdd();

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Add Account");

		PortletEntry.inputName(name = "${accountName}");

		AssertClick(
			locator1 = "Account#VALID_DOMAINS_ADD_BUTTON",
			value1 = "Add");

		SelectFrame(locator1 = "IFrame#ADD_DOMAIN");

		PortletEntry.inputText(
			fieldLabel = "Domain",
			text = "${domainNames}");

		Button.clickSave();

		for (var domainName : list "${domainNames}") {
			AssertElementPresent(
				key_domainName = "${domainName}",
				locator1 = "Account#VALID_DOMAINS_DOMAIN_NAME");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro addAddress {
		LexiconEntry.gotoAdd();

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Add Address");

		Accounts._inputAddressDetails(
			addressCity = "${addressCity}",
			addressCountry = "${addressCountry}",
			addressDescription = "${addressDescription}",
			addressName = "${addressName}",
			addressPostalCode = "${addressPostalCode}",
			addressRegion = "${addressRegion}",
			addressStreet1 = "${addressStreet1}",
			addressStreet2 = "${addressStreet2}",
			addressStreet3 = "${addressStreet3}",
			addressType = "${addressType}",
			phoneNumber = "${phoneNumber}");

		Button.clickSave();

		Alert.viewSuccessMessage();

		AssertElementPresent(
			key_tab = "Addresses",
			locator1 = "NavTab#ACTIVE_TAB_LINK");
	}

	macro addAddressViaSetDefaultAddress {
		LexiconEntry.gotoAdd();

		/* AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Add Address"); */

		Accounts._inputAddressDetails(
			addressCity = "${addressCity}",
			addressCountry = "${addressCountry}",
			addressDescription = "${addressDescription}",
			addressName = "${addressName}",
			addressPostalCode = "${addressPostalCode}",
			addressRegion = "${addressRegion}",
			addressStreet1 = "${addressStreet1}",
			addressStreet2 = "${addressStreet2}",
			addressStreet3 = "${addressStreet3}",
			addressType = "${addressType}",
			phoneNumber = "${phoneNumber}");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro addAssigneeToRole {
		Navigator.gotoNavTab(navTab = "Assignees");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no users associated with this role.");

		LexiconEntry.gotoAdd();

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${accountRoleTitle}");

		SelectFrame(
			key_title = "Assign Users to ${accountRoleTitle}",
			locator1 = "IFrame#MODAL_ANY");

		Search.searchCP(searchTerm = "${assigneeName}");

		Check(
			key_tableEntry = "${assigneeName}",
			locator1 = "LexiconTable#TABLE_ENTRY_CHECKBOX");

		SelectFrameTop();

		Button.click(button = "Assign");

		Alert.viewSuccessMessage();
	}

	macro addAssigneeToRoleViaRolesTab {
		Navigator.gotoNavTab(navTab = "Roles");

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Assign Users",
			rowEntry = "${accountRoleTitle}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "${accountRoleTitle}");

		LexiconEntry.gotoAdd();

		SelectFrame(
			key_title = "Assign Users to ${accountRoleTitle}",
			locator1 = "IFrame#MODAL_ANY");

		Search.searchCP(searchTerm = "${assigneeName}");

		Check(
			key_tableEntry = "${assigneeName}",
			locator1 = "LexiconTable#TABLE_ENTRY_CHECKBOX");

		SelectFrameTop();

		Button.click(button = "Assign");

		Alert.viewSuccessMessage();
	}

	macro addAssigneeToRoleViaUsersTab {
		Navigator.gotoNavTab(navTab = "Users");

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Assign Roles",
			rowEntry = "${accountUserName}");

		SelectFrame(
			key_title = "Assign Roles",
			locator1 = "IFrame#MODAL_ANY");

		Check(
			key_tableEntry = "${accountRoleTitle}",
			locator1 = "LexiconTable#TABLE_ENTRY_CHECKBOX");

		SelectFrameTop();

		Button.click(button = "Done");

		Alert.viewSuccessMessage();
	}

	macro addBusinessAccount {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${accountName}");

		if (isSet(accountDescription)) {
			PortletEntry.inputDescription(description = "${accountDescription}");
		}

		if (isSet(accountLogo)) {
			User.changeProfileImage(imageName = "${accountLogo}");
		}

		if (isSet(accountTaxID)) {
			PortletEntry.inputText(
				fieldLabel = "Tax ID",
				text = "${accountTaxID}");
		}

		if (isSet(externalReferenceCode)) {
			PortletEntry.inputText(
				fieldLabel = "External Reference Code",
				text = "${externalReferenceCode}");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro addBusinessAccountWithCategory {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${accountName}");

		AssertClick(
			key_vocabularyName = "${vocabularyName}",
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_CATEGORY_SELECT",
			value1 = "Select");

		AssertTextEquals(
			locator1 = "Modal#HEADER",
			value1 = "Select ${vocabularyName}");

		AssetCategorization.selectCategory(categoryName = "${categoryName}");

		PortletEntry.save();
	}

	macro addInactiveBusinessAccount {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${accountName}");

		if (isSet(accountDescription)) {
			PortletEntry.inputDescription(description = "${accountDescription}");
		}

		Uncheck.uncheckToggleSwitch(locator1 = "ToggleSwitch#ACCOUNT_STATUS");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro addNewUserToBusinessAccount {
		Accounts.gotoAssigneeTab(assigneeTab = "Users");

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Assign Users to ${accountName}",
			locator1 = "IFrame#MODAL_ANY");

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro addNewUserToPersonAccount {
		AssertElementPresent(locator1 = "Account#USER_SELECT_BUTTON");

		if (!(IsElementPresent(locator1 = "Message#EMPTY_INFO_DEPOT_HIDE"))) {
			Alert.viewMutedMessage(muteMessage = "Assign a user to this person account.");
		}

		AssertClick(
			locator1 = "Account#USER_SELECT_BUTTON",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#ASSIGN_USER");

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		SelectFrame(value1 = "relative=top");

		AssertElementPresent(
			key_userName = "${userFirstName}",
			locator1 = "Account#USER_TABLE_NAME");

		Button.clickSave();

		Alert.viewSuccessMessage();

		AssertElementPresent(
			key_userName = "${userFirstName}",
			locator1 = "Account#USER_TABLE_NAME");
	}

	macro addNewUserWithBlockedDomain {
		Accounts.gotoAssigneeTab(assigneeTab = "Users");

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Assign Users to ${accountName}",
			locator1 = "IFrame#MODAL_ANY");

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		AssertTextEquals(
			key_alertMessage = "${emailDomainName} is a blocked domain. Account administrators cannot add users with this domain to their accounts. You can still manually assign this email address to this user.",
			locator1 = "Message#ERROR_ENTER_A_VALID_VALUE",
			value1 = "${emailDomainName} is a blocked domain. Account administrators cannot add users with this domain to their accounts. You can still manually assign this email address to this user.");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro addNewUserWithInvalidDomain {
		Accounts.gotoAssigneeTab(assigneeTab = "Users");

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Assign Users to ${accountName}",
			locator1 = "IFrame#MODAL_ANY");

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		AssertTextEquals(
			key_alertMessage = "${emailDomainName} is not a valid domain for the following accounts: ${accountName}. Account Administrators cannot add users with this domain to their accounts. You can still manually assign this email address to this user.",
			locator1 = "Message#ERROR_ENTER_A_VALID_VALUE",
			value1 = "${emailDomainName} is not a valid domain for the following accounts: ${accountName}. Account Administrators cannot add users with this domain to their accounts. You can still manually assign this email address to this user.");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro addNewUserWithSameDomain {
		Accounts.gotoAssigneeTab(assigneeTab = "Users");

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Assign Users to ${accountName}",
			locator1 = "IFrame#MODAL_ANY");

		LexiconEntry.gotoAdd();

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_SCREEN_NAME_FIELD",
			value1 = "${userScreenName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_EMAIL_ADDRESS_FIELD",
			value1 = "${userEmailAddress}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_FIRST_NAME_FIELD",
			value1 = "${userFirstName}");

		Type(
			locator1 = "UsersAndOrganizationsEditUser#DETAILS_LAST_NAME_FIELD",
			value1 = "${userLastName}");

		AssertElementNotPresent(
			key_alertMessage = "${emailDomainName} is",
			locator1 = "Message#ERROR_ENTER_A_VALID_VALUE");

		AccountUsers.viewValidDomains(validDomainNames = "${validDomainNames}");

		AssertClick(
			locator1 = "Button#SAVE",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro addOwnedAccountRole {
		Accounts.gotoAssigneeTab(assigneeTab = "Roles");

		LexiconEntry.gotoAdd();

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Add New Role");

		PortletEntry.inputTitle(title = "${accountRoleTitle}");

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro addPersonAccount {
		LexiconEntry.gotoAdd();

		PortletEntry.inputName(name = "${accountName}");

		SelectField.select(
			selectFieldLabel = "Type",
			selectFieldValue = "Person");

		if (isSet(accountDescription)) {
			PortletEntry.inputDescription(description = "${accountDescription}");
		}

		if (isSet(accountLogo)) {
			User.changeProfileImage(imageName = "${accountLogo}");
		}

		if (isSet(accountTaxID)) {
			PortletEntry.inputText(
				fieldLabel = "Tax ID",
				text = "${accountTaxID}");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro assignExistingUserToPersonAccount {
		AssertElementPresent(locator1 = "Account#USER_SELECT_BUTTON");

		if (!(IsElementPresent(locator1 = "Message#EMPTY_INFO_DEPOT_HIDE"))) {
			Alert.viewMutedMessage(muteMessage = "Assign a user to this person account.");
		}

		AssertClick(
			locator1 = "Account#USER_SELECT_BUTTON",
			value1 = "Select");

		SelectFrame(locator1 = "IFrame#ASSIGN_USER");

		Search.searchCP(searchTerm = "${accountUserName}");

		AssertClick(
			key_accountUserName = "${accountUserName}",
			locator1 = "Account#ASSIGN_USER_CHOOSE_BUTTON",
			value1 = "Choose");

		SelectFrame(value1 = "relative=top");

		AssertElementPresent(
			key_userName = "${accountUserName}",
			locator1 = "Account#USER_TABLE_NAME");

		Button.clickSave();

		Alert.viewSuccessMessage();

		AssertElementPresent(
			key_userName = "${accountUserName}",
			locator1 = "Account#USER_TABLE_NAME");
	}

	macro assignMultipleOrganizations {
		Accounts.gotoAssigneeTab(assigneeTab = "Organizations");

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Assign Organizations to ${accountName}",
			locator1 = "IFrame#MODAL_ANY");

		Search.searchCP(searchTerm = "Organization ${organizationNumber}");

		for (var organizationNumber : list "${organizationNumber}") {
			LexiconEntry.selectEntry(rowEntry = "Organization ${organizationNumber}");
		}

		SelectFrameTop();

		Button.click(button = "Assign");

		Alert.viewSuccessMessage();
	}

	macro assignOrganizations {
		Accounts.gotoAssigneeTab(assigneeTab = "Organizations");

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Assign Organizations to ${accountName}",
			locator1 = "IFrame#MODAL_ANY");

		Search.searchCP(searchTerm = "${assigneeName}");

		Check(
			key_tableEntry = "${assigneeName}",
			locator1 = "LexiconTable#TABLE_ENTRY_CHECKBOX");

		SelectFrameTop();

		Button.click(button = "Assign");

		Alert.viewSuccessMessage();
	}

	macro assignUsers {
		Accounts.gotoAssigneeTab(assigneeTab = "Users");

		LexiconEntry.gotoAdd();

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Assign Users to ${accountName}",
			locator1 = "IFrame#MODAL_ANY");

		Search.searchCP(searchTerm = "${assigneeName}");

		Check(
			key_tableEntry = "${assigneeName}",
			locator1 = "LexiconTable#TABLE_ENTRY_CHECKBOX");

		SelectFrameTop();

		Button.click(button = "Assign");

		Alert.viewSuccessMessage();
	}

	macro changeDefaultBillingAddress {
		AssertClick(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_CHANGE_DEFAULT_BILLING",
			value1 = "Change");

		SelectFrame(
			key_title = "Set Default Billing Address",
			locator1 = "IFrame#MODAL_ANY");

		Click(
			key_addressName = "${addressName}",
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SELECT_ADDRESS_RADIO");

		SelectFrameTop();

		AssertClick(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SAVE_BUTTON",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro changeDefaultShippingAddress {
		AssertClick(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_CHANGE_DEFAULT_SHIPPING",
			value1 = "Change");

		SelectFrame(
			key_title = "Set Default Shipping Address",
			locator1 = "IFrame#MODAL_ANY");

		Click(
			key_addressName = "${addressName}",
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SELECT_ADDRESS_RADIO");

		SelectFrameTop();

		AssertClick(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SAVE_BUTTON",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro deactivateAccount {
		if (IsElementPresent(locator1 = "Account#2B_ACCOUNT_MANAGEMENT_HEADING")) {
			Search.searchPG(
				portletName = "Account Management",
				searchTerm = "${accountName}");
		}
		else {
			Search.searchCP(searchTerm = "${accountName}");
		}

		if ("${deactivateType}" == "Hide Icon") {
			LexiconEntry.selectEntry(key_rowEntry = "${accountName}");

			ClickNoError(locator1 = "Icon#DEACTIVATE");

			AssertConfirm(value1 = "Are you sure you want to deactivate this?");

			Alert.viewSuccessMessage();
		}
		else if ("${deactivateType}" == "Management Toolbar") {
			LexiconEntry.selectEntry(key_rowEntry = "${accountName}");

			Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Deactivate");

			AssertConfirm(value1 = "Are you sure you want to deactivate this?");

			Alert.viewSuccessMessage();
		}
		else {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = "Deactivate",
				rowEntry = "${accountName}");

			AssertConfirm(value1 = "Are you sure you want to deactivate this?");

			Alert.viewSuccessMessage();
		}

		LexiconEntry.viewNoEntry(rowEntry = "${accountName}");
	}

	macro deleteAccount {
		if (IsElementPresent(locator1 = "Account#2B_ACCOUNT_MANAGEMENT_HEADING")) {
			Search.searchPG(
				portletName = "Account Management",
				searchTerm = "${accountName}");
		}
		else {
			Search.searchCP(searchTerm = "${accountName}");
		}

		if ("${deleteType}" == "Delete Icon") {
			LexiconEntry.selectEntry(key_rowEntry = "${accountName}");

			ClickNoError(locator1 = "Icon#DELETE");

			AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}
		else if ("${deleteType}" == "Management Toolbar") {
			LexiconEntry.selectEntry(key_rowEntry = "${accountName}");

			Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Delete");

			AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}
		else {
			LexiconEntry.gotoEntryMenuItemNoError(
				menuItem = "Delete",
				rowEntry = "${accountName}");

			AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}

		LexiconEntry.viewNoEntry(rowEntry = "${accountName}");
	}

	macro editAddress {
		LexiconEntry.gotoEntry(rowEntry = "${addressName}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Edit Address");

		if (isSet(addressName)) {
			PortletEntry.inputName(name = "${addressName}");
		}

		if (isSet(addressDescription)) {
			PortletEntry.inputDescription(description = "${addressDescription}");
		}

		if (isSet(addressType)) {
			SelectField.select(
				selectFieldLabel = "Type",
				selectFieldValue = "${addressType}");
		}

		if (isSet(addressStreet1)) {
			Type(
				locator1 = "TextInput#STREET_1",
				value1 = "${addressStreet1}");
		}

		if (isSet(addressStreet2)) {
			Type(
				key_streetNumber = "2",
				locator1 = "TextInput#STREET_N",
				value1 = "${addressStreet2}");
		}

		if (isSet(addressStreet3)) {
			Type(
				key_streetNumber = "3",
				locator1 = "TextInput#STREET_N",
				value1 = "${addressStreet3}");
		}

		if (isSet(addressCity)) {
			Type(
				locator1 = "TextInput#CITY",
				value1 = "${addressCity}");
		}

		if (isSet(addressRegion)) {
			Select(
				locator1 = "Select#REGION",
				value1 = "${addressRegion}");
		}

		if (isSet(addressPostalCode)) {
			Type(
				locator1 = "TextInput#POSTAL_CODE",
				value1 = "${addressPostalCode}");
		}

		if (isSet(addressCountry)) {
			Select(
				locator1 = "Select#COUNTRY",
				value1 = "${addressCountry}");
		}

		if (isSet(phoneNumber)) {
			Type(
				locator1 = "TextInput#NUMBER",
				value1 = "${phoneNumber}");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro editCP {
		Accounts.gotoEdit(accountName = "${accountName}");

		PortletEntry.inputName(name = "${accountNameEdit}");

		if (isSet(accountDescriptionEdit)) {
			PortletEntry.inputDescription(description = "${accountDescriptionEdit}");
		}

		if (isSet(accountLogoEdit)) {
			User.changeProfileImage(imageName = "${accountLogoEdit}");
		}

		if ("${accountStatusEdit}" == "Inactive") {
			Uncheck.uncheckToggleSwitch(locator1 = "ToggleSwitch#ACCOUNT_STATUS");
		}
		else if ("${accountStatusEdit}" == "Active") {
			Check.checkToggleSwitch(locator1 = "ToggleSwitch#ACCOUNT_STATUS");
		}

		if (isSet(customFieldText)) {
			Type(
				locator1 = "TextInput#CUSTOM_FIELD",
				value1 = "${customFieldText}");
		}

		Button.clickSave();

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Edit ${accountNameEdit}");

		Alert.viewSuccessMessage();
	}

	macro editPG {
		Search.searchPG(
			portletName = "Account Management",
			searchTerm = "${accountName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${accountName}");

		AssertTextEquals(
			key_portletName = "Account",
			locator1 = "Portlet#TITLE",
			value1 = "Edit ${accountName}");

		PortletEntry.inputName(name = "${accountNameEdit}");

		if (isSet(accountDescriptionEdit)) {
			PortletEntry.inputDescription(description = "${accountDescriptionEdit}");
		}

		if (isSet(accountLogoEdit)) {
			User.changeProfileImage(imageName = "${accountLogoEdit}");
		}

		if ("${accountStatusEdit}" == "Inactive") {
			Uncheck.uncheckToggleSwitch(locator1 = "ToggleSwitch#ACCOUNT_STATUS");
		}
		else if ("${accountStatusEdit}" == "Active") {
			Check.checkToggleSwitch(locator1 = "ToggleSwitch#ACCOUNT_STATUS");
		}

		if (isSet(customFieldText)) {
			Type(
				locator1 = "TextInput#CUSTOM_FIELD",
				value1 = "${customFieldText}");
		}

		Button.clickSave();

		Alert.viewSuccessMessage();
	}

	macro gotoAssigneeTab {
		Navigator.gotoNavTab(navTab = "${assigneeTab}");
	}

	macro gotoEdit {
		Search.searchCP(searchTerm = "${accountName}");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "${accountName}");

		AssertTextEquals(
			locator1 = "Portlet#HEADER",
			value1 = "Edit ${accountName}");
	}

	macro openAccountsAdmin {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/control_panel/manage?p_p_id=com_liferay_account_admin_web_internal_portlet_AccountEntriesAdminPortlet");
	}

	macro removeDefaultBillingAddress {
		Click(locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_REMOVE_DEFAULT_BILLING");

		PortletEntry.save();

		AssertTextEquals(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
			value1 = "Not Set");
	}

	macro removeDefaultShippingAddress {
		Click(locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_REMOVE_DEFAULT_SHIPPING");

		PortletEntry.save();

		AssertTextEquals(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
			value1 = "Not Set");
	}

	macro removeDomain {
		LexiconEntry.gotoEntry(rowEntry = "${accountName}");

		Click(
			key_domainName = "${domainName}",
			locator1 = "Account#VALID_DOMAINS_REMOVE_TOOLTIP");

		PortletEntry.save();

		AssertElementNotPresent(
			key_domainName = "${domainName}",
			locator1 = "Account#VALID_DOMAINS_REMOVE_TOOLTIP");
	}

	macro removeOrganizationAsAssignee {
		var key_assigneeName = "${assigneeName}";

		Search.searchCP(searchTerm = "${assigneeName}");

		ClickNoError(
			locator1 = "Icon#REMOVE_ASSIGNEE",
			value1 = "${assigneeName}");

		AssertConfirm(value1 = "Are you sure you want to remove this organization?");

		Alert.viewSuccessMessage();
	}

	macro removeUserAsAssignee {
		var key_assigneeName = "${assigneeName}";

		Search.searchCP(searchTerm = "${assigneeName}");

		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Remove",
			rowEntry = "${assigneeName}");

		AssertConfirm(value1 = "Are you sure you want to remove this user?");

		Alert.viewSuccessMessage();
	}

	macro setDefaultBillingAddress {
		AssertElementPresent(locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_HEADING");

		AssertClick(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SET_DEFAULT_BILLING",
			value1 = "Set Default Address");

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Set Default Billing Address",
			locator1 = "IFrame#MODAL_ANY");

		Search.searchCP(searchTerm = "${addressName}");

		Click(
			key_addressName = "${addressName}",
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SELECT_ADDRESS_RADIO");

		SelectFrameTop();

		AssertClick(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SAVE_BUTTON",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro setDefaultShippingAddress {
		AssertElementPresent(locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_HEADING");

		AssertClick(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SET_DEFAULT_SHIPPING",
			value1 = "Set Default Address");

		Pause(locator1 = "3000");

		SelectFrame(
			key_title = "Set Default Shipping Address",
			locator1 = "IFrame#MODAL_ANY");

		Search.searchCP(searchTerm = "${addressName}");

		Click(
			key_addressName = "${addressName}",
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SELECT_ADDRESS_RADIO");

		SelectFrameTop();

		AssertClick(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SAVE_BUTTON",
			value1 = "Save");

		Alert.viewSuccessMessage();
	}

	macro tearDownCP {
		ApplicationsMenu.gotoPortlet(
			category = "Accounts",
			panel = "Applications",
			portlet = "Accounts");

		PortletEntry.selectAll();

		ClickNoError(locator1 = "Icon#DELETE");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro viewAccountDetails {
		LexiconEntry.gotoEntry(rowEntry = "${accountName}");

		AssertTextEquals(
			locator1 = "TextInput#NAME",
			value1 = "${accountName}");

		if (isSet(accountDescription)) {
			AssertTextEquals(
				locator1 = "TextArea#DESCRIPTION",
				value1 = "${accountDescription}");
		}

		if (isSet(accountType)) {
			AssertTextEquals(
				key_typeName = "${accountType}",
				locator1 = "Select#TYPE_SELECTED",
				value1 = "${accountType}");
		}

		AssertElementPresent(
			key_selectFieldLabel = "Type",
			locator1 = "Select#ANY_DISABLED");

		if (isSet(accountTaxID)) {
			AssertTextEquals(
				key_fieldLabel = "Tax ID",
				locator1 = "TextInput#GENERIC_TEXT_INPUT",
				value1 = "${accountTaxID}");
		}

		AssertTextEquals(
			key_fieldLabel = "Tax ID",
			locator1 = "Icon#HELPER",
			value1 = "Enter the account's tax ID (EIN, VAT number, etc.).");

		if (isSet(domainName)) {
			LexiconEntry.viewEntryName(rowEntry = "${domainName}");
		}

		if (isSet(parentAccount)) {
			LexiconEntry.viewEntryName(rowEntry = "${parentAccount}");
		}

		if (isSet(customFieldText)) {
			AssertTextEquals(
				locator1 = "TextInput#CUSTOM_FIELD",
				value1 = "${customFieldText}");
		}
	}

	macro viewAssignee {
		AssertTextEquals.assertPartialText(
			key_tableEntry = "${assigneeName}",
			locator1 = "LexiconTable#TABLE_ENTRY",
			value1 = "${assigneeName}");
	}

	macro viewAssigneeTab {
		AssertElementPresent(
			key_tab = "${navTab}",
			locator1 = "NavTab#TAB_LINK");
	}

	macro viewDefaultBillingAddress {
		AssertElementPresent(locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_BILLING_TEXT");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
			value1 = "${addressName}");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
			value1 = "${addressStreet1}");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
			value1 = "${addressCountry}");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
			value1 = "${addressCity}");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
			value1 = "${addressPostalCode}");

		if (isSet(addressRegion)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
				value1 = "${addressRegion}");
		}

		if (isSet(addressStreet2)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
				value1 = "${addressStreet2}");
		}

		if (isSet(addressStreet3)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
				value1 = "${addressStreet3}");
		}

		if (isSet(phoneNumber)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_BILLING_ADDRESS",
				value1 = "${phoneNumber}");
		}
	}

	macro viewDefaultShippingAddress {
		AssertElementPresent(locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_SHIPPING_TEXT");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
			value1 = "${addressName}");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
			value1 = "${addressStreet1}");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
			value1 = "${addressCountry}");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
			value1 = "${addressCity}");

		AssertTextEquals.assertPartialText(
			locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
			value1 = "${addressPostalCode}");

		if (isSet(addressRegion)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
				value1 = "${addressRegion}");
		}

		if (isSet(addressStreet2)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
				value1 = "${addressStreet2}");
		}

		if (isSet(addressStreet3)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
				value1 = "${addressStreet3}");
		}

		if (isSet(phoneNumber)) {
			AssertTextEquals.assertPartialText(
				locator1 = "Account#DEFAULT_ACCOUNT_ADDRESSES_DEFAULT_SHIPPING_ADDRESS",
				value1 = "${phoneNumber}");
		}
	}

	macro viewInactiveAccount {
		ManagementBar.setFilterAndOrder(filterBy = "Inactive");

		if (IsElementPresent(locator1 = "Account#2B_ACCOUNT_MANAGEMENT_HEADING")) {
			Search.searchPG(
				portletName = "Account Management",
				searchTerm = "${accountName}");
		}
		else {
			Search.searchCP(searchTerm = "${accountName}");
		}

		LexiconEntry.viewEntryStatus(
			rowEntry = "${accountName}",
			rowStatus = "Inactive");
	}

	macro viewNoAssignee {
		LexiconEntry.gotoEntry(rowEntry = "${accountName}");

		Accounts.gotoAssigneeTab(assigneeTab = "${assigneeType}");

		var assigneeType = StringUtil.lowerCase("${assigneeType}");

		AssertTextEquals(
			locator1 = "Message#EMPTY_INFO",
			value1 = "There are no ${assigneeType} associated with this account.");
	}

	macro viewNoAssigneeTab {
		AssertElementNotPresent(
			key_tab = "${navTab}",
			locator1 = "NavTab#TAB_LINK");
	}

}