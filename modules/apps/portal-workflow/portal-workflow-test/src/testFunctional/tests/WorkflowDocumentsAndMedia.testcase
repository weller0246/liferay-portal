@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			var siteName = TestCase.getSiteName(siteName = "${siteName}");

			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			DMDocument.tearDownCP();

			Navigator.openURL();

			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				panel = "Site Administration",
				portlet = "Documents and Media",
				site = "${siteName}");

			Workflow.configureWorkflowViaPortlet(workflowDefinition = "No Workflow");

			DMDocumentType.tearDownCP();
		}
	}

	@description = "This is a test for LRQA-69298. Verify the changes to pending when a file is edited"
	@ignore = "true"
	@priority = "3"
	test AfterEditFileStatusBecomePending {

		// TODO LRQA-69298 AfterEditFileStatusBecomePending pending implementation

	}

	@priority = "5"
	test ApproveInDMFolderCustomWorkflow {
		property test.name.skip.portal.instance = "WorkflowDocumentsAndMedia#ApproveInDMFolderCustomWorkflow";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.addCP(
			orgName = "Space Program Academy of Continuing Education",
			orgType = "Organization");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addSiteCP(orgName = "Space Program Academy of Continuing Education");

		ApplicationsMenu.gotoPortlet(
			category = "Sites",
			panel = "Control Panel",
			portlet = "Sites");

		Site.viewCP(
			siteMember = "Organization",
			siteName = "Space Program Academy of Continuing Education",
			siteType = "Private");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.assignUser(
			orgName = "Space Program Academy of Continuing Education",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		Workflow.uploadDefinition(
			workflowDefinitionFile = "advanced-governors-review.xml",
			workflowDefinitionTitle = "Quarterly Reports Review Process");

		Workflow.viewDefinition(
			workflowDefinitionName = "Quarterly Reports Review Process",
			workflowDefinitionTitle = "Quarterly Reports Review Process",
			workflowDefinitionVersionNumber = "1");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Board Member",
			userScreenName = "usersn");

		ApplicationsMenu.gotoSite(site = "${siteName}");

		ProductMenu.gotoSite(site = "Space Program Academy of Continuing Education");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media",
			site = "${siteName}");

		DMFolder.addCP(
			dmFolderDescription = "Financial Reports Description",
			dmFolderName = "Financial Reports");

		DMFolder.configureWorkflowCP(
			dmFolderName = "Financial Reports",
			workflowDefinition = "Quarterly Reports Review Process",
			workflowRestriction = "Default Workflow");

		for (var entryCount : list "1,2,3") {
			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				panel = "Site Administration",
				portlet = "Documents and Media",
				site = "${siteName}");

			DMFolder.viewCP(dmFolderName = "Financial Reports");

			DMDocument.addWithWorkflowCP(
				dmDocumentDescription = "DM Document Description",
				dmDocumentFile = "Document_${entryCount}.doc",
				dmDocumentTitle = "Document_${entryCount}.doc");
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openURL();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		for (var i : list "1,2,3,4") {
			Workflow.assignToMeTaskByActions(
				workflowAssetTitle = "Document_1.doc",
				workflowAssetType = "Document",
				workflowTask = "Board Member Review ${i}");

			Workflow.approveTaskByActions(
				boardWorkflowTask = "${i}",
				workflowAssetTitle = "Document",
				workflowAssetType = "Document",
				workflowTask = "Board Member Review ${i}");
		}

		for (var i : list "1,2,3,4") {
			Workflow.assignToMeTaskByActions(
				workflowAssetTitle = "Document_2.doc",
				workflowAssetType = "Document",
				workflowTask = "Board Member Review ${i}");

			Workflow.approveTaskByActions(
				boardWorkflowTask = "${i}",
				workflowAssetTitle = "Document",
				workflowAssetType = "Document",
				workflowTask = "Board Member Review ${i}");
		}

		for (var i : list "1,2,3,4") {
			Workflow.assignToMeTaskByActions(
				workflowAssetTitle = "Document_3.doc",
				workflowAssetType = "Document",
				workflowTask = "Board Member Review ${i}");

			Workflow.approveTaskByActions(
				boardWorkflowTask = "${i}",
				workflowAssetTitle = "Document",
				workflowAssetType = "Document",
				workflowTask = "Board Member Review ${i}");
		}

		User.logoutAndLoginPG(
			userLoginEmailAddress = "test@liferay.com",
			userLoginFullName = "Test Test");

		ApplicationsMenu.gotoSite(site = "${siteName}");

		ProductMenu.gotoSite(site = "Space Program Academy of Continuing Education");

		for (var entryCount : list "1,2,3") {
			ProductMenu.gotoPortlet(
				category = "Content &amp; Data",
				panel = "Site Administration",
				portlet = "Documents and Media",
				site = "${siteName}");

			DMFolder.viewCP(dmFolderName = "Financial Reports");

			DMDocument.viewStatus(
				dmDocumentStatus = "Approved",
				dmDocumentTitle = "Document_${entryCount}.doc");
		}
	}

	@description = "This is a test for LRQA-69296. Assert that a file can be published"
	@ignore = "true"
	@priority = "3"
	test CanPublishFile {

		// TODO LRQA-69296 CanPublishFile pending implementation

	}

	@description = "This is a test for LRQA-69297. Assert that the user can publish multiple files"
	@ignore = "true"
	@priority = "3"
	test CanPublishMultipleFiles {

		// TODO LRQA-69297 CanPublishMultipleFiles pending implementation

	}

	@description = "This is a test for LRQA-69303. Verify created file can be shared. "
	@ignore = "true"
	@priority = "3"
	test CanShareAFile {

		// TODO LRQA-69303 CanShareAFile pending implementation

	}

	@priority = "4"
	test ConfigureFolderWorkflow {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media",
			site = "${siteName}");

		Workflow.configureDMWorkflowViaFolderInfo(workflowDefinition = "Single Approver");

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowRestriction = "Parent Folder");

		DMNavigator.gotoDocumentType();

		DMDocumentType.add(
			dmDocumentTypeDescription = "DM Document Type Description",
			dmDocumentTypeFieldNames = "Text",
			dmDocumentTypeName = "DM Document Type Name");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMFolder.configureWorkflowCP(
			dmDocumentTypeName = "DM Document Type Name",
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Specific Restrictions");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "No Workflow",
			workflowRestriction = "Default Workflow");
	}

	@description = "This test covers LPS-90346. It ensures that the document preview displays correctly after submitting an edit."
	@priority = "4"
	test PreviewSubmittedEdit {
		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media",
			site = "${siteName}");

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		DMDocument.addWithWorkflowCP(
			dmDocumentFile = "Document_1.jpg",
			dmDocumentTitle = "Document_1.jpg");

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = "1");

		WorkflowAsset.gotoViaNotification(
			assetType = "Document",
			user = "Test Test");

		Workflow.gotoPreviewView();

		AssertElementPresent(locator1 = "//img[contains(@src,'Document_1.jpg') and contains(@src,'version=1.0')]");

		Navigator.gotoBack();

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "Document_1.jpg",
			workflowAssetTitle = "Document_1.jpg",
			workflowAssetType = "Document",
			workflowTask = "Review");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Approve");

		Workflow.confirmWorkflowAction();

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "guest");

		DMNavigator.gotoFolder(dmFolderName = "DM Folder Name");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "Document_1.jpg");

		DMDocument.editDocument(
			dmDocumentFile = "Document_2.jpg",
			dmDocumentTitle = "Document_2.jpg");

		Button.clickSubmitForPublication();

		Navigator.openURL();

		Notifications.viewBadgeCount(notificationCount = "1");

		WorkflowAsset.gotoViaNotification(
			assetType = "Document",
			user = "Test Test");

		Workflow.gotoPreviewView();

		AssertElementPresent(locator1 = "//img[contains(@src,'Document_1.jpg') and contains(@src,'version=2.0')]");
	}

	@description = "This is a use case for LPS-60870."
	@priority = "5"
	test SaveAsDraftAndViewCategories {
		property custom.properties = "dl.file.entry.drafts.enabled=true";
		property portal.acceptance = "true";

		var siteName = TestCase.getSiteName(siteName = "${siteName}");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories",
			site = "${siteName}");

		Vocabulary.addCP(vocabularyName = "Vocabulary Name");

		Category.addCP(
			categoryName = "legal",
			vocabularyName = "Vocabulary Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Categorization",
			panel = "Site Administration",
			portlet = "Categories",
			site = "${siteName}");

		Category.addCP(
			categoryName = "Other",
			vocabularyName = "Vocabulary Name");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media",
			site = "${siteName}");

		DMFolder.addCP(
			dmFolderDescription = "DM Folder Description",
			dmFolderName = "DM Folder Name");

		DMFolder.configureWorkflowCP(
			dmFolderName = "DM Folder Name",
			workflowDefinition = "Single Approver",
			workflowRestriction = "Default Workflow");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media",
			site = "${siteName}");

		DMFolder.viewCP(
			dmDocumentTitle = "DM Folder Name",
			dmFolderName = "DM Folder Name");

		DMNavigator.gotoAddDocumentTypeCP();

		DMDocument.editDocument(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.doc",
			dmDocumentTitle = "DM Document Title");

		DMDocument.addCategories(
			categoryNameList = "legal,Other",
			vocabularyName = "Vocabulary Name");

		Button.clickSubmitForPublication();

		Alert.viewSuccessMessage();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "DM Document Title",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.approveTaskByActions(
			workflowAssetTitle = "DM Document Title",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media",
			site = "${siteName}");

		DMFolder.viewCP(
			dmDocumentTitle = "DM Folder Name",
			dmFolderName = "DM Folder Name");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "DM Document Title");

		DMDocument.viewCategories(categoryNameList = "legal,Other");

		Button.click(button = "Checkout");

		Alert.viewSuccessMessage();

		Navigator.openURL();

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			panel = "Site Administration",
			portlet = "Documents and Media",
			site = "${siteName}");

		DMFolder.gotoEntry(dmFolderName = "DM Folder Name");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "DM Document Title");

		DMDocument.viewCategories(categoryNameList = "legal,Other");

		Button.click(button = "Save and Check In");

		Button.click(button = "Save");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "DM Document Title");

		DMDocument.viewCategories(categoryNameList = "legal,Other");

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.assignToMeTaskByActions(
			workflowAssetTitle = "DM Document Title",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.viewTaskAssignedToMeDetails(
			workflowAssetContent = "DM Document Title",
			workflowAssetTitle = "DM Document Title",
			workflowAssetType = "Document",
			workflowTask = "Review");

		Workflow.gotoPreviewEdit();

		DMDocument.viewCategories(categoryNameList = "legal,Other");
	}

	@description = "This is a test for LRQA-69299. Verify that the user can set Single Approver Workflow to Documents and Media"
	@ignore = "true"
	@priority = "3"
	test SetSingleApproverToDocumentsAndMedia {

		// TODO LRQA-69299 SetSingleApproverToDocumentsAndMedia pending implementation

	}

	@description = "This is a test for LRQA-69300. Verify the status as Draft after file checkout"
	@ignore = "true"
	@priority = "3"
	test StatusBecomeDraftAfterCheckout {

		// TODO LRQA-69300 StatusBecomeDraftAfterCheckout pending implementation

	}

	@description = "This is a test for LRQA-69301. Verify the status is changed to pending after a checkout is cancelled"
	@ignore = "true"
	@priority = "3"
	test StatusPendingAfterCheckoutCancel {

		// TODO LRQA-69301 StatusPendingAfterCheckoutCancel pending implementation

	}

	@description = "This is a test for LRQA-69302. Verify created file shows message about publication in process"
	@ignore = "true"
	@priority = "3"
	test ViewPublicationInProcessMessage {

		// TODO LRQA-69302 ViewPublicationInProcessMessage pending implementation

	}

}