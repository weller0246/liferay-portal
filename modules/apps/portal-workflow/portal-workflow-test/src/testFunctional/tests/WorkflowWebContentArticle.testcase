@component-name = "portal-workflow"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Workflow";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		Navigator.openURL();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WebContent.tearDownCP();

			Workflow.tearDownPortalWorkflow();

			Workflow.tearDownSiteWorkflow();
		}
	}

	@description = "Verify that the user can modify the Web Content's workflow"
	@ignore = "Test Stub"
	@priority = "3"
	test CanChangeWorkflowWebContent {

		// TODO LRQA-69393 CanChangeWorkflowWebContent pending implementation

	}

	@description = "Verify that a workflow can be assigned to Web Content in the DXP Configuration > Workflow"
	@ignore = "Test Stub"
	@priority = "4"
	test CanConfigureWorkflowWebContent {

		// TODO LRQA-69394 CanConfigureWorkflowWebContent pending implementation

	}

	@description = "Verify that the user can reject a Web Content Article"
	@ignore = "Test Stub"
	@priority = "3"
	test CanRejectWebContentArticle {

		// TODO LRQA-69392 CanRejectWebContentArticle pending implementation

	}

	@description = "Verify that a Web Content draft is not submitted as a Workflow task"
	@ignore = "Test Stub"
	@priority = "3"
	test CanSaveAsDraft {

		// TODO LRQA-69395 CanSaveAsDraft pending implementation

	}

}