definition {

	@summary = "This calls the JSON WS API to add an attachment to a MB"
	macro addAttachmentToMessage {
		var messageId = JSONMBMessage.getMessageIdByName(
			categoryName = "${categoryName}",
			groupName = "${groupName}",
			threadSubject = "${threadSubject}");

		var portalURL = JSONCompany.getPortalURL();

		var baseDir = PropsUtil.get("test.base.dir.name");
		var dependenciesDir = PropsUtil.get("test.dependencies.dir.name");
		var filePath = "${baseDir}${dependenciesDir}/${fileName}";

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/add-message-attachment \
			-u test@liferay.com:test \
			-F messageId=${messageId} \
			-F fileName=${fileName} \
			-F mimeType=${mimeType} \
			-F file=@${filePath}
		''';

		echo("## Adding a 'File' with the following info using JSONWS:");

		echo("## * File Name: ${fileName}");

		var messageId = JSONCurlUtil.post("${curl}");
	}

	@summary = "This calls the JSON WS API to add a MB category"
	macro addCategory {
		var portalURL = JSONCompany.getPortalURL();

		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = "${userEmailAddress}");

		if (!(isSet(parentCategoryId))) {
			var parentCategoryId = "0";
		}

		if (!(isSet(categoryDescription))) {
			var categoryDescription = "";
		}

		if (isSet(groupName)) {
			var serviceContext = JSONServiceContextUtil.setServiceContext(
				addGroupPermissions = "true",
				addGuestPermissions = "true",
				assetCategoryIds = "${assetCategoryIds}",
				assetTagNames = "${assetTagNames}",
				groupName = "${groupName}",
				site = "${site}",
				workflowAction = "${workflowAction}");
		}
		else {
			var serviceContext = JSONServiceContextUtil.setServiceContext(
				addGroupPermissions = "true",
				addGuestPermissions = "true",
				groupName = "Guest");
		}

		var curl = '''
			${portalURL}/api/jsonws/mb.mbcategory/add-category \
			-u test@liferay.com:test \
			-d userId=${userId} \
			-d parentCategoryId=${parentCategoryId} \
			-d name=${categoryName} \
			-d description=${categoryDescription} \
			-d serviceContext=${serviceContext}
		''';

		echo("## Adding a 'Category' with the following info using JSONWS:");

		echo("## * Name: ${categoryName}");

		echo("## * Description: ${categoryDescription}");

		var messageId = JSONCurlUtil.post("${curl}");
	}

	@summary = "This calls the JSON WS API to add a MB thread"
	macro addMessage {
		if (!(isSet(site))) {
			var site = "true";
		}

		var groupId = JSONGroupAPI._getGroupIdByName(groupName = "${groupName}", site = "${site}");

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(addGuestPermissions))) {
			var addGuestPermissions = "false";
		}

		var serviceContext = JSONServiceContextUtil.setServiceContext(
			addGroupPermissions = "true",
			addGuestPermissions = "${addGuestPermissions}",
			assetCategoryIds = "${assetCategoryIds}",
			assetTagNames = "${assetTagNames}",
			workflowAction = "${workflowAction}");

		if (isSet(categoryName)) {
			var categoryId = JSONMBMessage.getCategoryIdByName(
				groupName = "${groupName}",
				categoryName = "${categoryName}");
		}
		else {
			var categoryId = "0";
		}

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/add-message \
			-u ${userEmailAddress}:${userPassword} \
			-d groupId=${groupId} \
			-d categoryId=${categoryId} \
			-d subject=${threadSubject} \
			-d body=${threadBody} \
			-d format='bbcode' \
			-d inputStreamOVPs= \
			-d anonymous=false \
			-d priority=0 \
			-d allowPingbacks=true \
			-d serviceContext=${serviceContext}
		''';

		echo("## Adding a 'Message' with the following info using JSONWS:");

		echo("## * Subject: ${threadSubject}");

		echo("## * Body: ${threadBody}");

		var messageId = JSONCurlUtil.post("${curl}", "$['messageId']");
	}

	@summary = "This calls the JSON WS API to add a MB reply"
	macro addMessageReply {
		if (isSet(groupName)) {
			var messageId = JSONMBMessage.getMessageIdByName(
				categoryName = "${categoryName}",
				groupName = "${groupName}",
				threadSubject = "${threadSubject}");
		}
		else {
			var messageId = JSONMBMessage.getmessageId();
		}

		if (isSet(anonymous)) {
			var anonymous = "true";
		}
		else {
			var anonymous = "false";
		}

		var portalURL = JSONCompany.getPortalURL();

		var serviceContext = JSONServiceContextUtil.setServiceContext(
			addGroupPermissions = "true",
			addGuestPermissions = "${addGuestPermissions}");

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/add-message \
				-u test@liferay.com:test \
				-d parentMessageId=${messageId} \
				-d subject=RE: ${threadSubject} \
				-d body=${replyBody} \
				-d format=bbcode \
				-d inputStreamOVPs=[] \
				-d anonymous=${anonymous} \
				-d priority=0 \
				-d allowPingbacks=true \
				-d serviceContext=${serviceContext}
		''';

		echo("## Adding a 'Message' with the following info using JSONWS:");

		echo("## * Parent messageId: ${messageId}");

		echo("## * Subject: ${threadSubject}");

		echo("## * Body: ${threadBody}");

		var messageId = JSONCurlUtil.post("${curl}", "$['messageId']");
	}

	@summary = "This calls the JSON WS API to delete a category"
	macro deleteCategory {
		Variables.assertDefined(parameterList = "${categoryName},${groupName}");

		var categoryId = JSONMBMessage.getCategoryIdByName(
			groupName = "${groupName}",
			categoryName = "${categoryName}");

		var portalURL = JSONCompany.getPortalURL();

		var groupId = JSONGroupSetter.setGroupId(groupName = "${groupName}");

		var curl = '''
			${portalURL}/api/jsonws/mb.mbcategory/delete-category \
				-u test@liferay.com:test \
				-d categoryId=${categoryId} \
				-d groupId=${groupId}
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

	@summary = "This calls the JSON WS API to delete a message"
	macro deleteMessage {
		var messageId = JSONMBMessage.getMessageIdByName(
			categoryName = "${categoryName}",
			groupName = "${groupName}",
			threadSubject = "${threadSubject}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/delete-message \
				-u test@liferay.com:test \
				-d messageId=${messageId} \
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

	@summary = "This calls the JSON WS API to get the ID of a MB category through the URL"
	macro getCategoryId {
		var messageBoardsCategoryURL = selenium.getLocation();
		var portalURL = PropsUtil.get("portal.url");
		var categoryId = StringUtil.replace("${messageBoardsCategoryURL}", "${portalURL}/web/guest/message-boards-page/-/message_boards/category/", "");

		return "${categoryId}";
	}

	@summary = "Get the categoryId by using categoryName and groupName"
	macro getCategoryIdByName {
		Variables.assertDefined(parameterList = "${categoryName},${groupName}");

		var portalURL = JSONCompany.getPortalURL();

		var groupId = JSONGroupSetter.setGroupId(groupName = "${groupName}");

		var curl = '''
			${portalURL}/api/jsonws/mb.mbcategory/get-categories \
			-u test@liferay.com:test \
			-d groupId=${groupId}
		''';

		var categoryId = JSONCurlUtil.post("${curl}", "$.[?(@['name'] == '${categoryName}')]['categoryId']");

		if ("${categoryId}" == "") {
			fail("FAIL. Cannot find category.");
		}

		return "${categoryId}";
	}

	@summary = "This calls the JSON WS API to get the ID of a MB thread through the URL"
	macro getmessageId {
		var messageBoardsThreadURL = selenium.getLocation();
		var portalURL = PropsUtil.get("portal.url");
		var messageId = StringUtil.replace("${messageBoardsThreadURL}", "${portalURL}/web/guest/message-boards-page/-/message_boards/message/", "");

		return "${messageId}";
	}

	@summary = "Get the messageId by using both categoryName and groupName"
	macro getMessageIdByName {
		if (isSet(categoryName)) {
			var categoryId = JSONMBMessage.getCategoryIdByName(
				groupName = "${groupName}",
				categoryName = "${categoryName}");
		}
		else {
			var categoryId = "0";
		}

		var portalURL = JSONCompany.getPortalURL();

		var groupId = JSONGroupSetter.setGroupId(groupName = "${groupName}");

		var curl = '''
			${portalURL}/api/jsonws/mb.mbthread/get-threads \
			-u test@liferay.com:test \
			-d groupId=${groupId} \
			-d categoryId=${categoryId} \
			-d status=0 \
			-d "start=-1" \
			-d "end=-1"

		''';

		var messageId = JSONCurlUtil.post("${curl}", "$.[?(@['title'] == '${threadSubject}')]['rootMessageId']");

		if ("${messageId}" == "") {
			fail("FAIL. Cannot find category.");
		}

		return "${messageId}";
	}

	@summary = "Get the threadId by using both categoryName and groupName"
	macro getThreadIdByName {
		if (isSet(categoryName)) {
			var categoryId = JSONMBMessage.getCategoryIdByName(
				groupName = "${groupName}",
				categoryName = "${categoryName}");
		}
		else {
			var categoryId = "0";
		}

		var portalURL = JSONCompany.getPortalURL();

		var groupId = JSONGroupSetter.setGroupId(groupName = "${groupName}");

		var curl = '''
			${portalURL}/api/jsonws/mb.mbthread/get-threads \
			-u test@liferay.com:test \
			-d groupId=${groupId} \
			-d categoryId=${categoryId} \
			-d status=0 \
			-d "start=-1" \
			-d "end=-1"

		''';

		var threadId = JSONCurlUtil.post("${curl}", "$.[?(@['title'] == '${threadSubject}')]['threadId']");

		if ("${threadId}" == "") {
			fail("FAIL. Cannot find category.");
		}

		return "${threadId}";
	}

	@summary = "This calls the JSON WS API to move a category to trash"
	macro moveCategoryToTrash {
		var categoryId = JSONMBMessage.getCategoryIdByName(
			groupName = "${groupName}",
			categoryName = "${categoryName}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/mb.mbcategory/move-category-to-trash \
				-u test@liferay.com:test \
				-d categoryId=${categoryId} \
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

	@summary = "This calls the JSON WS API to move a message to trash"
	macro moveThreadToTrash {
		var threadId = JSONMBMessage.getThreadIdByName(
			categoryName = "${categoryName}",
			groupName = "${groupName}",
			threadSubject = "${threadSubject}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/mb.mbthread/move-thread-to-trash \
				-u test@liferay.com:test \
				-d threadId=${threadId} \
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

	@summary = "This calls the JSON WS API to subscribe to a message"
	macro subscribeToMessage {
		Variables.assertDefined(parameterList = "${threadSubject},${groupName}");

		var messageId = JSONMBMessage.getMessageIdByName(
			categoryName = "${categoryName}",
			groupName = "${groupName}",
			threadSubject = "${threadSubject}");

		var portalURL = JSONCompany.getPortalURL();

		if (!(isSet(userEmailAddress))) {
			var userEmailAddress = "test@liferay.com";
		}

		if (!(isSet(userPassword))) {
			var userPassword = "test";
		}

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/subscribe-message \
				-u ${userEmailAddress}:${userPassword} \
				-d messageId=${messageId} \
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

	@summary = "This calls the JSON WS API to update a message"
	macro updateMessage {
		var messageId = JSONMBMessage.getMessageIdByName(
			categoryName = "${categoryName}",
			groupName = "${groupName}",
			threadSubject = "${threadSubject}");

		var portalURL = JSONCompany.getPortalURL();

		var curl = '''
			${portalURL}/api/jsonws/mb.mbmessage/update-message \
				-u test@liferay.com:test \
				-d messageId=${messageId} \
				-d subject=${threadSubjectEdit} \
				-d body=${threadBodyEdit} \
				-d inputStreamOVPs= \
				-d priority=0 \
				-d allowPingbacks=false
		''';

		com.liferay.poshi.runner.util.JSONCurlUtil.post("${curl}");
	}

}