definition {

	macro assertAssetTypeUnselectable {
		PageEditor.gotoTab(tabName = "Mapping");

		AssertElementNotPresent(
			key_fieldLabel = "Item",
			key_text = "plus",
			locator1 = "Icon#ANY_ITEM_SELECTOR");
	}

	macro gotoEditableFieldMapping {
		if (contains("${id}", "banner-center")) {
			PageEditor.clickConfigurableField(fragmentName = "${fragmentName}");

			var elementHeight = selenium.getElementHeight("//div[contains(@class,'page-editor__topper__bar') and contains(.,'${fragmentName}')]//following-sibling::div[contains(@class,'page-editor__topper__content')]//div[contains(@data-lfr-background-image-id,'${id}')]");
			var offSetY = MathUtil.product("25","${elementHeight}");
			var offSetY = MathUtil.quotient("${offSetY}","100");

			var elementWidth = selenium.getElementWidth("//div[contains(@class,'page-editor__topper__bar') and contains(.,'${fragmentName}')]//following-sibling::div[contains(@class,'page-editor__topper__content')]//div[contains(@data-lfr-background-image-id,'${id}')]");
			var offSetX = MathUtil.product("50","${elementWidth}");
			var offSetX = MathUtil.quotient("${offSetX}","100");

			Click.clickAt(
				id = "${id}",
				key_fragmentName = "${fragmentName}",
				locator1 = "Fragment#BACKGROUND_IMAGE_EDITABLE_FIELD",
				value1 = "${offSetX},${offSetY}");
		}
		else {
			PageEditor.clickEditableField(
				contributed = "${contributed}",
				fragmentName = "${fragmentName}",
				id = "${id}");
		}

		PageEditor.gotoTab(tabName = "Selection");

		if ((contains("${id}", "image")) || (contains("${id}", "img")) || (contains("${id}", "banner-center"))) {
			AssertClick(
				key_navItem = "Image Source",
				locator1 = "PageEditor#NAV_ITEM_BUTTON",
				value1 = "Image Source");

			Pause(locator1 = "3000");

			if (!(IsSelectedLabel(key_fieldLabel = "Source Selection", locator1 = "Select#GENERIC_SELECT_FIELD", value1 = "Mapping"))) {
				Select(
					key_fieldLabel = "Source Selection",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "Mapping");

				AssertSelectedLabel(
					key_fieldLabel = "Source Selection",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "Mapping");
			}
		}
		else {
			AssertClick(
				key_navItem = "Mapping",
				locator1 = "PageEditor#NAV_ITEM_BUTTON",
				value1 = "Mapping");
		}
	}

	macro mapEditableFieldToAsset {
		WaitForElementPresent(
			key_fieldLabel = "Item",
			locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT_WITH_LABEL");

		var itemSelectorContentInputValue = selenium.getElementValue("//label[normalize-space(text())='Item']/following-sibling::div//input[contains(@class,'item-selector__content-input')]");

		if ("${itemSelectorContentInputValue}" == "") {
			Click(
				key_fieldLabel = "Item",
				key_text = "plus",
				locator1 = "Icon#ANY_ITEM_SELECTOR");
		}
		else {
			Click(
				key_fieldLabel = "Item",
				key_text = "change",
				locator1 = "Icon#ANY_ITEM_SELECTOR");
		}

		if (IsElementPresent(key_menuItem = "Select Item...",locator1 = "MenuItem#ANY_MENU_ITEM")) {
			if (isSet(contentItem)) {
				MenuItem.click(menuItem = "${contentItem}");
			}
			else {
				MenuItem.click(menuItem = "Select Item...");
			}
		}

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		NavItem.click(navItem = "${navItem}");

		if (isSet(uploadFileName)) {
			AssertElementPresent(locator1 = "ItemSelector#SELECT_FILE_UPLOAD_IMAGE");

			UploadCommonFile.uploadCommonFileHiddenNoMouseOver(
				locator1 = "TextInput#FILE",
				value1 = "${uploadFileName}");

			Pause(locator1 = "5000");

			AssertElementPresent.pauseAssertVisible(
				locator1 = "ItemSelector#ADD_BUTTON",
				value1 = "Add");

			AssertClick(
				locator1 = "ItemSelector#ADD_BUTTON",
				value1 = "Add");
		}
		else if ("${navItem}" == "Web Content") {
			LexiconEntry.changeDisplayStyle(displayStyle = "cards");

			Click(
				key_card = "${entryTitle}",
				locator1 = "Card#CARD_TITLE");
		}
		else {
			Click(
				key_card = "${entryTitle}",
				locator1 = "Card#CARD_TITLE");
		}

		AssertElementPresent(
			key_contentName = "${entryTitle}",
			locator1 = "PageEditor#ITEM_SELECTOR_CONTENT_INPUT");

		Pause(locator1 = "3000");
	}

	macro mapEditableFieldToCollectionItems {
		Click(locator1 = "PageEditor#CONTENT_PAGE_DISABLED_HEADER");

		Click.clickNoWaitForVisible(
			key_colPosition = "1",
			key_element = "//div[contains(@class,'page-editor')]//li[contains(.,'${fragmentName}')]",
			key_fragmentName = "Collection Display",
			key_rowPosition = "1",
			locator1 = "PageEditor#COLLECTION_CELL_NESTED_ELEMENT");

		Click(
			key_colPosition = "1",
			key_element = "//div[contains(@class,'page-editor__topper__bar') and contains(.,'${fragmentName}')]//following-sibling::div[contains(@class,'page-editor__topper__content')]//*[contains(@data-lfr-editable-id,'${id}')]",
			key_fragmentName = "Collection Display",
			key_rowPosition = "1",
			locator1 = "PageEditor#COLLECTION_CELL_NESTED_ELEMENT");

		PageEditor.gotoTab(tabName = "Selection");

		if ((contains("${id}", "image")) || (contains("${id}", "img"))) {
			AssertClick(
				key_navItem = "Image Source",
				locator1 = "PageEditor#NAV_ITEM_BUTTON",
				value1 = "Image Source");

			Pause(locator1 = "3000");

			if (!(IsSelectedLabel(key_fieldLabel = "Source Selection", locator1 = "Select#GENERIC_SELECT_FIELD", value1 = "Mapping"))) {
				Select(
					key_fieldLabel = "Source Selection",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "Mapping");

				AssertSelectedLabel(
					key_fieldLabel = "Source Selection",
					locator1 = "Select#GENERIC_SELECT_FIELD",
					value1 = "Mapping");
			}
		}
		else {
			AssertClick(
				key_navItem = "Mapping",
				locator1 = "PageEditor#NAV_ITEM_BUTTON",
				value1 = "Mapping");
		}

		Pause(locator1 = "3000");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "${field}");

		PageEditor.waitForAutoSave();

		AssertSelectedLabel(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "${field}");
	}

	macro mapEditableTextToField {
		PageEditorMapping.gotoEditableFieldMapping(
			contributed = "${contributed}",
			fragmentName = "${fragmentName}",
			id = "${id}");

		if (isSet(source)) {
			Select(
				key_fieldLabel = "Source",
				locator1 = "Select#GENERIC_SELECT_FIELD",
				value1 = "${source}");
		}

		Pause(locator1 = "3000");

		Select(
			key_fieldLabel = "Field",
			locator1 = "Select#GENERIC_SELECT_FIELD",
			value1 = "${field}");

		Pause(locator1 = "3000");

		PageEditor.waitForAutoSave();
	}

}