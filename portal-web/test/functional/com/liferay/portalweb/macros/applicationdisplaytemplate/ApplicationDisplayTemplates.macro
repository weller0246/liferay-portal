definition {

	macro addADTWithFieldEntryCP {
		AssertVisible(locator1 = "Button#PLUS");

		LexiconEntry.gotoAdd();

		MenuItem.click(menuItem = "${portletName} Template");

		SiteAdmin.viewPortletTitle(portletTitle = "Add ${portletName} Template");

		PortletEntry.inputName(name = "${portletName} Test ADT");

		Click(
			key_fieldName = "${fieldName}",
			locator1 = "DDMEditTemplate#SCRIPT_FIELD");

		PortletEntry.save();

		Refresh();
	}

	macro addCP {
		var key_adtType = "${adtType}";

		Portlet.viewEmptyMessage(message = "There are no templates.");

		LexiconEntry.gotoAdd();

		if (IsElementPresent(key_text = "More", locator1 = "Button#ANY")) {
			Button.clickMore();

			ScrollWebElementIntoView(
				key_menuItem = "${adtType} Template",
				locator1 = "MenuItem#ANY_MENU_ITEM");

			MenuItem.click(menuItem = "${adtType} Template");
		}
		else {
			MenuItem.click(menuItem = "${adtType} Template");
		}

		SiteAdmin.viewPortletTitle(portletTitle = "Add ${adtType} Template");

		PortletEntry.inputName(name = "${adtType} Test ADT");

		if (isSet(templateScript)) {
			Type.sendKeysAceEditor(
				locator1 = "DDMEditTemplate#CODE_MIRROR_EDITOR_CONTENT",
				value1 = "${templateScript}");
		}

		else if (isSet(fieldNameList)) {
			for (var fieldName : list "${fieldNameList}") {
				AssertClick(
					key_panelTitle = "Fields",
					key_variableName = "${fieldName}",
					locator1 = "DDMEditTemplate#WEB_CONTENT_SCRIPT_VARIABLE",
					value1 = "${fieldName}");
			}
		}

		else {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");

			var testBaseDirName = PropsUtil.get("test.base.dir.name");
			var testDependenciesDirName = PropsUtil.get("test.dependencies.dir.name");
			var filePath = "${testBaseDirName}tests/enduser/wem/applicationdisplaytemplate/${testDependenciesDirName}/${adtFile}";
			var filePath = FileUtil.fixFilePath("${filePath}");

			UploadFile(
				inputFieldId = "importScript",
				locator1 = "TextInput#INPUT_ID",
				value1 = "${filePath}");
		}

		PortletEntry.save();

		AssertTextEquals(
			locator1 = "ApplicationDisplayTemplates#ADT_TABLE_NAME_1",
			value1 = "${adtType} Test ADT");
	}

	macro editADTScript {
		Type.sendKeysAceEditor(
			locator1 = "DDMEditTemplate#CODE_MIRROR_EDITOR_CONTENT",
			value1 = "${adtScript}");

		PortletEntry.save();
	}

	macro editWidgetTemplate {
		SiteAdmin.viewPortletTitle(portletTitle = "Edit ${oldWidgetTemplateName}");

		if (isSet(newWidgetTemplateName)) {
			PortletEntry.inputName(name = "${newWidgetTemplateName}");
		}

		if (isSet(adtFile)) {
			Click(locator1 = "Icon#HEADER_VERTICAL_ELLIPSIS");

			var testBaseDirName = PropsUtil.get("test.base.dir.name");
			var testDependenciesDirName = PropsUtil.get("test.dependencies.dir.name");
			var filePath = "${testBaseDirName}tests/enduser/wem/applicationdisplaytemplate/${testDependenciesDirName}/${adtFile}";
			var filePath = FileUtil.fixFilePath("${filePath}");

			UploadFile(
				inputFieldId = "importScript",
				locator1 = "TextInput#INPUT_ID",
				value1 = "${filePath}");
		}

		PortletEntry.save();
	}

	macro gotoWidgetTemplatesEllipsisItem {
		Click.waitForMenuToggleJSClick(
			key_tableEntry = "${widgetTemplateName}",
			locator1 = "LexiconTable#TABLE_ENTRY_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "${item}");
	}

	macro openWidgetTemplatesAdmin {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_template_web_internal_portlet_TemplatePortlet");
	}

	macro searchGlobalADT {
		Search.searchCP(searchTerm = "${templateName}");

		AssertTextEquals(
			locator1 = "ApplicationDisplayTemplates#ADT_TABLE_NAME_1",
			value1 = "${templateName}");
	}

	macro selectPortletADT {
		Portlet.gotoPortletOptions(
			portletName = "${portletName}",
			portletOption = "Configuration");

		SelectFrame(locator1 = "IFrame#CONFIGURATION");

		var key_tab = "Display Settings";

		if (IsElementPresent(locator1 = "NavTab#TAB_LINK")) {
			Navigator.gotoNavTab(navTab = "Display Settings");
		}

		Select(
			locator1 = "Select#DISPLAY_TEMPLATE",
			value1 = "${templateName}");

		PortletEntry.save();

		SelectFrameTop();
	}

	macro viewTemplate {
		AssertTextEquals(
			locator1 = "ApplicationDisplayTemplates#ADT_TABLE_NAME_1",
			value1 = "${adtType} Test ADT");
	}

}