definition {

	macro addExportProcessCP {
		var key_application = "${application}";

		LexiconEntry.gotoAdd();

		AssertElementPresent(
			key_firstName = "${userFirstName}",
			key_lastName = "${userLastName}",
			locator1 = "ExportPersonalData#ADD_PROCESS_HEADER");

		if (isSet(applications)) {
			for (var application : list "${applications}") {
				Check(
					key_application = "${application}",
					locator1 = "ExportPersonalData#APPLICATION_CHECKBOX");
			}
		}
		else {
			PortletEntry.selectAll();
		}

		AssertClick(
			locator1 = "Button#EXPORT",
			value1 = "Export");

		Alert.viewSuccessMessage();

		AssertElementPresent(
			key_firstName = "${userFirstName}",
			key_lastName = "${userLastName}",
			locator1 = "ExportPersonalData#HEADER");

		while (IsElementPresent(locator1 = "ExportPersonalData#EXPORT_PROCESS_IN_PROGRESS")) {
			Pause(locator1 = "3000");
		}

		if (isSet(applications)) {
			for (var application : list "${applications}") {
				AssertElementNotPresent(
					key_application = "${application}",
					locator1 = "ExportPersonalData#EXPORT_PROCESS_APPLICATION_IN_PROGRESS");
			}
		}

		AssertElementPresent(locator1 = "ExportPersonalData#EXPORT_PROCESS_SUCCESSFUL");

		if (isSet(applications)) {
			for (var application : list "${applications}") {
				AssertElementPresent(
					key_application = "${application}",
					locator1 = "ExportPersonalData#EXPORT_PROCESS_SPECIFIC_APPLICATION_SUCCESSFUL");
			}
		}
	}

	macro anonymizeAllEntriesinApplicationCP {
		GDPR.filterByApplications(
			applications = "${applications}",
			itemsCount = "${itemsCount}");

		PortletEntry.selectAll();

		Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Anonymize");

		AssertConfirm(value1 = "Are you sure you want to anonymize the selected items?");

		Alert.viewSuccessMessage();
	}

	macro anonymizeDataViaReviewData {
		var key_application = "${application}";

		if (isSet(application)) {
			Click(
				key_applications = "${application}",
				locator1 = "DataErasure#REVIEW_DATA_APPLICATION_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Anonymize");

			AssertConfirm(value1 = "Are you sure you want to anonymize the entities of this application?");
		}

		if (isSet(allApplications)) {
			PortletEntry.selectAll();

			Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

			MenuItem.clickNoError(menuItem = "Anonymize");

			AssertConfirm(value1 = "Are you sure you want to anonymize the selected items?");

			var key_text = "Anonymize";

			AssertClickNoError(
				locator1 = "Button#ANY",
				value1 = "Anonymize");

			AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to anonymize the user's personal data?");

			AssertConfirm.assertConfirmationNoError(value1 = "All personal data associated with this user's applications has been deleted or anonymized. The user can now be deleted. Click OK to delete the user.");
		}

		Alert.viewSuccessMessage();
	}

	macro anonymizeMultipleEntriesCP {
		for (var rowEntry : list "${rowEntry}") {
			LexiconEntry.selectEntry(rowEntry = "${rowEntry}");
		}

		Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Anonymize");

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to anonymize the selected items?");

		Alert.viewSuccessMessage();
	}

	macro anonymizeSingleEntryViaInfoPanel {
		LexiconEntry.selectEntry(rowEntry = "${rowEntry}");

		Click.clickAt(locator1 = "Icon#INFO");

		Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Anonymize");

		AssertConfirm(value1 = "Are you sure you want to anonymize this entity?");

		Alert.viewSuccessMessage();
	}

	macro deleteAllEntriesCP {
		PortletEntry.selectAll();

		Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to delete the selected items?");

		Alert.viewSuccessMessage();
	}

	macro deleteAndAnonymizeAllEntriesCP {
		GDPR.filterByApplications(
			applications = "All Applications",
			itemsCount = "${itemsCount}");

		GDPR.deleteAllEntriesCP();

		GDPR.viewNoEntryInApplicationCP(applications = "All Applications");

		Navigator.gotoNavTab(navTab = "Auto Anonymize Data");

		var key_text = "Anonymize";

		AssertClickNoError(
			locator1 = "Button#ANY",
			value1 = "Anonymize");

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to anonymize the user's personal data?");

		AssertConfirm.assertConfirmationNoError(value1 = "All personal data associated with this user's applications has been deleted or anonymized. The user can now be deleted. Click OK to delete the user.");

		Alert.viewSuccessMessage();

		User.openUsersAdmin();

		LexiconEntry.viewNoEntry(rowEntry = "${userName}");
	}

	macro deleteMultipleEntriesCP {
		for (var rowEntry : list "${rowEntry}") {
			LexiconEntry.selectEntry(rowEntry = "${rowEntry}");
		}

		Click(locator1 = "Icon#TOOLBAR_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm.assertConfirmationNoError(value1 = "Are you sure you want to delete the selected items?");

		Alert.viewSuccessMessage();
	}

	macro deleteSingleEntryCP {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Delete",
			rowEntry = "${rowEntry}");

		AssertConfirm(value1 = "Are you sure you want to delete this entity?");

		Alert.viewSuccessMessage();
	}

	macro downloadExportedPersonalData {
		for (var application : list "${applications}") {
			var key_rowEntry = "${application}";

			Click(locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_ELLIPSIS");

			AssertClick.assertPartialTextClickAt(
				locator1 = "MenuItem#DOWNLOAD",
				value1 = "Download");
		}
	}

	macro editEntryCP {
		LexiconEntry.gotoEntryMenuItemNoError(
			menuItem = "Edit",
			rowEntry = "${rowEntry}");

		AssertElementPresent(
			key_portlet = "${applications}",
			locator1 = "ProductMenu#PORTLET_ACTIVE");
	}

	macro filterByApplications {
		Click.clickNoWaitForVisible(
			key_selectData = "${applications}",
			locator1 = "DataErasure#REVIEW_DATA_SELECT");

		AssertElementPresent(
			key_dataSelected = "${applications}",
			locator1 = "DataErasure#REVIEW_DATA_SELECTED");

		AssertTextEquals.assertPartialText(
			key_applications = "${applications}",
			locator1 = "DataErasure#APPLICATIONS_COUNT",
			value1 = "${applications} (${itemsCount})");

		AssertTextEquals.assertPartialText(
			key_itemsCount = "${itemsCount}",
			locator1 = "DataErasure#REMAINING_ITEMS_COUNT",
			value1 = "Remaining Items: ${itemsCount}");
	}

	macro filterByScope {
		Click.clickNoWaitForVisible(
			key_selectData = "${scope}",
			locator1 = "DataErasure#REVIEW_DATA_SELECT");

		AssertElementPresent(
			key_dataSelected = "${scope}",
			locator1 = "DataErasure#REVIEW_DATA_SELECTED");
	}

	macro viewEntryRowInApplicationCP {
		for (var tableEntryPartialText : list "${tableEntryPartialTextList}") {
			LexiconTable.viewTableEntryPartialText(
				tableEntry = "${tableEntry}",
				tableEntryPartialText = "${tableEntryPartialText}");
		}
	}

	macro viewNoEntryInApplicationCP {
		if (IsElementNotPresent(locator1 = "NavTab#ACTIVE_TAB_LINK", key_tab = "Review Data")) {
			Navigator.gotoNavTab(navTab = "Review Data");
		}

		AssertTextEquals.assertPartialText(
			key_applications = "${applications}",
			locator1 = "DataErasure#APPLICATIONS_COUNT",
			value1 = "${applications} (0)");

		AssertTextEquals.assertPartialText(
			key_itemsCount = "0",
			locator1 = "DataErasure#REMAINING_ITEMS_COUNT",
			value1 = "Remaining Items: 0");

		Portlet.viewEmptyMessage(message = "All data that requires review has been anonymized.");
	}

}