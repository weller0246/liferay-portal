definition {

	var formDescription = "Created Form Description";
	var formName = "Created Form Name";
	var rowNumber = "1";

	macro addFieldFromSidebarToFieldsGroup {
		DragAndDrop.javaScriptDragAndDropToBottom(
			key_fieldLabel = "${key_fieldLabel}",
			key_fieldName = "${key_fieldName}",
			locator1 = "Sidebar#ADD_FIELD_NAME",
			locator2 = "FormFields#LABEL");
	}

	macro addFieldOutsideOfFieldsGroup {
		DragAndDrop.javaScriptDragAndDropToBottom(
			key_fieldName = "${fieldName}",
			key_index = "${index}",
			locator1 = "Sidebar#ADD_FIELD_NAME",
			locator2 = "Form#FIELD_ROW_TARGET");
	}

	macro addFieldSameRow {
		var key_fieldLabel = "${fieldType}";

		if (isSet(formPageNumber)) {
			key_formPageNumber = "${formPageNumber}";
		}
		else {
			key_formPageNumber = "0";
		}

		if (isSet(fieldColumnNumber)) {
			key_fieldColumnNumber = "${fieldColumnNumber}";
		}
		else {
			key_fieldColumnNumber = "0";
		}

		if (isSet(fieldRowNumber)) {
			key_fieldRowNumber = "${fieldRowNumber}";
		}
		else {
			key_fieldRowNumber = "0";
		}

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "FormViewBuilder#SIDEBAR_FIELD_LABEL",
			locator2 = "Form#ADD_FIELD_SPECIFIC_POSITION",
			value1 = "${fieldType}");
	}

	macro addFieldToFieldsGroup {
		DragAndDrop.javaScriptDragAndDropToBottom(
			key_fieldLabel = "${targetFieldLabel}",
			key_fieldName = "${sourceFieldName}",
			locator1 = "Form#PAGE_FIELD_LABEL",
			locator2 = "FormFields#LABEL");
	}

	macro addPage {
		var key_formAddNewPageNumber = "${formAddNewPageNumber}";

		ScrollBy(value1 = "0, 230");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_ADD_NEW_PAGE",
			value1 = "New Page");
	}

	macro addSuccessPage {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		ScrollBy(value1 = "0, 230");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_ADD_SUCCESS_PAGE",
			value1 = "Add Success Page");
	}

	macro addSuccessPageForm {
		Click(locator1 = "Form#SUCCESS_PAGE_ADD");

		AssertTextEquals(
			locator1 = "Form#SUCCESS_PAGE_TITLE_FIELD",
			value1 = "Thank you.");

		AssertTextEquals(
			locator1 = "Form#SUCCESS_PAGE_DESCRIPTION_FIELD",
			value1 = "Your information was successfully received. Thank you for filling out the form.");
	}

	macro addTextField {
		if (isSet(formPageNumber)) {
			Form.gotoAddField(
				fieldPositionNumber = "${fieldPositionNumber}",
				fieldType = "Text",
				formPageNumber = "${formPageNumber}");
		}
		else {
			Form.gotoAddField(
				fieldPositionNumber = "${fieldPositionNumber}",
				fieldType = "Text");
		}
	}

	macro addTextFieldReference {
		if (isSet(formPageNumber)) {
			Form.gotoAddField(
				fieldPositionNumber = "${fieldPositionNumber}",
				fieldType = "Text",
				formPageNumber = "${formPageNumber}");
		}
		else {
			Form.gotoAddField(
				fieldPositionNumber = "${fieldPositionNumber}",
				fieldType = "Text");
		}

		Form.gotoAdvancedTab();

		Type(
			locator1 = "Form#FIELD_REFERENCE",
			value1 = "${key_fieldReferenceText}");
	}

	macro addTranslation {
		ScrollWebElementIntoView(locator1 = "Translation#ADD");

		Click(locator1 = "Translation#ADD");

		var key_localizedLanguage = "${localizedLanguage}";

		AssertClick(
			locator1 = "Translation#ADD_MENULIST_LANGUAGE",
			value1 = "${localizedLanguage}");
	}

	macro assertFieldPositionAtFormsGroupOnPublishedForm {
		AssertElementPresent(
			key_formPageNumber = "${key_formPageNumber}",
			key_rowNumber = "${key_rowNumber}",
			key_text = "${key_text}",
			locator1 = "Form#FIELD_SPECIFIC_POSITION_PUBLISHED_FORM");
	}

	macro assertFormWasPublished {
		AssertVisible(locator1 = "Form#PUBLISH_URL_ICON");
	}

	macro changeFieldTypeModalConfirmation {
		FormFields.changeFieldType(selectOption = "${selectOption}");

		while (IsElementPresent(locator1 = "Form#VALIDATE_CHANGE_FIELD_TYPE_MODAL_MESSAGE")) {
			Click(locator1 = "Form#SIDEBAR_CHANGE_FIELD_TYPE_MODAL_BUTTON");
		}
	}

	macro closeSidebar {
		Click(locator1 = "Sidebar#BACK");
	}

	macro configureEmailNotifications {
		AssertClick(
			locator1 = "Form#SETTINGS_TAB_EMAIL_NOTIFICATIONS",
			value1 = "Notifications");

		FormFields.enableSwitcher(fieldName = "sendEmailNotification");

		FormFields.editText(
			fieldName = "emailFromName",
			fieldValue = "${fromName}");

		FormFields.editText(
			fieldName = "emailFromAddress",
			fieldValue = "${fromAddress}");

		FormFields.editText(
			fieldName = "emailToAddress",
			fieldValue = "${toAddress}");

		FormFields.editText(
			fieldName = "emailSubject",
			fieldValue = "${subject}");

		Button.clickDone();
	}

	macro configureRedirectURL {
		AssertClick(
			locator1 = "Form#SETTINGS_TAB_PERSONALIZATION",
			value1 = "Personalization");

		FormFields.editText(
			fieldName = "redirectURL",
			fieldValue = "${URL}");
	}

	macro configureRequireAuthentication {
		FormFields.enableSwitcher(fieldName = "requireAuthentication");

		Button.clickDone();
	}

	macro configureRequireCaptcha {
		FormFields.enableSwitcher(fieldName = "requireCaptcha");

		Button.clickDone();
	}

	macro configureSubmitLabel {
		AssertClick(
			locator1 = "Form#SETTINGS_TAB_PERSONALIZATION",
			value1 = "Personalization");

		FormFields.editText(
			fieldName = "submitLabel",
			fieldValue = "${submitLabel}");

		Button.clickDone();
	}

	macro configureWorkflow {
		Click(locator1 = "Form#SETTINGS_TAB_WORKFLOW_CONFIGURATION_FIELD");

		var key_workflowDefinition = "${workflowDefinition}";

		AssertClick(
			locator1 = "Form#SETTINGS_TAB_WORKFLOW_CONFIGURATION",
			value1 = "${workflowDefinition}");

		Button.clickDone();
	}

	macro deleteCP {
		LexiconEntry.viewEntryName(rowEntry = "${formName}");

		LexiconEntry.gotoEllipsisMenuItemNoError(menuItem = "Delete");

		AssertConfirm(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();

		LexiconEntry.viewNoEntry(rowEntry = "${formName}");
	}

	macro deleteCurrentPage {
		var key_formDropDownNumber = "${formDropDownNumber}";
		var key_formPageNumber = "${formPageNumber}";

		//AssertElementPresent(locator1 = "FormPortlet#FORM_PAGE_ACTIVE");

		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_DELETE_CURRENT_PAGE",
			value1 = "Remove Page");

		AssertElementNotPresent(locator1 = "FormPortlet#FORM_PAGE");
	}

	macro deleteFieldModalConfirmation {
		FormsAdminNavigator.gotoDeleteField(fieldName = "${fieldName}");

		while (IsElementPresent(locator1 = "Form#VALIDATE_DELETE_FIELD_MODAL_DELETE_MESSAGE")) {
			Click(locator1 = "Form#SIDEBAR_DELETE_FIELD_MODAL_DELETE_BUTTON");
		}

		Form.validateNoFieldLabel(fieldLabel = "${fieldLabel}");
	}

	macro deleteSuccessPage {
		var key_formPageNumber = "${formPageNumber}";

		//AssertElementPresent(locator1 = "FormPortlet#FORM_PAGE_ACTIVE");

		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_DELETE_SUCCESS_PAGE",
			value1 = "Remove Success Page");

		AssertElementNotPresent(locator1 = "FormPortlet#FORM_PAGE");
	}

	macro disableAutocompleteConfiguration {
		FormFields.disableSwitcher(fieldName = "Autocomplete");
	}

	macro disableAutocompleteSwitcherTextField {
		Click(locator1 = "FormFields#SWITCHER_TEXTFIELD");
	}

	macro duplicate {
		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Duplicate",
			rowEntry = "${formName}");
	}

	macro duplicateFieldsGroup {
		while (IsElementNotPresent(locator1 = "Form#SIDEBAR_MENUITEM_DUPLICATE_FIELD")) {
			Click(
				key_fieldName = "${fieldName}",
				locator1 = "Form#FIELD_LABEL");
		}

		Click(locator1 = "Form#SIDEBAR_ELLIPSIS");

		AssertClick(
			locator1 = "Form#SIDEBAR_MENUITEM_DUPLICATE_FIELD",
			value1 = "Duplicate");
	}

	macro editDescription {
		WaitForElementPresent(locator1 = "Form#DESCRIPTION_FIELD");

		Click(locator1 = "Form#DESCRIPTION_FIELD");

		Type(
			locator1 = "Form#DESCRIPTION_FIELD",
			value1 = "${formDescription}");
	}

	macro editElementSetFieldLabel {
		WaitForElementPresent(locator1 = "Form#SIDEBAR_CONTENT_OPEN");

		while (IsTextNotEqual(key_fieldName = "label", locator1 = "FormFields#TEXT_FIELD", value1 = "") && (maxIterations = "10")) {
			FormFields.editTextWithBackspace(fieldName = "label");
		}

		if (!(isSet(fieldName))) {
			var fieldName = StringUtil.replace("${fieldValue}", " ", "");
		}

		Form.editFieldLabelMetal(fieldValue = "${fieldValue}");
	}

	macro editFieldDataProvider {
		FormFields.selectSelectOption(
			fieldName = "dataSourceType",
			selectOption = "From Data Provider");

		Pause(locator1 = "2000");

		FormFields.selectSelectOption(
			fieldName = "Choose a Data Provider",
			selectOption = "${dataProvider}");

		FormFields.selectSelectOption(
			fieldName = "Output Parameter",
			selectOption = "${dataProviderOutput}");
	}

	macro editFieldLabelMetal {
		FormFields.editText(
			fieldName = "label",
			fieldValue = "${fieldValue}");

		var key_fieldName = "${fieldValue}";

		AssertTextEquals(
			locator1 = "Form#FIELD_LABEL",
			value1 = "${fieldValue}");
	}

	macro editFieldReferenceMetal {
		FormFields.editText(
			fieldName = "fieldReference",
			fieldValue = "${fieldValue}");

		var key_fieldName = "${fieldValue}";

		AssertTextEquals(
			locator1 = "Form#FIELD_REFERENCE",
			value1 = "${fieldValue}");
	}

	macro editImageDescription {
		var descriptionPosition = "${descriptionPosition}";

		Type(
			locator1 = "Form#ADD_IMAGE_DESCRIPTION",
			value1 = "${descriptionContent}");
	}

	macro editName {
		Pause(locator1 = "2000");

		WaitForElementPresent(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#BUILDER_SIDEBAR_PANEL");

		AssertVisible(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#DESCRIPTION_FIELD");

		Type(
			locator1 = "Form#NAME_FIELD",
			value1 = "${formName}");
	}

	macro editNameLocalized {
		WaitForElementPresent(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#BUILDER_SIDEBAR_PANEL");

		AssertVisible(locator1 = "Form#NAME_FIELD");

		AssertVisible(locator1 = "Form#DESCRIPTION_FIELD");

		Type(
			locator1 = "Form#NAME_FIELD",
			value1 = "${formName}");
	}

	macro editPageDescription {
		ScrollWebElementIntoView(locator1 = "Form#PAGE_DESCRIPTION_FIELD");

		WaitForElementPresent(
			locator1 = "Form#PAGE_DESCRIPTION_FIELD",
			value1 = "${formPageDescriptionName}");

		Type(
			locator1 = "Form#PAGE_DESCRIPTION_FIELD",
			value1 = "${formPageDescriptionName}");
	}

	macro editPageTitle {
		var key_titleNumber = "${formTitleNumber}";

		ScrollWebElementIntoView(locator1 = "Form#PAGE_TITLE_FIELD");

		WaitForElementPresent(
			locator1 = "Form#PAGE_TITLE_FIELD",
			value1 = "${formPageName}");

		Type(
			locator1 = "Form#PAGE_TITLE_FIELD",
			value1 = "${formPageName}");
	}

	macro editSuccessPage {
		Type(
			locator1 = "Form#SUCCESS_PAGE_TITLE_FIELD",
			value1 = "${successPageTitle}");

		Type(
			locator1 = "Form#SUCCESS_PAGE_DESCRIPTION_FIELD",
			value1 = "${successPageDescription}");
	}

	macro editTextFieldDataProvider {
		FormFields.selectRadioOption(
			fieldName = "dataSourceType",
			radioOption = "From Data Provider");

		Pause(locator1 = "2000");

		FormFields.selectSelectOption(
			fieldName = "Choose a Data Provider",
			selectOption = "${dataProvider}");

		FormFields.selectSelectOption(
			fieldName = "Output Parameter",
			selectOption = "${dataProviderOutput}");
	}

	macro enableAutocompleteConfiguration {
		Click(locator1 = "FormFields#SWITCHER_TEXTFIELD");
	}

	macro getPublishedFormPublicURL {
		WaitForElementPresent(locator1 = "Form#PUBLISH_FORM_PUBLIC_URL");

		var publicURL = selenium.getElementValue("Form#PUBLISH_FORM_PUBLIC_URL");

		return "${publicURL}";
	}

	macro gotoAddElementSet {
		WaitForElementPresent(locator1 = "Form#SIDEBAR_CONTENT_OPEN");

		Form.gotoElementSetsTab();

		if (isSet(fieldPositionNumber)) {
			var key_fieldPositionNumber = "${fieldPositionNumber}";
		}
		else {
			var key_fieldPositionNumber = "0";
		}

		var key_fieldType = "${elementSetTitle}";

		if (isSet(formPageNumber)) {
			var key_formPageNumber = "${formPageNumber}";
		}
		else {
			var key_formPageNumber = "0";
		}

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "Form#ADD_FIELD_TYPE",
			locator2 = "Form#ADD_FIELD_POSITION",
			value1 = "${elementSetTitle}");
	}

	@summary = "Add the ${key_fieldType} field inside page ${formPageNumber} in position ${fieldPositionNumber}."
	macro gotoAddField {
		WaitForElementPresent(locator1 = "Form#SIDEBAR_CONTENT_OPEN");

		Form.gotoFieldsTab();

		if (isSet(fieldPositionNumber)) {
			var key_fieldPositionNumber = "${fieldPositionNumber}";
		}
		else {
			var key_fieldPositionNumber = "0";
		}

		var key_fieldType = "${fieldType}";

		if (isSet(formPageNumber)) {
			var key_formPageNumber = "${formPageNumber}";
		}
		else {
			var key_formPageNumber = "0";
		}

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "Form#ADD_FIELD_NAME",
			locator2 = "Form#ADD_FIELD_POSITION",
			value1 = "${fieldType}");

		if (IsElementNotPresent(key_tab = "Basic", locator1 = "NavTab#ACTIVE_TAB_LINK")) {
			Navigator.gotoNavTab(navTab = "Basic");
		}
	}

	macro gotoAdvancedTab {
		if (isSet(key_localeAdvanced)) {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Form#SIDEBAR_ADVANCED_TAB_LOCALE",
				value1 = "${key_localeAdvanced}");
		}
		else {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Form#SIDEBAR_ADVANCED_TAB",
				value1 = "Advanced");
		}
	}

	macro gotoAutocompleteTab {
		AssertClick(
			locator1 = "Form#SIDEBAR_AUTOCOMPLETE_TAB",
			value1 = "Autocomplete");

		Pause(locator1 = "1000");
	}

	macro gotoBasicTab {
		if (isSet(key_localeBasic)) {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Form#SIDEBAR_BASIC_TAB_LOCALE",
				value1 = "${key_localeBasic}");
		}
		else {
			AssertClick.assertPartialTextClickAt(
				locator1 = "Form#SIDEBAR_BASIC_TAB",
				value1 = "Basic");
		}
	}

	macro gotoElementSetsTab {
		AssertClick(
			locator1 = "Form#SIDEBAR_ELEMENT_SETS_TAB",
			value1 = "Element Sets");
	}

	macro gotoElementsTab {
		if (isSet(key_localeElements)) {
			AssertClick(
				locator1 = "Form#SIDEBAR_ELEMENTS_TAB_LOCALE",
				value1 = "${key_localeElements}");
		}

		else {
			AssertClick(
				locator1 = "Form#SIDEBAR_ELEMENTS_TAB",
				value1 = "Elements");
		}
	}

	macro gotoFieldContainer {
		Click(
			key_fieldName = "${fieldName}",
			locator1 = "Form#FIELD_LABEL");
	}

	macro gotoFieldsTab {
		AssertClick(
			locator1 = "Form#SIDEBAR_FIELDS_TAB",
			value1 = "Fields");
	}

	macro gotoFormPage {
		var key_formPageName = "${formPageName}";

		Click(locator1 = "Form#FORM_PAGE");
	}

	macro gotoPageAltPagination {
		var key_page = "${page}";

		Click(locator1 = "Form#ALT_PAGINATION_PAGE");
	}

	macro gotoPropertiesTab {
		if (isSet(key_localeAdvanced)) {
			AssertClick(
				locator1 = "Form#SIDEBAR_PROPERTIES_TAB",
				value1 = "Properties");
		}
		else {
			AssertClick(
				locator1 = "Form#SIDEBAR_PROPERTIES_TAB",
				value1 = "Properties");
		}
		Pause(locator1 = "1000");
	}

	macro moveFieldToRow {
		if (isSet(formPageNumber)) {
			key_formPageNumber = "${formPageNumber}";
		}
		else {
			key_formPageNumber = "0";
		}

		if (isSet(fieldPositionNumber)) {
			key_fieldPositionNumber = "${fieldPositionNumber}";
		}
		else {
			key_fieldPositionNumber = "0";
		}

		DragAndDrop.javaScriptDragAndDropToUp(
			key_fieldLabel = "${fieldLabel}",
			key_fieldName = "${fieldNameTarget}",
			locator1 = "FormFields#LABEL",
			locator2 = "Form#ADD_FIELD_POSITION");
	}

	macro pageReset {
		Click(
			key_formPageNumber = "${pageIndex}",
			locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		Click(
			key_saveButton = "Reset Page",
			locator1 = "Form#SAVE_FORM_BUTTON_LOCALIZED");
	}

	macro previewForm {
		Navigator.selectSpecificWindow(windowTitle = "Form - Forms");

		Pause(locator1 = "5000");

		var key_formName = "${formName}";

		AssertTextEquals(
			locator1 = "Form#PUBLISH_FORM_NAME_FIELD",
			value1 = "${formName}");

		FormFields.viewTextLabel(
			fieldLabel = "${fieldLabel}",
			fieldName = "${fieldName}");

		FormFields.editText(
			fieldName = "${fieldName}",
			fieldValue = "${fieldValue}");

		FormFields.viewTextValue(
			fieldName = "${fieldName}",
			fieldValue = "${fieldValue}");

		AssertElementNotPresent(locator1 = "FormPortlet#SUBMIT_BUTTON");
	}

	macro publishForm {
		WaitForElementPresent(locator1 = "Form#PUBLISH_FORM_BUTTON");

		AssertElementPresent(locator1 = "Form#NAME_FIELD");

		Click(locator1 = "Form#PUBLISH_FORM_BUTTON");

		Form.assertFormWasPublished();
	}

	macro reorderFields {
		DragAndDrop.javaScriptDragAndDropToObject(
			key_fieldName = "${fieldName}",
			key_index = "${index}",
			locator1 = "Form#PAGE_FIELD_LABEL",
			locator2 = "Form#FIELD_ROW_TARGET");
	}

	macro reorderFieldsFromFieldsGroup {
		DragAndDrop.javaScriptDragAndDropToObject(
			key_fieldName = "${key_fieldName}",
			key_pageNumber = "${key_pageNumber}",
			key_rowNumber = "${key_rowNumber}",
			locator1 = "Form#PAGE_FIELD_LABEL",
			locator2 = "Form#FIELDS_GROUP_TARGET_POSITON");
	}

	macro save {
		if (isSet(localeSaveForm)) {
			var key_localeSaveForm = "${localeSaveForm}";

			WaitForElementPresent(
				locator1 = "Form#SAVE_FORM_BUTTON_LOCALE",
				value1 = "${key_localeSaveForm}");

			AssertClick(
				locator1 = "Form#SAVE_FORM_BUTTON_LOCALE",
				value1 = "${key_localeSaveForm}");
		}
		else {
			WaitForElementPresent(
				locator1 = "Form#SAVE_FORM_BUTTON",
				value1 = "Save");

			AssertClick(
				locator1 = "Form#SAVE_FORM_BUTTON",
				value1 = "Save");
		}

		Alert.viewSuccessMessage();

		Pause(locator1 = "2000");
	}

	macro saveElementSet {
		WaitForElementPresent(
			locator1 = "Form#SAVE_ELEMENT_SET_BUTTON",
			value1 = "Save");

		AssertClick(
			locator1 = "Form#SAVE_ELEMENT_SET_BUTTON",
			value1 = "Save");

		VerifyElementPresent(locator1 = "Message#SUCCESS_DISMISSIBLE");
	}

	macro saveLocalized {
		var key_saveButton = "${saveButton}";

		WaitForElementPresent(
			locator1 = "Form#SAVE_FORM_BUTTON_LOCALIZED",
			value1 = "${saveButton}");

		AssertClick(
			locator1 = "Form#SAVE_FORM_BUTTON_LOCALIZED",
			value1 = "${saveButton}");

		Alert.viewSuccessMessage();

		Pause(locator1 = "2000");
	}

	macro selectTranslation {
		var key_localizedLanguage = "${localizedLanguage}";

		ScrollWebElementIntoView(locator1 = "Translation#UNSELECTED_LOCALE_ICON");

		Click(locator1 = "Translation#UNSELECTED_LOCALE_ICON");
	}

	macro submitFormPublish {
		Form.viewFormPublish(
			fieldLabel = "${fieldLabel}",
			fieldName = "${fieldName}");

		FormFields.editText(
			fieldLabel = "${fieldLabel}",
			fieldName = "${fieldName}",
			fieldValue = "${fieldValue}");

		AssertClick(
			locator1 = "Button#MAIN_CONTENT_SUBMIT",
			value1 = "Submit");

		Alert.viewSuccessMessage();
	}

	macro switchPaginationMode {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_SWITCH_PAGINATION_MODE",
			value1 = "Switch Pagination");
	}

	macro switchPaginationModeToBottom {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_SWITCH_PAGINATION_MODE_TO_BOTTOM",
			value1 = "Switch Pagination to Bottom");
	}

	macro switchPaginationModeToTop {
		Click(locator1 = "Form#PAGE_CONTROLS_ELLIPSIS_ICON");

		AssertClick(
			locator1 = "Form#PAGE_CONTROLS_SWITCH_PAGINATION_MODE_TO_TOP",
			value1 = "Switch Pagination to Top");
	}

	macro unpublishForm {
		WaitForElementPresent(locator1 = "Form#UNPUBLISH_FORM_BUTTON");

		AssertElementPresent(locator1 = "Form#NAME_FIELD");

		Click(locator1 = "Form#UNPUBLISH_FORM_BUTTON");

		var key_successMessage = "Your request completed successfully.";

		AssertElementPresent(locator1 = "Form#UNPUBLISH_FORM_MESSAGE_SUCCESS");
	}

	macro validateNoFieldLabel {
		AssertElementNotPresent(
			locator1 = "Form#FIELD_LABEL",
			value1 = "${fieldLabel}");
	}

	macro viewAltPagePagination {
		var key_page = "${page}";

		AssertElementPresent(locator1 = "Form#ALT_PAGINATION_PAGE");
	}

	macro viewAltSuccessPagePagination {
		AssertElementPresent(locator1 = "Form#ALT_PAGINATION_SUCCESS_PAGE");
	}

	macro viewCollapsedCollapseButton {
		AssertElementPresent(
			key_trueOrFalse = "false",
			locator1 = "Form#COLLAPSE_BUTTON");
	}

	macro viewExpandedCollapseButton {
		AssertElementPresent(
			key_trueOrFalse = "true",
			locator1 = "Form#COLLAPSE_BUTTON");
	}

	macro viewFieldReference {
		key_fieldName = "${fieldName}";

		Click(
			key_fieldName = "${fieldName}",
			locator1 = "Form#FIELD_BODY");

		Form.gotoAdvancedTab();

		AssertTextEquals(
			locator1 = "Form#FIELD_REFERENCE",
			value1 = "${key_fieldReference}");
	}

	macro viewFieldReferenceFromTextField {
		Click(
			key_fieldName = "${fieldName}",
			locator1 = "Form#FIELD_BODY");

		Form.gotoAdvancedTab();

		AssertTextEquals(
			locator1 = "Form#FIELD_REFERENCE",
			value1 = "${key_fieldReference}");
	}

	macro viewFieldsGroupCollapsedField {
		AssertElementNotPresent(
			key_fieldLabel = "${fieldLabel}",
			locator1 = "Form#FIELDS_GROUP_FIELD_COLLAPSIBLE_IS_VISIBLE");
	}

	macro viewFieldsGroupNotCollapsedField {
		AssertElementPresent(
			key_fieldLabel = "${fieldLabel}",
			locator1 = "Form#FIELDS_GROUP_FIELD_COLLAPSIBLE_IS_VISIBLE");
	}

	macro viewFormDescription {
		AssertTextEquals(
			locator1 = "Form#DESCRIPTION_FIELD",
			value1 = "${formDescription}");
	}

	macro viewFormName {
		AssertTextEquals(
			locator1 = "Form#NAME_FIELD",
			value1 = "${formName}");
	}

	macro viewFormNotPublished {
		WaitForElementPresent(locator1 = "Form#PUBLISH_ICON");

		Click(locator1 = "Form#PUBLISH_ICON");

		var publishFormURL = Form.getPublishedFormPublicURL();

		Form.unpublishForm();

		Navigator.openSpecificURL(url = "${publishFormURL}");

		AssertTextEquals(
			locator1 = "Message#ERROR_3_ALT",
			value1 = "This form is not available or it was not published.");
	}

	macro viewFormPlaceholderPage {
		AssertElementPresent(
			key_pageNumber = "${pageIndex}",
			locator1 = "Form#PAGE_DEFAULT_DESCRIPTION_BY_NUMBER");
	}

	macro viewFormPlaceholderText {
		AssertElementPresent(
			key_value = "${fieldPlaceholderText}",
			locator1 = "Form#PLACEHOLDER_TEXT_FIELD");
	}

	macro viewFormPublish {
		FormsAdminNavigator.openPublishURL();

		var key_formName = "${formName}";

		AssertTextEquals(
			locator1 = "Form#PUBLISH_FORM_NAME_FIELD",
			value1 = "${formName}");

		FormFields.viewTextLabel(
			fieldLabel = "${fieldLabel}",
			fieldName = "${fieldName}");
	}

	macro viewFormTemporarilyNotAvailableMessage {
		AssertElementPresent(locator1 = "Form#FORM_TEMPORARILY_NOT_AVAILABLE");
	}

	macro viewPageEmptyField {
		AssertElementPresent(
			key_pageNumber = "${pageIndex}",
			locator1 = "Form#PAGE_EMPTY_FORM_FIELD_BY_NUMBER");
	}

	macro viewPageName {
		AssertElementPresent(
			key_pageName = "${formTitleNumber}",
			locator1 = "Form#PAGE_NAME",
			pageName = "${formPageName}");
	}

	macro viewPageTitleDefault {
		AssertElementPresent(
			key_pageNumber = "${pageIndex}",
			locator1 = "Form#PAGE_DEFAULT_TITLE_BY_NUMBER");
	}

	macro viewPublishFormSuccessMessage {
		var key_alertMessage = "The form was published successfully! Access it with this URL";

		AssertVisible(locator1 = "Form#PUBLISH_UNPUBLISH_ICON_CLOSE");
	}

	macro viewRedirectedURL {
		WaitForElementPresent(
			key_navItem = "Home",
			locator1 = "NavBar#NAV_ITEM_LINK");

		AssertLocation(value1 = "${friendlyURL}");
	}

	macro viewRequiredFieldIndicator {
		AssertElementPresent(locator1 = "Form#FIELD_REQUIRED_INDICATOR");
	}

	macro viewSaveNotification {
		AssertTextEquals.assertPartialText(
			locator1 = "Form#SAVE_NOTIFICATION",
			value1 = "Draft");
	}

	macro viewSelectFromListOptionOnPreview {
		AssertElementPresent(
			key_optionValue = "${optionValue}",
			key_rowPosition = "${rowPosition}",
			locator1 = "FormFields#SELECT_OPTIONS_FIELD_BY_ROW_PREVIEW");
	}

	macro viewSubmitButtonText {
		AssertTextEquals(
			locator1 = "FormPortlet#SUBMIT_BUTTON",
			value1 = "${key_buttonText}");
	}

	macro viewSubmitNotPresent {
		AssertElementNotPresent(locator1 = "FormPortlet#SUBMIT_BUTTON");
	}

}