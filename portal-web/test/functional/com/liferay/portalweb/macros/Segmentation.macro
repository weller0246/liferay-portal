definition {

	macro _deleteAllSegments {
		while (IsElementPresent(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS")) {
			LexiconEntry.gotoEllipsisMenuItemNoError(menuItem = "Delete");

			AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

			Alert.viewSuccessMessage();
		}
	}

	macro addProperties {
		var key_propertyOption = "${propertyOption}";

		Click(locator1 = "Segmentation#PROPERTIES_SEARCH");

		DragAndDrop.javaScriptDragAndDropToObject(
			locator1 = "Segmentation#ADD_FIELD_TYPE",
			locator2 = "Segmentation#ADD_FIELD_POSITION",
			value1 = "${propertyOption}");
	}

	macro assetLanguageTag {
		Click(locator1 = "Segmentation#TRANSLATION_BUTTON");

		AssertTextEquals(
			key_locale = StringUtil.replace("${locale}", "_", "-"),
			locator1 = "Segmentation#TRANSLATION_STATUS_TITLE",
			value1 = "${tagName}");
	}

	macro changeCriterionConjunction {
		Click(locator1 = "Segmentation#CRITERION_CONJUNCTION");

		Click(
			key_criterionConjunctionItem = "${criterionConjunctionItem}",
			locator1 = "Segmentation#CRITERION_CONJUNCTION_ITEM");
	}

	macro changeCriterionInput {
		var key_criterionInputOption = "${criterionInputOption}";

		Select(
			locator1 = "Segmentation#CRITERION_INPUT",
			value1 = "${criterionInputOption}");
	}

	macro changeLocale {
		Click(locator1 = "Segmentation#TRANSLATION_BUTTON");

		Click(
			key_locale = StringUtil.replace("${locale}", "_", "-"),
			locator1 = "Segmentation#TRANSLATION_STATUS_TITLE");
	}

	macro checkModifiedDate {
		var displayDateDay = DateUtil.getCurrentDate();
		var displayDateMonth = DateUtil.getCurrentMonth();

		if (("${displayDateMonth}" != "10") && ("${displayDateMonth}" != "11") && ("${displayDateMonth}" != "12")) {
			var displayDateMonth= "0${displayDateMonth}";
		}

		var displayDateYear = DateUtil.getCurrentYear();

		var i = MathUtil.quotient("${displayDateDay}", "10");

		if ("${i}" == "0") {
			var displayDateDay= "0${displayDateDay}";
		}

		var displayDate = "${displayDateYear}-${displayDateMonth}-${displayDateDay}";

		Segmentation.viewSegment(
			criterion = "date",
			value = "${displayDate}");
	}

	macro clickAssignSiteRolesOption {
		Click(locator1 = "Segmentation#SEGMENT_OPTIONS_MENU");

		Click(locator1 = "Segmentation#ASSIGN_SITE_ROLES_OPTION");

		SelectFrame(value1 = "relative=top");

		AssertTextPresent(
			locator1 = "Segmentation#ASSIGN_SITE_ROLES_MODAL_TITLE",
			value1 = "Assign Site Roles");
	}

	macro deleteProperties {
		Click(locator1 = "Segmentation#DELETE_SEGMENT");
	}

	macro deleteSegment {
		Click.waitForMenuToggleJSClick(
			key_tableEntry = "${entry}",
			locator1 = "LexiconTable#TABLE_ENTRY_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Delete");

		AssertConfirm.waitForConfirmation(value1 = "Are you sure you want to delete this? It will be deleted immediately.");

		Alert.viewSuccessMessage();
	}

	macro disableAssingRolesBySegmentsCheckbox {
		if (IsChecked(locator1 = "Segmentation#ENABLE_ASSIGN_ROLES_SEGMENTS_CHECKBOX")) {
			Click.javaScriptClick(locator1 = "Segmentation#ENABLE_ASSIGN_ROLES_SEGMENTS_CHECKBOX");
		}

		if (IsElementPresent(locator1 = "Button#SAVE")) {
			Click(locator1 = "Button#SAVE");
		}

		if (IsElementPresent(locator1 = "Button#UPDATE")) {
			Click(locator1 = "Button#UPDATE");
		}

		AssertNotChecked.assertNotCheckedNotVisible(locator1 = "Segmentation#ENABLE_ASSIGN_ROLES_SEGMENTS_CHECKBOX");
	}

	macro editSegment {
		Click.waitForMenuToggleJSClick(
			key_tableEntry = "${entry}",
			locator1 = "LexiconTable#TABLE_ENTRY_ELLIPSIS");

		MenuItem.clickNoError(menuItem = "Edit");
	}

	macro enableAssingRolesBySegmentsCheckbox {
		if (IsNotChecked.isNotCheckedNotVisible(locator1 = "Segmentation#ENABLE_ASSIGN_ROLES_SEGMENTS_CHECKBOX")) {
			Click.javaScriptClick(locator1 = "Segmentation#ENABLE_ASSIGN_ROLES_SEGMENTS_CHECKBOX");
		}

		if (IsElementPresent(locator1 = "Button#SAVE")) {
			Click(locator1 = "Button#SAVE");
		}

		if (IsElementPresent(locator1 = "Button#UPDATE")) {
			Click(locator1 = "Button#UPDATE");
		}

		AssertChecked.assertCheckedNotVisible(locator1 = "Segmentation#ENABLE_ASSIGN_ROLES_SEGMENTS_CHECKBOX");
	}

	macro fillProperty {
		if (isSet(criterionKey)) {
			Type(
				key_criterion = "key",
				locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
				value1 = "${criterionKey}");

			Type(
				key_criterion = "value",
				locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
				value1 = "${criterionValue}");
		}

		else if (isSet(resolutionValue)) {
			Type(
				key_criterion = "decimal-number",
				locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
				value1 = "${resolutionValue}");
		}

		else if (isSet(selectCheckbox)) {
			Click(locator1 = "Button#SELECT");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			Check(
				key_checkboxName = "${selectCheckbox}",
				locator1 = "Checkbox#ENABLE_CHECKBOX");

			SelectFrame(value1 = "relative=top");

			Click(locator1 = "Modal#SELECT_BUTTON");
		}

		else if (isSet(chooseItem)) {
			Click(locator1 = "Button#SELECT");

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			AssertClick(
				key_rowEntry = "${chooseItem}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_CHOOSE",
				value1 = "Choose");

			SelectFrame(value1 = "relative=top");
		}

		else if (isSet(selectLink)) {
			if (isSet(indexNumber)) {
				Click(
					key_indexNumber = "${indexNumber}",
					key_text = "Select",
					locator1 = "Button#ANY_N");
			}
			else {
				Click(locator1 = "Button#SELECT");
			}

			SelectFrame(locator1 = "IFrame#MODAL_BODY");

			AssertClick(
				key_rowEntry = "${selectLink}",
				locator1 = "ContentRow#ENTRY_CONTENT_ENTRY_NAME_LINK",
				value1 = "${selectLink}");

			SelectFrame(value1 = "relative=top");
		}

		else if (isSet(dateValue)) {
			Type.sendKeys(
				key_criterion = "date",
				locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
				value1 = "${dateValue}");
		}

		else if (isSet(optionsValue)) {
			Select(
				key_criterion = "options",
				locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
				value1 = "${optionsValue}");
		}

		else {
			Type(
				locator1 = "Segmentation#PROPERTY_FIELD",
				value1 = "${propertyField}");
		}
	}

	macro fillTitle {
		Click(locator1 = "Segmentation#TITLE_FIELD");

		Type(
			locator1 = "Segmentation#TITLE_FIELD",
			value1 = "${titleField}");
	}

	macro getPortalInstanceDefaultLanguageId {
		var portalURL = PropsUtil.get("portal.url");
		var companyId = JSONCompany.getCompanyId(portalInstanceName = "${portalInstanceName}");
		var curl = '''
			${portalURL}/api/jsonws/country/get-company-countries \
			-u test@liferay.com:test \
			-d companyId=${companyId} \
			-d start=0 \
			-d end=1 \
			-d -orderByComparator=
		''';
		var languageId = JSONCurlUtil.post("${curl}", "$..defaultLanguageId");
		return "${languageId}";
	}

	macro gotoSidebar {
		Click(
			key_typeName = "${fieldType}",
			locator1 = "Segmentation#SEGMENT_FIELDS_TYPE");
	}

	macro openSegmentOptions {
		Click(locator1 = "Segmentation#SEARCH_FIELD");

		Type(
			locator1 = "Segmentation#SEARCH_FIELD",
			value1 = "${segmentName}");

		KeyPress(
			locator1 = "Segmentation#SEARCH_FIELD",
			value1 = "\ENTER");

		if (IsElementPresent(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS")) {
			Click(locator1 = "Icon#BODY_VERTICAL_ELLIPSIS");
		}
	}

	macro openSegmentsAdmin {
		Navigator.openWithAppendToBaseURL(urlAppend = "group/${siteURLKey}/~/control_panel/manage?p_p_id=com_liferay_segments_web_internal_portlet_SegmentsPortlet");
	}

	macro selectTag {
		Click(locator1 = "Segmentation#ADD_TAG_BUTTON");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		Click(locator1 = "Segmentation#SEARCH_TAG_FIELD");

		Type(
			locator1 = "Segmentation#SEARCH_TAG_FIELD",
			value1 = "${tagOption}");

		KeyPress(
			locator1 = "Segmentation#SEARCH_TAG_FIELD",
			value1 = "\ENTER");

		Click(locator1 = "Segmentation#TAG_OPTION");

		SelectFrameTop();
	}

	macro setVocabularySessionPropertyDropdown {
		Select(
			locator1 = "Segmentation#SESSION_PROPERTY_SESSION_LINK_PROPERTY",
			value1 = "${propertyName}");

		Select(
			locator1 = "Segmentation#SESSION_PROPERTY_SESSION_LINK_VOCABULARY",
			value1 = "${vocabularyName}");

		Button.click(button = "Save");
	}

	macro tearDown {
		while (IsElementPresent(locator1 = "Segmentation#SEGMENT_LIST")) {
			Segmentation._deleteAllSegments();
		}

		AssertElementNotPresent(locator1 = "Segmentation#SEGMENT_LIST");
	}

	macro viewEntryNotPresent {
		LexiconEntry.viewNoEntry(rowEntry = "${segmentName}");
	}

	macro viewMembers {
		var key_memberName = "${memberName}";

		Click(locator1 = "Segmentation#VIEW_MEMBERS_BUTTON");

		SelectFrame.selectFrameNoLoading(locator1 = "IFrame#MODAL_BODY");

		if (isSet(memberNameList)) {
			for (var key_memberName : list "${memberNameList}") {
				AssertElementPresent(locator1 = "Segmentation#MEMBER_NAME_LISTED");
			}
		}

		else {
			AssertElementPresent(locator1 = "Segmentation#MEMBER_NAME_LISTED");
		}

		SelectFrame(value1 = "relative=top");

		Click(locator1 = "Segmentation#CLOSE_MODAL");

		SelectFrame(value1 = "relative=top");
	}

	macro viewSegment {
		if (isSet(criterionKey)) {
			AssertValue(
				key_criterion = "key",
				locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
				value1 = "${criterionKey}");

			AssertValue(
				key_criterion = "value",
				locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
				value1 = "${criterionValue}");
		}

		else if (isSet(criterionInputOption)) {
			AssertValue(
				locator1 = "Segmentation#CRITERION_INPUT",
				value1 = "${criterionInputOption}");
		}

		else if (isSet(criterion)) {
			AssertValue(
				key_criterion = "${criterion}",
				locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
				value1 = "${value}");
		}

		else {
			AssertValue(
				locator1 = "Segmentation#PROPERTY_FIELD",
				value1 = "${propertyField}");
		}
	}

}