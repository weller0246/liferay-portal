@component-name = "portal-clustering"
definition {

	property app.server.bundles.size = "2";
	property cluster.enabled = "true";
	property license.required = "true";
	property minimum.slave.ram = "24";
	property portal.release = "false";
	property portal.upstream = "false";
	property remote.elasticsearch.enabled = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Clustering";

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
	}

	@priority = "4"
	test ClusterCanRecoverByShuttingDownAnyNodeWithManualRecovery {
		property custom.properties = "license.cluster.overload.node.auto.shut.down=false";
		property dxp.license.file = "dxp-license-virtual-cluster.xml";
		property test.name.skip.portal.instance = "ClusteringLicense#ClusterCanRecoverByShuttingDownAnyNodeWithManualRecovery";

		Pause(locator1 = "360000");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		Alert.viewErrorMessage(errorMessage = "Grace period which already ended");

		Navigator.openSpecificURL(url = "http://localhost:10080");

		Alert.viewErrorMessage(errorMessage = "exceeded the maximum number of cluster nodes");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_2",
			value1 = "This instance is not registered.");

		Clustering.shutdownSpecificServer(nodePort = "9080");

		Pause(locator1 = "60000");

		for (var nodeNumber : list "8,10") {
			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			AssertElementNotPresent(locator1 = "Message#ERROR");
		}
	}

	@ignore = "true"
	@priority = "3"
	test ExceedDoubleNodeLimit {
		property app.server.bundles.size = "4";
		property dxp.license.file = "dxp-license-virtual-cluster.xml";
		property test.name.skip.portal.instance = "ClusteringLicense#ExceedDoubleNodeLimit";

		for (var nodeNumber : list "8,9,10,11") {
			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			Alert.viewErrorMessage(errorMessage = "licensed for this cluster has been exceeded");
			Alert.viewErrorMessage(errorMessage = "grace period");
		}

		Navigator.openSpecificURL(url = "http://localhost:12080");

		Alert.viewErrorMessage(errorMessage = "This instance is not registered.");

		for (var nodeNumber : list "12,11,10") {
			Clustering.waitForNodeShutdown(nodePort = "${nodeNumber}080");

			Pause(locator1 = "60000");
		}

		for (var nodeNumber : list "8,9") {
			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			AssertElementNotPresent(locator1 = "Message#ERROR");
		}
	}

	@priority = "4"
	test LimitPreviouslyValidatedClusterNodes {
		property dxp.license.file = "dxp-license-virtual-cluster.xml";
		property skip.start.app.server.index = "2";
		property test.name.skip.portal.instance = "ClusteringLicense#LimitPreviouslyValidatedClusterNodes";

		User.firstLoginPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Clustering.shutdownSpecificServer(nodePort = "9080");

		Clustering.startSpecificServer(
			deleteLiferayHome = "true",
			nodePort = "10080");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:10080",
			userEmailAddress = "test@liferay.com");

		for (var nodeNumber : list "8,10") {
			Navigator.openSpecificURL(url = "http://localhost:${nodeNumber}080");

			Page.assertNodePortPG(nodePort = "${nodeNumber}080");
		}

		Clustering.startSpecificServer(
			deleteLiferayHome = "false",
			nodePort = "9080");

		for (var nodeNumber : list "8,9,10") {
			Clustering.viewTextPresentOnSpecificNode(
				expectedText = "licensed for this cluster has been exceeded",
				nodePort = "${nodeNumber}080");

			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			Alert.viewErrorMessage(errorMessage = "licensed for this cluster has been exceeded");
			Alert.viewErrorMessage(errorMessage = "grace period");
		}

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Alert.viewErrorMessage(errorMessage = "will be automatically deactivated and shut down");

		Clustering.waitForNodeShutdown(nodePort = "9080");

		// Wait for cluster to notify all nodes that they are no longer overloaded

		Pause(locator1 = "60000");

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Shutting down current node as it is the latest one",
			nodePort = "9080");

		for (var nodeNumber : list "8,10") {
			Clustering.viewTextPresentOnSpecificNode(
				expectedText = "Finished shutting down overloaded nodes",
				nodePort = "${nodeNumber}080");

			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			Page.assertNodePortPG(nodePort = "${nodeNumber}080");

			AssertElementNotPresent(locator1 = "Message#ERROR");
		}
	}

	@priority = "4"
	test LimitPreviouslyValidatedClusterNodesWithManualRecovery {
		property custom.properties = "license.cluster.overload.node.auto.shut.down=false";
		property dxp.license.file = "dxp-license-virtual-cluster.xml";
		property skip.start.app.server.index = "2";
		property test.name.skip.portal.instance = "ClusteringLicense#LimitPreviouslyValidatedClusterNodesWithManualRecovery";

		Clustering.viewClusterStatusInConsole();

		User.firstLoginPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Clustering.shutdownSpecificServer(nodePort = "9080");

		Clustering.startSpecificServer(
			deleteLiferayHome = "true",
			nodePort = "10080");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:10080",
			userEmailAddress = "test@liferay.com");

		for (var nodeNumber : list "8,10") {
			Navigator.openSpecificURL(url = "http://localhost:${nodeNumber}080");

			Page.assertNodePortPG(nodePort = "${nodeNumber}080");
		}

		Clustering.startSpecificServer(
			deleteLiferayHome = "false",
			nodePort = "9080");

		User.loginPG(
			nodePort = "9080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		Alert.viewErrorMessage(errorMessage = "licensed for this cluster has been exceeded");
		Alert.viewErrorMessage(errorMessage = "grace period");
		Alert.viewErrorMessage(errorMessage = "will be automatically deactivated");

		Clustering.waitForNodeShutdown(nodePort = "9080");

		Navigator.openSpecificURL(url = "http://localhost:8080");

		Page.assertNodePortPG(nodePort = "8080");
	}

	@priority = "5"
	test ViewNodeLimit {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property dxp.license.file = "dxp-license-virtual-cluster.xml";
		property test.name.skip.portal.instance = "ClusteringLicense#ViewNodeLimit";

		AssertElementNotPresent(locator1 = "Message#ERROR");

		for (var nodeNumber : list "8,9,10") {
			Clustering.viewTextPresentOnSpecificNode(
				expectedText = "licensed for this cluster has been exceeded",
				nodePort = "${nodeNumber}080");
		}

		User.firstLoginPG();

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		JSONUser.setFirstPassword(
			agreeToTermsAndAnswerReminderQuery = "true",
			requireReset = "false",
			userEmailAddress = "userea@liferay.com");

		Clustering.viewClusterStatusInConsole();

		Page.assertNodePortPG(nodePort = "8080");

		Alert.viewErrorMessage(errorMessage = "licensed for this cluster has been exceeded");
		Alert.viewErrorMessage(errorMessage = "grace period");

		Navigator.openSpecificURL(url = "http://localhost:8080/c/portal/logout");

		User.loginPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		AssertElementNotPresent(locator1 = "Message#ERROR");

		for (var nodeNumber : list "9,10") {
			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			Page.assertNodePortPG(nodePort = "${nodeNumber}080");

			Alert.viewErrorMessage(errorMessage = "licensed for this cluster has been exceeded");
			Alert.viewErrorMessage(errorMessage = "grace period");
		}

		Alert.viewErrorMessage(errorMessage = "will be automatically deactivated and shut down");

		Navigator.openSpecificURL(url = "http://localhost:10080/c/portal/logout");

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:10080",
			userEmailAddress = "userea@liferay.com");

		AssertElementNotPresent(locator1 = "Message#ERROR");

		Clustering.waitForNodeShutdown(nodePort = "10080");

		Clustering.viewTextPresentOnSpecificNode(
			expectedText = "Shutting down current node as it is the latest one",
			nodePort = "10080");

		for (var nodeNumber : list "8,9") {
			Clustering.viewTextPresentOnSpecificNode(
				expectedText = "Finished shutting down overloaded nodes",
				nodePort = "${nodeNumber}080");

			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			AssertElementNotPresent(locator1 = "Message#ERROR");
		}
	}

	@priority = "5"
	test ViewNodeLimitWithManualRecovery {
		property custom.properties = "license.cluster.overload.node.auto.shut.down=false";
		property dxp.license.file = "dxp-license-virtual-cluster.xml";
		property test.name.skip.portal.instance = "ClusteringLicense#ViewNodeLimitWithManualRecovery";

		for (var nodeNumber : list "8,9,10") {
			Clustering.viewTextPresentOnSpecificNode(
				expectedText = "licensed for this cluster has been exceeded",
				nodePort = "${nodeNumber}080");

			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			Page.assertNodePortPG(nodePort = "${nodeNumber}080");

			Alert.viewErrorMessage(errorMessage = "licensed for this cluster has been exceeded");
			Alert.viewErrorMessage(errorMessage = "grace period");
		}

		Alert.viewErrorMessage(errorMessage = "will be automatically deactivated");

		Pause(locator1 = "360000");

		for (var nodeNumber : list "8,9") {
			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			Alert.viewErrorMessage(errorMessage = "Grace period which already ended");
		}

		Navigator.openSpecificURL(url = "http://localhost:10080");

		Alert.viewErrorMessage(errorMessage = "exceeded the maximum number of cluster nodes");

		AssertTextEquals.assertPartialText(
			locator1 = "Message#ERROR_2",
			value1 = "This instance is not registered.");

		Clustering.shutdownSpecificServer(nodePort = "10080");

		Pause(locator1 = "60000");

		for (var nodeNumber : list "8,9") {
			User.firstLoginUI(
				password = "test",
				specificURL = "http://localhost:${nodeNumber}080",
				userEmailAddress = "test@liferay.com");

			AssertElementNotPresent(locator1 = "Message#ERROR");
		}
	}

}