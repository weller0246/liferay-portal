@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Security";
	property testray.testcase.product.edition = "EE";

	setUp {
		User.firstLoginUI();
	}

	@description = "LPS-133646 and LPS-133653 TC-1: Asserting that information is present in the logs after enabling log context & Incoming X-Request-ID."
	@priority = "5"
	test AssertAuditConsoleInformationIsPresentAfterEnabledLog {
		property test.name.skip.portal.instance = "Audit#AssertAuditConsoleInformationIsPresentAfterEnabledLog";

		var companyId = JSONCompany.getCompanyId();
		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Audit",
			configurationName = "Audit Log Context",
			configurationScope = "System Scope");

		Click(locator1 = "Audit#AUDIT_LOG_CONTEXT_ENABLED_BUTTON");

		Click(locator1 = "Audit#AUDIT_LOG_CONTEXT_USE_X-REQUEST-ID");

		PortletEntry.save();

		Navigator.openURL(baseURL = "http://localhost:8080/api/jsonws/user/get-user-by-email-address/company-id/email-address");

		AssertConsoleTextPresent(
			value1 = "xRequestId",
			value2 = "sessionId",
			value3 = "companyId:${companyId}",
			value4 = "virtualHostName",
			value5 = "clientIP",
			value6 = "emailAddress",
			value7 = "serverName",
			value8 = "userId:${userId}");
	}

}