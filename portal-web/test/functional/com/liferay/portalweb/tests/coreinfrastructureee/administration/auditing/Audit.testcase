@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property test.run.environment = "EE";
	property testray.main.component.name = "Security";
	property testray.testcase.product.edition = "EE";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	@description = "LPS-133646 and LPS-133653 TC-1: Verify that information is present in the logs after enabling log context & Incoming X-Request-ID."
	@priority = "5"
	test AssertAuditConsoleInformationIsPresentAfterEnabledLog {
		property test.name.skip.portal.instance = "Audit#AssertAuditConsoleInformationIsPresentAfterEnabledLog";

		var companyId = JSONCompany.getCompanyId();

		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = "test@liferay.com");

		task ("Enable log context and Incoming X-Request-ID") {
			SystemSettings.openSystemSettingsAdmin();

			SystemSettings.gotoConfiguration(
				configurationCategory = "Audit",
				configurationName = "Audit Log Context",
				configurationScope = "System Scope");

			Click(locator1 = "Audit#AUDIT_LOG_CONTEXT_ENABLED_BUTTON");

			Click(locator1 = "Audit#AUDIT_LOG_CONTEXT_USE_X-REQUEST-ID");

			PortletEntry.save();
		}

		task ("Assert that audit information is present in the logs") {
			Navigator.openURL(baseURL = "http://localhost:8080/api/jsonws/user/get-user-by-email-address/company-id/email-address");

			var curl = '''http://localhost:8080/api/jsonws/user/get-user-by-email-address/company-id/email-address''';
			var userId = JSONCurlUtil.get("${curl}");

			AssertConsoleTextPresent(
				value1 = "xRequestId",
				value2 = "sessionId",
				value3 = "companyId:${companyId}",
				value4 = "virtualHostName",
				value5 = "clientIP",
				value6 = "emailAddress",
				value7 = "serverName",
				value8 = "userId:${userId}");
		}
	}

	@description = "LPS-133646 and LPS-133653 TC-2: Verify that Console outputs a different X-Request-ID if an invalid X-Request-ID was inputted."
	@priority = "5"
	test AssertInvalidXRequestId {
		property test.name.skip.portal.instance = "Audit#AssertInvalidXRequestId";
		property osgi.module.configuration.file.names = "com.liferay.portal.security.audit.wiring.internal.configuration.AuditLogContextConfiguration.config";
		property osgi.module.configurations = "enabled=&quot;true&quot;${line.separator}useIncomingXRequestId=&quot;true&quot;";

		var companyId = JSONCompany.getCompanyId();

		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = "test@liferay.com");

		task ("Assert that console outputs a different X-Request-ID than invalid inputted X-Request-ID") {
			Navigator.openURL(baseURL = "http://localhost:8080/api/jsonws/user/get-user-by-email-address/company-id/email-address");

			var invalidXRequestId = "invalidXRID";

			var curl = '''http://localhost:8080/api/jsonws/user/get-user-by-email-address/company-id/email-address -H 'X-Request-Id:${invalidXRequestId}' ''';
			var userId = JSONCurlUtil.get("${curl}");

			AssertConsoleTextNotPresent(value1 = "${invalidXRequestId}");

			AssertConsoleTextPresent(value1 = "xRequestId");
		}
	}

	@description = "LPS-133646 and LPS-133653 TC-3: Verify that Console outputs the same X-Request-ID as inputted X-Request-ID."
	@priority = "5"
	test AssertValidXRequestId {
		property test.name.skip.portal.instance = "Audit#AssertValidXRequestId";
		property osgi.module.configuration.file.names = "com.liferay.portal.security.audit.wiring.internal.configuration.AuditLogContextConfiguration.config";
		property osgi.module.configurations = "enabled=&quot;true&quot;${line.separator}useIncomingXRequestId=&quot;true&quot;";

		var companyId = JSONCompany.getCompanyId();

		var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = "test@liferay.com");

		task ("Assert that console outputs the same X-Request-ID as inputted X-Request-ID") {
			Navigator.openURL(baseURL = "http://localhost:8080/api/jsonws/user/get-user-by-email-address/company-id/email-address");

			var validXRequestId = StringUtil.randomString("40");

			var curl = '''http://localhost:8080/api/jsonws/user/get-user-by-email-address/company-id/email-address -H 'X-Request-Id:${validXRequestId}' ''';
			var userId = JSONCurlUtil.get("${curl}");

			AssertConsoleTextPresent(value1 = "${validXRequestId}");
		}
	}

}