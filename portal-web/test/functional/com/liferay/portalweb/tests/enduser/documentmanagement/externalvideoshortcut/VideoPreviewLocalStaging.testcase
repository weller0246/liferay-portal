@component-name = "portal-document-management"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		DMNavigator.openToConfigInSystemSettings(portlet = "FFMPEG Video Converter");

		FormFields.enableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		Clustering.shutdownSpecificServer(nodePort = "8080");

		Clustering.startSpecificServer(
			deleteLiferayHome = "true",
			keepCachedAppServerData = "true",
			nodePort = "8080");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page");

		JSONDepot.addDepot(
			depotDescription = "This is the description of a depot",
			depotName = "Test Depot Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONDepot.deleteDepot(depotName = "Test Depot Name");

			JSONGroup.deleteGroupByName(groupName = "Site Name");

			User.logoutPG();
		}
	}

	@description = "This test ensures that a kb article can be published successfully after deleting the embedded video."
	@priority = "5"
	@refactorneeded
	@uitest
	test PublishKBAfterDeletingEmbeddedVideo {
		property test.name.skip.portal.instance = "DLVideoLocalStaging#PublishKBAfterDeletingEmbeddedVideo";

		JSONDepot.connectSite(
			depotName = "Test Depot Name",
			groupName = "Site Name");

		JSONStaging.enableLocalStaging(
			groupName = "Test Depot Name",
			site = "false");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "Publishing",
			portlet = "Staging");

		Staging.activateStagingCP(siteName = "Site Name");

		DepotNavigator.openDepotDocumentsAndMediaAdminStaging(depotName = "Test Depot Name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.mp4",
			dmDocumentTitle = "DM Video Title In Depot");

		DepotNavigator.switchStagingStatus(stagingItem = "Publish to Live");

		Staging.publishToLive();

		KBAdmin.openKBAdmin(siteURLKey = "site-name-staging");

		KBArticle.addCP(
			depotName = "Test Depot Name",
			embedVideo = "true",
			kbArticleContent = "Knowledge Base Video Content",
			kbArticleTitle = "Knowledge Base Article Title",
			navTab = "Documents and Media",
			videoName = "Document_1.mp4",
			videoShortcutTitle = "DM Video Title In Depot",
			viewInternalVideoPreview = "true");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		KBAdmin.openKBAdmin(siteURLKey = "site-name");

		KBArticle.viewCP(
			embedVideo = "true",
			internalVideo = "true",
			kbArticleContent = "Knowledge Base Video Content",
			kbArticleTitle = "Knowledge Base Article Title",
			videoName = "Document_1.mp4");

		KBAdmin.openKBAdmin(siteURLKey = "site-name-staging");

		KBArticle.editCP(
			kbArticleContentEdit = "Knowledge Base Article Content Edit",
			kbArticleTitle = "Knowledge Base Article Title",
			kbArticleTitleEdit = "Knowledge Base Article Title Edit");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		KBAdmin.openKBAdmin(siteURLKey = "site-name");

		AssertClick(
			key_kbArticleTitle = "Knowledge Base Article Title Edit",
			locator1 = "KnowledgeBase#DESCRIPTIVE_VIEW_ARTICLE_TITLE",
			value1 = "Knowledge Base Article Title Edit");

		AssertElementNotPresent(locator1 = "IFrame#EMBEDDED_VIDEO_IFRAME");

		AssertElementNotPresent(
			key_videoName = "Document_1.mp4",
			locator1 = "DocumentsAndMediaDocument#VIDEO_PREVIEW");
	}

	@description = "This test ensures that a web content can be published successfully after editing the embedded video."
	@priority = "5"
	@refactorneeded
	test PublishWCAfterEditingEmbeddedVideo {
		property test.name.skip.portal.instance = "DLVideoLocalStaging#PublishWCAfterEditingEmbeddedVideo";

		for (var entryCount : list "1,2") {
			JSONDocument.addFileWithUploadedFile(
				dmDocumentDescription = "DM Document Description",
				dmDocumentTitle = "DM Video Title${entryCount}",
				groupName = "Site Name",
				mimeType = "video/mp4",
				sourceFileName = "Document_${entryCount}.mp4");
		}

		JSONStaging.enableLocalStaging(groupName = "Site Name");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name-staging");

		WebContentNavigator.gotoAddCP();

		WebContent.addCP(
			embedVideo = "true",
			navTab = "Documents and Media",
			videoShortcutTitle = "DM Video Title1",
			webContentContent = "WC WebContent Content",
			webContentTitle = "WC WebContent Title");

		SelectFrame.selectFrameNoLoading(locator1 = "CKEditor#BODY_FIELD_IFRAME_2");

		Pause(locator1 = "5000");

		DMDocument.viewInternalVideoPreview(videoName = "Document_1.mp4");

		PortletEntry.publish();

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoPreviewEntryCP(
			liveSite = "true",
			webContentTitle = "WC WebContent Title");

		Pause(locator1 = "5000");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		DMDocument.viewInternalVideoPreview(videoName = "Document_1.mp4");

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name-staging");

		WebContentNavigator.gotoEditCP(webContentTitle = "WC WebContent Title");

		WebContent.editCP(
			embedVideo = "true",
			navTab = "Documents and Media",
			videoShortcutTitle = "DM Video Title2",
			webContentTitle = "WC WebContent Title",
			webContentTitleEdit = "WC WebContent Title Edit");

		Navigator.gotoStagedSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive();

		WebContentNavigator.openWebContentAdmin(siteURLKey = "site-name");

		WebContentNavigator.gotoPreviewEntryCP(
			liveSite = "true",
			webContentTitle = "WC WebContent Title");

		Pause(locator1 = "5000");

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		DMDocument.viewInternalVideoPreview(videoName = "Document_2.mp4");
	}

}