@component-name = "portal-categories"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Content Dashboard";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "LPS-131793 Given select modal window in the the categorization section in Documents and Media
	When the user has NOT permissions to add new categories to Global vocabularies
	Then the user is NOT able to add new categories from the select modal window"

	@priority = "4"
	test AddCategoryFromDMWithoutPermission {
		task ("Create new user") {
			JSONUser.addUser(
				userEmailAddress = "userea@liferay.com",
				userFirstName = "userfn",
				userLastName = "userln",
				userScreenName = "usersn");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Create role, its permissions and assign to user") {
			JSONRole.addRegularRole(
				roleKey = "DocumentCreatorRole",
				roleTitle = "DocumentCreatorRole");

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "ADD_DOCUMENT",
				resourceName = "com.liferay.document.library",
				roleTitle = "DocumentCreatorRole");

			Permissions.definePermissionViaJSONAPI(
				resourceAction = "ACCESS_IN_CONTROL_PANEL",
				resourceName = "com_liferay_document_library_web_portlet_DLAdminPortlet",
				roleTitle = "DocumentCreatorRole");

			JSONRole.assignRoleToUser(
				roleTitle = "DocumentCreatorRole",
				userEmailAddress = "userea@liferay.com");
		}

		task ("Login in new user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea@liferay.com",
				userLoginFullName = "userfn userln");
		}

		task ("Go to add Basic Document page in Global") {
			DMNavigator.openToAddEntry(
				groupName = "Global",
				siteURLKey = "global");
		}

		task ("Assert if not possible to ADD cateory") {
			AssetCategorization.viewNoAddPermissions(vocabularyName = "Topic");
		}
	}

	@description = "LPS-131793 Given select modal window in the the categorization section in Documents and Media
	When the user has permissions to add new categories to Global vocabularies
	Then the user is able to add new categories from the select modal window"
	@priority = "4"
	test AddCategoryFromDMWithPermission {
		task ("Go to add Basic Document page in Global") {
			DMNavigator.openToAddEntry(
				groupName = "Global",
				siteURLKey = "global");
		}

		task ("Add category via DM page") {
			AssetCategorization.addCategoryViaSelect(
				categoryName = "New Category",
				vocabularyName = "Topic");
		}
	}

	@description = "When the user clicks on Save and Add a new one, the category is saved"
	@priority = "5"
	@uitest
	test AddCategoryViaSaveAndAddButton {
		property portal.acceptance = "true";

		task ("Add a global category via Save And Add button") {
			Category.openCategoriesAdmin(siteURLKey = "global");

			Category.addCategoryWithSaveAndAddButton(
				categoryName = "Category Name",
				vocabularyName = "Topic");
		}

		task ("View the global category is created successfully") {
			Category.viewCP(
				categoryName = "Category Name",
				vocabularyName = "Topic");
		}

		task ("Delete the global category") {
			JSONCategory.deleteCategory(
				categoryName = "Category Name",
				groupName = "Global",
				vocabularyName = "Topic");
		}
	}

	@description = "When the site administrator (not Global) accesses to the Categories administration application, the existing Global vocabularies appear as locked and it's not possible to edit them"
	@priority = "5"
	@uitest
	test CannotEditGlobalCategoryInNormalSite {
		property portal.acceptance = "true";

		task ("Add a global category") {
			JSONCategory.addCategory(
				groupName = "Global",
				title = "Category Name",
				vocabularyName = "Topic");
		}

		task ("Cannot edit the global category in normal site") {
			Category.openCategoriesAdmin(siteURLKey = "test-site-name");

			Category.viewCP(
				categoryName = "Category Name",
				vocabularyName = "Topic");

			AssertElementNotPresent(locator1 = "Categories#ADD_CATEGORY_BUTTON");

			AssertVisible(
				key_vocabularyName = "Topic",
				locator1 = "Categories#LOCKED_VOCABULARY");
		}

		task ("Delete the global category") {
			JSONCategory.deleteCategory(
				categoryName = "Category Name",
				groupName = "Global",
				vocabularyName = "Topic");
		}
	}

	@description = "When Edit the Audience or Stage, default values are For internal use only ON , Allow user to select multiple categories ON, will be associated with web content, won't be required"
	@priority = "5"
	test CheckAudienceStageDefaultSettings {
		task ("Go to Global Vocabularies") {
			Category.openCategoriesAdmin(siteURLKey = "global");
		}

		task ("Assert if Vocabulary is for internal use only") {
			AssertElementPresent(
				key_vocabularyName = "Audience",
				locator1 = "Categories#VOCABULARY_ICON_INTERNAL_USE");

			AssertElementPresent(
				key_vocabularyName = "Stage",
				locator1 = "Categories#VOCABULARY_ICON_INTERNAL_USE");
		}

		task ("Assert if Vocabulary allow multiple categories") {
			Vocabulary.viewVocabularyAllowMultipleCAtegories(
				label = "Allow Multiple Categories",
				vocabularyName = "Audience");

			Vocabulary.viewVocabularyAllowMultipleCAtegories(
				label = "Allow Multiple Categories",
				vocabularyName = "Stage");
		}

		task ("Assert if Asset Type is not requried") {
			Vocabulary.viewVocabularyAssociatedAssetTypesRequirement(
				label = "Required",
				vocabularyName = "Audience");

			Vocabulary.viewVocabularyAssociatedAssetTypesRequirement(
				label = "Required",
				vocabularyName = "Stage");
		}
	}

	@description = "LPS-131793 Given the vocabulary's configuration page
	When the Basic Document asset type for Documents and Media is selected
	Then the Categorization section in Documents and Media will include OOTB Internal (Topic) and Public (Audience & Stage) vocabularies, but the other asset types (External Video Shortcut & Google Drive Shortcut) will not"
	@priority = "4"
	test CheckDMVocabularyAssetSubtypeBasicDocument {
		property osgi.app.includes = "document-library-google-docs";

		task ("Create a vocabulary with Associated Asset Type of Document > Basic Document") {
			Category.openCategoriesAdmin(siteURLKey = "test-site-name");

			Vocabulary.addWithAssociatedAssetTypeCP(
				assetSubtype = "Basic Document",
				assetType = "Document",
				vocabularyName = "Basic Document Vocabulary");
		}

		task ("Check avaliable vocabularies to Basic Document") {
			DMNavigator.openToAddEntry(
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			for (var vocabulary : list "Basic Document Vocabulary,Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}

		task ("Check avaliable vocabularies to External Video Shortcut") {
			DMNavigator.openToAddEntry(
				documentTypeName = "External Video Shortcut",
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			AssertElementNotPresent(
				key_vocabularyName = "Basic Document Vocabulary",
				locator1 = "AssetCategorization#CATEGORIES_FIELD");

			for (var vocabulary : list "Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}

		task ("Check avaliable vocabularies to Google Drive Shortcut") {
			DMNavigator.openToAddEntry(
				documentTypeName = "Google Drive Shortcut",
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			AssertElementNotPresent(
				key_vocabularyName = "Basic Document Vocabulary",
				locator1 = "AssetCategorization#CATEGORIES_FIELD");

			for (var vocabulary : list "Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}
	}

	@description = "LPS-131793 Given the vocabulary's configuration page
	When External Video Shortcut asset type for Documents and Media is selected
	Then the Categorization section in Documents and Media will include OOTB Internal (Topic) and Public (Audience & Stage) vocabularies, but the other asset types (Basic Document & Google Drive Shortcut) will not"
	@priority = "4"
	test CheckDMVocabularyAssetSubtypeExternalVideoShortcut {
		property osgi.app.includes = "document-library-google-docs";

		task ("Create a vocabulary with Associated Asset Type of Document > External Video Shortcut") {
			Category.openCategoriesAdmin(siteURLKey = "test-site-name");

			Vocabulary.addWithAssociatedAssetTypeCP(
				assetSubtype = "External Video Shortcut",
				assetType = "Document",
				vocabularyName = "External Video Shortcut Vocabulary");
		}

		task ("Check avaliable vocabularies to External Video Shortcut") {
			DMNavigator.openToAddEntry(
				documentTypeName = "External Video Shortcut",
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			for (var vocabulary : list "External Video Shortcut Vocabulary,Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}

		task ("Check avaliable vocabularies to Basic Documents") {
			DMNavigator.openToAddEntry(
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			AssertElementNotPresent(
				key_vocabularyName = "External Video Shortcut Vocabulary",
				locator1 = "AssetCategorization#CATEGORIES_FIELD");

			for (var vocabulary : list "Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}

		task ("Check avaliable vocabularies to Google Drive Shortcut") {
			DMNavigator.openToAddEntry(
				documentTypeName = "Google Drive Shortcut",
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			AssertElementNotPresent(
				key_vocabularyName = "External Video Shortcut Vocabulary",
				locator1 = "AssetCategorization#CATEGORIES_FIELD");

			for (var vocabulary : list "Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}
	}

	@description = "LPS-131793 Given the vocabulary's configuration page
	When the Google Drive Shortcut asset type for Documents and Media is selected
	Then the Categorization section in Documents and Media will include OOTB Internal (Topic) and Public (Audience & Stage) vocabularies, but the other asset types (Basic Document & External Video Shortcut) will not"
	@priority = "4"
	test CheckDMVocabularyAssetSubtypeGoogleDriveShortcut {
		property osgi.app.includes = "document-library-google-docs";

		task ("Create a vocabulary with Associated Asset Type of Document > Google Drive Shortcut") {
			Category.openCategoriesAdmin(siteURLKey = "test-site-name");

			Vocabulary.addWithAssociatedAssetTypeCP(
				assetSubtype = "Google Drive Shortcut",
				assetType = "Document",
				vocabularyName = "Google Drive Shortcut Vocabulary");
		}

		task ("Check avaliable vocabularies to Google Drive Shortcut") {
			DMNavigator.openToAddEntry(
				documentTypeName = "Google Drive Shortcut",
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			for (var vocabulary : list "Google Drive Shortcut Vocabulary,Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}

		task ("Check avaliable vocabularies to Basic Documents") {
			DMNavigator.openToAddEntry(
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			AssertElementNotPresent(
				key_vocabularyName = "Google Drive Shortcut Vocabulary",
				locator1 = "AssetCategorization#CATEGORIES_FIELD");

			for (var vocabulary : list "Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}

		task ("Check avaliable vocabularies to External Video Shortcut") {
			DMNavigator.openToAddEntry(
				documentTypeName = "External Video Shortcut",
				groupName = "Test Site Name",
				siteURLKey = "test-site-name");

			Panel.expandPanel(panel = "Categorization");

			AssertElementNotPresent(
				key_vocabularyName = "Google Drive Shortcut Vocabulary",
				locator1 = "AssetCategorization#CATEGORIES_FIELD");

			for (var vocabulary : list "Topic,Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabulary}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}
	}

	@description = "LPS-134875 Internal categories are not shown in facets and result in a public context."
	@priority = "5"
	test CheckInternalCategoriesInFacets {
		property portal.acceptance = "true";

		task ("Create internal categories") {
			var categoryId = JSONCategory.addCategory(
				groupName = "Global",
				title = "Internal Category",
				vocabularyName = "Audience");
		}

		task ("Add WC with internal category") {
			JSONWebcontent.addWebContent(
				assetCategoryIds = "${categoryId}",
				content = "Web Content Content",
				groupName = "Guest",
				title = "Web Content Title");
		}

		task ("Search for Web Content and Assert") {
			Navigator.openURL();

			SearchPortlets.searchEmbedded(searchTerm = "Internal Category");

			SearchResultPortlet.viewNoSearchResults(searchTerm = "Internal Category");
		}
	}

	@description = "LPS-134682 If categories are marked as internal, won't show in Categories Navigation widget."
	@priority = "3"
	test CheckInternalCategoriesWidgetAssetsCategorization {
		task ("Add a global category to each Topic (public) and Audience (private)") {
			JSONCategory.addCategory(
				groupName = "Global",
				title = "Topic Category",
				vocabularyName = "Topic");

			JSONCategory.addCategory(
				groupName = "Global",
				title = "Audience Category",
				vocabularyName = "Audience");
		}

		task ("Add a Categories Navigation to page") {
			JSONLayout.addPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Asset Publisher Page");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Asset Publisher Page",
				widgetName = "Categories Navigation");
		}

		task ("Check if only Topic Categories are shown") {
			Navigator.gotoSitePage(
				pageName = "Asset Publisher Page",
				siteName = "Test Site Name");

			CategoriesNavigationPortlet.selectCategoryPG(categoryName = "Topic Category");

			AssertElementNotPresent(
				key_nodeName = "Audience Category",
				locator1 = "Treeview#NODE_UNSELECTED",
				value1 = "Audience Category");
		}
	}

	@description = "LPS-134466 When removes the default link within Instance Settings/Asserts/Categorization, the message 'Learn how' won't show in Content Dashboard"
	@priority = "3"
	test CheckLearnHowLinkNotDisplayedContentDashboard {
		task ("Remove default link to Documentation") {
			Category.removeLinkToDocumentationURL();
		}

		task ("Assert if Learn How is not displayed") {
			ApplicationsMenu.gotoPortlet(
				category = "Content",
				panel = "Applications",
				portlet = "Content Dashboard");

			AssertElementNotPresent(locator1 = "Categories#VOCABULARY_LINK_DOCUMENTATION");
		}
	}

	@description = "LPS-134466 When removes the default link within Instance Settings/Asserts/Categorization, the message 'Learn how' won't show in Vocabularies Management"
	@priority = "3"
	test CheckLearnHowLinkNotDisplayedVocabularies {
		task ("Remove default link to Documentation") {
			Category.removeLinkToDocumentationURL();
		}

		task ("Assert if Learn How is not displayed") {
			Category.openCategoriesAdmin(siteURLKey = "global");

			AssertElementNotPresent(locator1 = "Categories#VOCABULARY_LINK_DOCUMENTATION");
		}
	}

	@description = "LPS-134466 When removes the default link within Instance Settings/Asserts/Categorization, the message 'Learn how' won't show in web content editor"
	@priority = "3"
	test CheckLearnHowLinkNotDisplayedWCEditor {
		task ("Remove default link to Documentation") {
			Category.removeLinkToDocumentationURL();
		}

		task ("Assert if Learn How is not displayed") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddCP();

			AssertElementNotPresent(locator1 = "Categories#VOCABULARY_LINK_DOCUMENTATION");
		}
	}

	@description = "LPS-134875 Public categories are shown in facets and result in a public context."
	@priority = "4"
	test CheckPublicCategoriesInFacets {
		property portal.acceptance = "true";

		task ("Create public categories") {
			var categoryId = JSONCategory.addCategory(
				groupName = "Global",
				title = "Public Category",
				vocabularyName = "Topic");
		}

		task ("Add WC with public category") {
			JSONWebcontent.addWebContent(
				assetCategoryIds = "${categoryId}",
				content = "Web Content Content With Category",
				groupName = "Guest",
				title = "Web Content Title");
		}

		task ("Search for Web Content and Assert") {
			Navigator.openURL();

			SearchPortlets.searchEmbedded(searchTerm = "Internal Category");

			SearchResultPortlet.viewSearchResults(
				searchAssetTitle = "Web Content Title",
				searchAssetType = "Web Content Article");
		}
	}

	@description = "LPS-134875 Visibility is not editable for vocabularies"
	@priority = "4"
	test CheckVocabularyVisibilityNotEditable {
		task ("Add a vocabulary disallow multiple categories") {
			Category.openCategoriesAdmin(siteURLKey = "test-site-name");

			Vocabulary.addCP(vocabularyName = "Vocabulary Name");
		}

		task ("Assert if vocabulary visibility can not be changed") {
			Vocabulary.assertVocabularyVisibilityNonEditable(
				visibilityType = "Public",
				vocabularyName = "Vocabulary Name");
		}
	}

	@description = "LPS-134875 Categories can only be moved to vocabularies with the same visibility"
	@priority = "4"
	test MoveCategoryBetweenDifferentVisibility {
		task ("Create categories in public and internal vocabularies") {
			JSONCategory.addCategory(
				groupName = "Global",
				title = "Public Category",
				vocabularyName = "Topic");

			JSONCategory.addCategory(
				groupName = "Global",
				title = "Internal Category",
				vocabularyName = "Audience");
		}

		task ("Try to move category between vocabularies with differente visibility") {
			Category.openCategoriesAdmin(siteURLKey = "global");

			Category.assertMoveDifferentVisibilityVocabulary(
				categoryName = "Public Category",
				vocabularyName = "Topic",
				vocabularyName2 = "Audience");

			Category.assertMoveDifferentVisibilityVocabulary(
				categoryName = "Internal Category",
				vocabularyName = "Audience",
				vocabularyName2 = "Topic");
		}
	}

	@description = "When the user clicks on the link to documentation, the documentation link is opened"
	@priority = "3"
	test OpenLiferayLearnCategoriesVocabulariesPage {
		task ("Click on the Documentation link") {
			Category.openCategoriesAdmin(siteURLKey = "global");

			Click(locator1 = "Categories#VOCABULARY_LINK_DOCUMENTATION");
		}

		task ("Assert user is taken to the the Liferay Learn page") {
			SelectWindow.selectPopUp(locator1 = "null");

			AssertLocation(value1 = "https://learn.liferay.com/dxp/latest/en/content-authoring-and-management/tags-and-categories/defining-categories-and-vocabularies-for-content.html");
		}
	}

	@description = "LPS-134466 When 'Categorization' in web content editor, vocabularies management application or content dashboard when empty graph, the message Learn how with a link to the documentation"
	@priority = "3"
	test OpenLiferayLearnCategoriesVocabulariesPageFromContentDashboard {
		task ("Go to content dashboard") {
			ApplicationsMenu.gotoPortlet(
				category = "Content",
				panel = "Applications",
				portlet = "Content Dashboard");
		}

		task ("Click on Learn How and Assert if user is taken to the the Liferay Learn page") {
			Category.assertLearnHowLink();
		}
	}

	@description = "LPS-134466 When 'Categorization' in web content editor, vocabularies management application or content dashboard when empty graph, the message Learn how with a link to the documentation"
	@priority = "3"
	test OpenLiferayLearnCategoriesVocabulariesPageFromWCEditor {
		task ("Go to web content editor") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddCP();

			Panel.expandPanel(panel = "Categorization");
		}

		task ("Click on Learn How and Assert if user is taken to the the Liferay Learn page") {
			Category.assertLearnHowLink();
		}
	}

	@description = "When a change in Global Vocabularies is made, the Global vocabularies section in a site's Categories administration application updates accordingly"
	@priority = "5"
	test PropagateChangesOfGlobalCategoryToNormalSite {
		property portal.acceptance = "true";

		task ("Add a global category") {
			JSONCategory.addCategory(
				groupName = "Global",
				title = "Category Name",
				vocabularyName = "Topic");
		}

		task ("View the global category in normal site") {
			Category.openCategoriesAdmin(siteURLKey = "test-site-name");

			Category.viewCP(
				categoryName = "Category Name",
				vocabularyName = "Topic");
		}

		task ("Edit the global category") {
			JSONCategory.updateCategoryName(
				categoryName = "Category Name",
				groupName = "Global",
				title = "Category Name Edit",
				vocabularyName = "Topic");
		}

		task ("View the edited global category in normal site") {
			Category.openCategoriesAdmin(siteURLKey = "test-site-name");

			Category.viewCP(
				categoryName = "Category Name Edit",
				vocabularyName = "Topic");
		}

		task ("Delete the global category") {
			JSONCategory.deleteCategory(
				categoryName = "Category Name Edit",
				groupName = "Global",
				vocabularyName = "Topic");
		}
	}

	@description = "LPS-134466 When Instance Settings > Assets > Categorization, with a Link to Documentation URL"
	@priority = "4"
	test VerifyLinkToDocumentationAtInstanceSystem {
		task ("Go to Instance Settings > Assets > Categorization") {
			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings");

			SystemSettings.gotoConfiguration(
				configurationCategory = "Assets",
				configurationName = "Categorization",
				configurationScope = "Virtual Instance Scope");
		}

		task ("Assert URL to Documentation") {
			AssertTextEquals(
				key_text = "linkToDocumentation",
				locator1 = "TextArea#ANY",
				value1 = "https://learn.liferay.com/dxp/7.x/en/content-authoring-and-management/tags-and-categories/defining-categories-and-vocabularies-for-content.html");
		}
	}

	@description = "When the user opens the "Categorization" section and there's a vocabulary marked as internal, that vocabulary is shown in the Internal categories section"
	@priority = "5"
	test ViewInternalVocabularyInWebContentEditor {
		property portal.acceptance = "true";

		task ("Add a web content based on Basic Web Content") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddCP();
		}

		task ("View internal vocabularies in sidebar panel") {
			Panel.expandPanel(panel = "Categorization");

			AssertVisible(
				key_text = "Internal Categories",
				locator1 = "Sidebar#SUBTITLE");

			for (var vocabularyName : list "Audience,Stage") {
				AssertVisible(
					key_vocabularyName = "${vocabularyName}",
					locator1 = "AssetCategorization#CATEGORIES_FIELD");
			}
		}
	}

	@description = "When the user opens the "Categorization" section and there's a vocabulary not marked as internal, that vocabulary is shown in the Public categories section"
	@priority = "5"
	test ViewPublicVocabularyInWebContentEditor {
		property portal.acceptance = "true";

		task ("Add a web content based on Basic Web Content") {
			WebContentNavigator.openWebContentAdmin(siteURLKey = "test-site-name");

			WebContentNavigator.gotoAddCP();
		}

		task ("View internal vocabularies in sidebar panel") {
			Panel.expandPanel(panel = "Categorization");

			AssertVisible(
				key_text = "Public Categories",
				locator1 = "Sidebar#SUBTITLE");

			AssertVisible(
				key_vocabularyName = "Topic",
				locator1 = "AssetCategorization#CATEGORIES_FIELD");
		}
	}

}