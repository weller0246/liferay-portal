@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Blogs";

	var pageName = "Blogs Page";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Blogs Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Guest",
			layoutName = "Blogs Page",
			widgetName = "Blogs");

		Navigator.gotoPage(pageName = "Blogs Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "Test Test");

			BlogsEntry.tearDownCP();

			Blogs.tearDownConfigurationScopePG(pageName = "Blogs Page");

			Organization.tearDownCP();

			PortalInstances.tearDownCP();

			Page.tearDownCP();

			Site.tearDownCP();
		}
	}

	@description = "This test covers LPS-127212 and LPS-128781. This ensures that a blog title can be imported to a site when a duplicate title already exists."
	@priority = "4"
	@refactordone
	test CanImportBlogWhenDuplicateTitleExists {
		JSONGroup.addGroup(groupName = "Source Site Name");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			groupName = "Source Site Name");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "source-site-name");

		LAR.importPortlet(
			larFileName = "Blogs.portlet.lar",
			uploadFrom = "dependencies");

		BlogsNavigator.openBlogsAdmin(siteURLKey = "source-site-name");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		for (var i : list "1,2") {
			AssertTextEquals(
				key_rowNumber = "${i}",
				locator1 = "ContentRow#ENTRY_CONTENT_ROW_NUMBER_TD_2",
				value1 = "Blogs Entry Title");
		}
	}

	@description = "This checks that a blog entry with a comment can be imported with no data loss."
	@priority = "4"
	@refactordone
	test CanImportEntryWithComment {
		BlogsNavigator.openBlogsAdmin(siteURLKey = "guest");

		LAR.importPortlet(
			larFileName = "BlogWithComment.lar",
			uploadFrom = "dependencies");

		Navigator.gotoPage(pageName = "Blogs Page");

		BlogsNavigator.openToBlogEntry(
			entryTitle = "Blog Entry Title",
			layoutName = "Blogs Page",
			siteURLKey = "guest");

		BlogsEntry.viewPG(
			entryContent = "Blog Entry Content",
			entryTitle = "Blog Entry Title");

		Comments.viewPG(
			commentCount = "1",
			entryComment = "Blog Entry Comment",
			importedComment = "true",
			userFullName = "Test Test");
	}

}