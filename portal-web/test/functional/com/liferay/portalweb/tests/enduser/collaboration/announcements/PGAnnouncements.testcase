@component-name = "portal-collaboration"
definition {

	property custom.properties = "default.layout.template.id=1_column";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Announcements";

	var pageName = "Announcements Page";
	var portletName = "Announcements";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Announcements Page");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "Guest",
			layoutName = "Announcements Page",
			layoutTemplate = "1 Column");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "Announcements Page",
			widgetName = "Announcements");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONAnnouncement.deleteAnnouncement(
				groupName = "Guest",
				siteURLKey = "guest");

			JSONLayout.deletePublicLayout(
				groupName = "Guest",
				layoutName = "Announcements Page");
		}
	}

	@priority = "4"
	@refactordone
	test CanAddAnnouncementsEntry {
		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com");
	}

	@priority = "4"
	@refactordone
	@uitest
	test CanAddAnnouncementsEntryFutureDate {
		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.addEntryWithFutureDate(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");

		Pause(locator1 = "120000");

		Navigator.gotoPage(pageName = "Announcements Page");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com");
	}

	@priority = "4"
	@refactordone
	test CanAddAnnouncementsEntryPriorityImportant {
		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com",
			priority = "Important");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			priority = "Important");
	}

	@priority = "5"
	@refactordone
	test CanDeleteAnnouncementsEntry {
		property portal.acceptance = "true";

		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.deletePG(entryTitle = "Announcements Entry Title");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");
	}

	@priority = "5"
	@refactordone
	test CanEditAnnouncementsEntry {
		property portal.acceptance = "true";

		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.editPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryContentEdit = "Announcements Entry Content Edit",
			entryTitle = "Announcements Entry Title",
			entryTitleEdit = "Announcements Entry Title Edit",
			entryURLEdit = "http://www.alloyui.com");

		AnnouncementsEntry.viewPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content Edit",
			entryTitle = "Announcements Entry Title Edit");
	}

	@priority = "3"
	@refactordone
	@uitest
	test CannotAddAnnouncementsEntryPastExpirationDate {
		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.addPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			entryURL = "http://www.liferay.com",
			expirationDate = "12/31/2013",
			pastDate = "true");

		AnnouncementsNavigator.openToEntriesTab(
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");

		AnnouncementsNavigator.opentoAdmin(
			groupName = "Guest",
			siteURLKey = "guest");

		AnnouncementsEntry.viewNoAdmin();
	}

	@priority = "5"
	@refactordone
	test CanViewPreviousAnnouncementEntries {
		property portal.acceptance = "true";

		JSONAnnouncement.addAnnouncement(
			announcementContent = "Announcements Entry Content",
			announcementTitle = "Announcements Entry Title",
			announcementURL = "http://www.liferay.com");

		AnnouncementsEntry.markAsReadPG(
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title",
			layoutName = "announcements-page",
			siteURLKey = "guest",
			tabName = "unread");

		AnnouncementsEntry.viewReadPG(
			distributionScope = "General",
			entryContent = "Announcements Entry Content",
			entryTitle = "Announcements Entry Title");

		AssertClick(
			locator1 = "Announcements#NAVIGATION_ENTRIES_UNREAD",
			value1 = "Unread");

		AnnouncementsEntry.viewNoPG(entryTitle = "Announcements Entry Title");
	}

}