@component-name = "portal-breadcrumb"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Breadcrumb";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "Add a widget template via Breadcrumb widget."
	@priority = "4"
	test AddADTViaBreadcrumb {
		property testray.component.names = "Breadcrumb,Content and Appliation Templates";

		task ("Add a Breadcrumb widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Breadcrumb");
		}

		task ("Add a widget template for Breadcrumb widget") {
			ApplicationDisplayTemplates.openWidgetTemplatesAdmin(siteURLKey = "test-site-name");

			ApplicationDisplayTemplates.addCP(
				adtType = "Breadcrumb",
				fieldNameList = "Breadcrumb Entry");
		}

		task ("Select the widget template in Breadcrumb widget") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			ApplicationDisplayTemplates.selectPortletADT(
				portletName = "Breadcrumb",
				templateName = "Breadcrumb Test ADT");
		}

		task ("View the selected widget template in Breadcrumb widget") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Portlet.gotoPortletOptions(
				portletName = "Breadcrumb",
				portletOption = "Configuration");

			SelectFrame(locator1 = "IFrame#CONFIGURATION");

			AssertElementPresent(locator1 = "Select#DISPLAY_TEMPLATE");
		}
	}

	@description = "Configure Show Application in Breadcrumb widget."
	@priority = "4"
	@uitest
	test ConfigureShowApplication {
		task ("Set up the layout of page to 1 column") {
			JSONLayout.updateLayoutTemplateOfPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				layoutTemplate = "1 Column");
		}

		task ("Add a Message Boards and a Breadcrumb to page") {
			for (var portletName : list "Message Boards,Breadcrumb") {
				JSONLayout.addWidgetToPublicLayout(
					groupName = "Test Site Name",
					layoutName = "Test Page Name",
					widgetName = "${portletName}");
			}
		}

		task ("Add a message board category") {
			JSONMBMessage.addCategory(
				categoryName = "MB Category Name",
				groupName = "Test Site Name",
				userEmailAddress = "test@liferay.com");
		}

		task ("Add a message board subcategory") {
			var parentCategoryId = JSONMBMessage.getCategoryIdByName(
				categoryName = "MB Category Name",
				groupName = "Test Site Name");

			JSONMBMessage.addCategory(
				categoryDescription = "MB Subcategory Description",
				categoryName = "MB Subcategory Name",
				groupName = "Test Site Name",
				parentCategoryId = "${parentCategoryId}",
				userEmailAddress = "test@liferay.com");
		}

		task ("Add a message board grandchild subcategory") {
			var parentCategoryId = JSONMBMessage.getCategoryIdByName(
				categoryName = "MB Subcategory Name",
				groupName = "Test Site Name");

			JSONMBMessage.addCategory(
				categoryDescription = "MB Subcategory Subcategory Description",
				categoryName = "MB Subcategory Subcategory Name",
				groupName = "Test Site Name",
				parentCategoryId = "${parentCategoryId}",
				userEmailAddress = "test@liferay.com");
		}

		task ("View subcategory and grandchild subcategory in Message Boards widget") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

			MessageboardsCategory.viewPG(
				categoryDescription = "MB Subcategory Description",
				categoryName = "MB Subcategory Name",
				threadCount = "0");

			MessageboardsCategory.viewPG(
				categoryDescription = "MB Subcategory Subcategory Description",
				categoryName = "MB Subcategory Subcategory Name",
				threadCount = "0");
		}

		task ("View displayed content in Breadcrumb widget") {
			Breadcrumb.viewPG(breadcrumbListVisible = "Test Site Name,Test Page Name,MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name");
		}

		task ("Disable Show Application in Breadcrumb") {
			Portlet.gotoPortletOptions(
				portletName = "Breadcrumb",
				portletOption = "Configuration");

			Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Application Breadcrumb");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Site Name,Test Page Name");

			Breadcrumb.saveDisplayPreview();
		}

		task ("View the displayed content in Breadcrumb widget") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

			MessageboardsCategory.viewPG(
				categoryDescription = "MB Subcategory Description",
				categoryName = "MB Subcategory Name",
				threadCount = "0");

			MessageboardsCategory.viewPG(
				categoryDescription = "MB Subcategory Subcategory Description",
				categoryName = "MB Subcategory Subcategory Name",
				threadCount = "0");

			Breadcrumb.viewSpecificPG(
				breadcrumbListNotVisible = "MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name",
				breadcrumbListVisible = "Test Site Name,Test Page Name");
		}

		task ("Enable Show Application in Breadcrumb") {
			Portlet.gotoPortletOptions(
				portletName = "Breadcrumb",
				portletOption = "Configuration");

			Breadcrumb.configureBreadcrumb(checkSetupName = "Show Application Breadcrumb");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Site Name,Test Page Name");

			Breadcrumb.saveDisplayPreview();
		}

		task ("View the displayed content in Breadcrumb widget") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			MessageboardsCategory.gotoPG(categoryName = "MB Category Name");

			MessageboardsCategory.viewPG(
				categoryDescription = "MB Subcategory Description",
				categoryName = "MB Subcategory Name",
				threadCount = "0");

			MessageboardsCategory.viewPG(
				categoryDescription = "MB Subcategory Subcategory Description",
				categoryName = "MB Subcategory Subcategory Name",
				threadCount = "0");

			Breadcrumb.viewPG(breadcrumbListVisible = "Test Site Name,Test Page Name,MB Category Name,MB Subcategory Name,MB Subcategory Subcategory Name");
		}
	}

	@description = "Configure Show Current Site in Breadcrumb widget."
	@priority = "5"
	@uitest
	test ConfigureShowCurrentSite {
		property portal.acceptance = "true";

		task ("Add a Breadcrumb widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Breadcrumb");
		}

		task ("Disable Show Current Site in Breadcrumb widget") {
			Navigator.openSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Portlet.gotoPortletOptions(portletOption = "Configuration");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Site Name,Test Page Name");

			Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Current Site");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Page Name");

			Breadcrumb.saveDisplayPreview();

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Page Name");
		}

		task ("View displayed content in Breadcrumb widget") {
			Navigator.openSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Breadcrumb.viewPG(
				breadcrumbListNotVisible = "Test Site Name",
				breadcrumbListVisible = "Test Page Name");
		}

		task ("Enable Show Current Site in Breadcrumb widget") {
			Portlet.gotoPortletOptions(portletOption = "Configuration");

			Breadcrumb.configureBreadcrumb(checkSetupName = "Show Current Site");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Site Name,Test Page Name");

			Breadcrumb.saveDisplayPreview();
		}

		task ("View displayed content in Breadcrumb widget") {
			Navigator.openSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Breadcrumb.viewPG(breadcrumbListVisible = "Test Site Name,Test Page Name");
		}
	}

	@description = "Disable Show Page in Breadcrumb widget."
	@priority = "5"
	@uitest
	test DisableShowPage {
		property portal.acceptance = "true";

		task ("Add a Breadcrumb widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Breadcrumb");
		}

		task ("View displayed content in Breadcrumb") {
			Navigator.openSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Breadcrumb.viewPG(breadcrumbListVisible = "Test Site Name,Test Page Name");
		}

		task ("Disable Show Page") {
			Portlet.gotoPortletOptions(portletOption = "Configuration");

			Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Page");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Site Name");

			Breadcrumb.saveDisplayPreview();

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Site Name");
		}

		task ("View displayed content in Breadcrumb") {
			Navigator.openSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Breadcrumb.viewPG(
				breadcrumbListNotVisible = "Test Page Name",
				breadcrumbListVisible = "Test Site Name");
		}
	}

	@description = "Disable Show Parent Site in Breadcrumb widget."
	@priority = "4"
	@uitest
	test DisableShowParentSite {
		task ("Add a child site") {
			JSONGroup.addChildSite(
				groupName = "Child SiteName",
				parentGroupName = "Test Site Name");
		}

		task ("Add a parent widget page in child site") {
			JSONLayout.addPublicLayout(
				groupName = "Child SiteName",
				layoutName = "Parent Page Name",
				parentGroupName = "Test Site Name");
		}

		task ("Add a child widget page") {
			JSONLayout.addPublicLayout(
				groupName = "Child SiteName",
				layoutName = "Child Page Name",
				parentGroupName = "Test Site Name",
				parentLayoutName = "Parent Page Name");
		}

		task ("Add a Breadcrumb widget to child page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Child SiteName",
				layoutName = "Child Page Name",
				parentGroupName = "Test Site Name",
				widgetName = "Breadcrumb");
		}

		task ("Disable Show Parent Site") {
			Navigator.openSitePage(
				pageName = "Child Page Name",
				siteName = "Child SiteName");

			Portlet.gotoPortletOptions(portletOption = "Configuration");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Site Name,Child SiteName,Parent Page Name,Child Page Name");

			Breadcrumb.configureBreadcrumb(uncheckSetupName = "Show Parent Site");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Child SiteName,Parent Page Name,Child Page Name");

			Breadcrumb.saveDisplayPreview();

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Child SiteName,Parent Page Name,Child Page Name");
		}

		task ("View displayed content in Breadcrumb widget") {
			Navigator.openSitePage(
				pageName = "Child Page Name",
				siteName = "Child SiteName");

			Breadcrumb.viewPG(
				breadcrumbListNotVisible = "Test Site Name",
				breadcrumbListVisible = "Child SiteName,Parent Page Name,Child Page Name");
		}
	}

	@description = "Enable Show Guest Site in Breadcrumb widget."
	@priority = "4"
	@uitest
	test EnableShowGuestSite {
		task ("Add a Breadcrumb widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Breadcrumb");
		}

		task ("Enable Show Guest Site") {
			Navigator.openSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Portlet.gotoPortletOptions(portletOption = "Configuration");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "Test Site Name,Test Page Name");

			var siteName = TestCase.getSiteName(siteName = "${siteName}");

			Breadcrumb.viewConfigurationPreview(breadcrumbListNotVisible = "${siteName}");

			Breadcrumb.configureBreadcrumb(checkSetupName = "Show Guest Site");

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "${siteName},Test Site Name,Test Page Name");

			Breadcrumb.saveDisplayPreview();

			Breadcrumb.viewConfigurationPreview(breadcrumbListVisible = "${siteName},Test Site Name,Test Page Name");
		}

		task ("View the displayed content in Breadcrumb widget") {
			Navigator.openSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Breadcrumb.viewPG(breadcrumbListVisible = "${siteName},Test Site Name,Test Page Name");
		}
	}

	@description = "View Breadcrumb when navigate to page via IP address."
	@priority = "4"
	test ViewBreadcrumbWhenNavigateToPageViaIPAddress {
		property test.name.skip.portal.instance = "Breadcrumb#ViewBreadcrumbWhenNavigateToPageViaIPAddress";

		var portalURL = PropsUtil.get("portal.url");

		task ("Add a Breadcrumb widget to page") {
			JSONLayout.addWidgetToPublicLayout(
				groupName = "Test Site Name",
				layoutName = "Test Page Name",
				widgetName = "Breadcrumb");
		}

		task ("Enable Show Guest Site") {
			Navigator.gotoSitePage(
				pageName = "Test Page Name",
				siteName = "Test Site Name");

			Portlet.gotoPortletOptions(portletOption = "Configuration");

			Breadcrumb.configureBreadcrumb(checkSetupName = "Show Guest Site");
		}

		task ("Navigate to page via IP address") {
			Navigator.gotoSpecificURLPage(
				pageName = "Test Page Name",
				url = "http://127.0.0.1:8080/web/test-site-name");

			AssertLocation(value1 = "http://127.0.0.1:8080/web/test-site-name");
		}

		task ("View the displayed content in Breadcrumb") {
			var siteName = TestCase.getSiteName(siteName = "${siteName}");

			Breadcrumb.viewPG(breadcrumbListVisible = "${siteName},Test Site Name,Test Page Name");

			var key_URL = "${portalURL}";

			AssertElementNotPresent(locator1 = "BreadcrumbPortlet#BREADCRUMB_PAGE_LINK");

			var key_URL = "/web/guest";

			AssertTextEquals(
				locator1 = "BreadcrumbPortlet#BREADCRUMB_PAGE_LINK",
				value1 = "${siteName}");
		}
	}

}