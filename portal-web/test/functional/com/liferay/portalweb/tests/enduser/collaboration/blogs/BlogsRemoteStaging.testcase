@component-name = "portal-collaboration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Blogs";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Staging Blogs Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name",
			layoutName = "Staging Blogs Page",
			widgetName = "Blogs");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
			JSONGroup.deleteGroupByName(groupName = "Remote Site");
		}
	}

	@description = "This is a use case for LPS-74206."
	@priority = "5"
	@refactordone
	test CanPublishApprovedEntry {
		property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
		property test.name.skip.portal.instance = "BlogsRemoteStaging#CanPublishApprovedEntry";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		Navigator.openURL();

		Staging.remoteStagingSetUp(siteName = "Site Name");

		ApplicationsMenu.gotoPortlet(
			category = "Workflow",
			panel = "Applications",
			portlet = "Process Builder");

		NavItem.gotoConfiguration();

		Workflow.configureWorkflow(
			workflowDefinition = "Single Approver",
			workflowResourceValue = "Blogs Entry");

		Navigator.gotoSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name");

		Blogs.addWithWorkflow(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		Navigator.gotoSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name");

		Click(locator1 = "Notifications#PROFILE_BADGE_COUNT");

		AssertClick(
			locator1 = "Notifications#NOTIFICATIONS_WORKFLOW_TITLE",
			value1 = "Test Test sent you a Blogs Entry for review in the workflow.");

		LexiconEntry.gotoEllipsisMenuItem(menuItem = "Assign to Me");

		Workflow.confirmWorkflowAction();

		UserBar.gotoDropdownItem(dropdownItem = "My Workflow Tasks");

		Workflow.approveTaskByActions(
			workflowActivityComment = "Process is approved",
			workflowAssetTitle = "Blogs Entry Title",
			workflowAssetType = "Blogs Entry",
			workflowTask = "Review");

		Navigator.gotoSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		AssertConsoleTextNotPresent(value1 = "RuntimeException");

		BlogsNavigator.openToBlogEntry(
			entryTitle = "Blogs Entry Title",
			layoutName = "Staging Blogs Page",
			siteURLKey = "remote-site");

		BlogsEntry.viewEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

	@description = "This is a use case for LPS-72461."
	@priority = "5"
	@refactordone
	test CanPublishEntry {
		property app.server.bundles.size = "1";
		property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
		property databases.size = "1";
		property minimum.slave.ram = "24";
		property test.name.skip.portal.instance = "BlogsRemoteStaging#CanPublishEntry";

		Staging.remoteStagingSetUpViaJson(
			groupName = "Site Name",
			remotePort = "9080");

		JSONBlog.addEntry(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			groupName = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		AssertConsoleTextNotPresent(value1 = "RuntimeException");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Staging Blogs Page",
			siteName = "Remote Site");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");
	}

	@description = "This test covers LPS-92488. It asserts that a replaced cover image displays properly in the remote site."
	@priority = "5"
	@refactordone
	test CanPublishUpdatedCoverImage {
		property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
		property test.name.skip.portal.instance = "BlogsRemoteStaging#CanPublishUpdatedCoverImage";

		JSONDocument.addFileWithUploadedFile(
			dmDocumentDescription = "DM Document Description",
			dmDocumentTitle = "Document_2.jpg",
			groupName = "Site Name",
			mimeType = "image/jpeg",
			sourceFileName = "Document_2.jpg");

		Staging.remoteStagingSetUp(siteName = "Site Name");

		Navigator.gotoSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name");

		Blogs.addEntryWithUploadedCoverImage(
			coverImageName = "Document_1",
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			navTab = "Blog Images",
			uploadFileName = "Document_1.jpg");

		Button.clickPublish();

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		BlogsNavigator.gotoEntryCP(entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryCP(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_1");

		BlogsNavigator.gotoBrowseImage();

		ItemSelector.searchDMImages(imageFileName = "Document_2");

		SelectFrame(locator1 = "ItemSelector#ITEM_SELECTOR_IFRAME");

		var key_imageFileName = "Document_2.jpg";

		Click(locator1 = "ItemSelector#SELECT_FILE_IMAGE_CARD");

		SelectFrameTop(value1 = "relative=top");

		PortletEntry.publish();

		Navigator.gotoSitePage(
			pageName = "Staging Blogs Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		AssertConsoleTextNotPresent(value1 = "PortletDataException");

		BlogsNavigator.openToBlogEntry(
			entryTitle = "Blogs Entry Title",
			layoutName = "Staging Blogs Page",
			siteURLKey = "remote-site");

		BlogsEntry.viewEntryPG(
			entryContent = "Blogs Entry Content",
			entrySubtitle = "Blogs Entry Subtitle",
			entryTitle = "Blogs Entry Title",
			uploadFileName = "Document_2.jpg");
	}

}