@component-name = "portal-segmentation"
definition {

	property custom.properties = "jsonws.web.service.paths.excludes=";
	property osgi.module.configuration.file.names = "com.liferay.portal.security.sso.token.configuration.TokenConfiguration.config";
	property osgi.module.configurations = "enabled=&quot;true&quot;${line.separator}tokenLocation=&quot;REQUEST&quot;";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Segmentation";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		task ("Uncheck verify strangers email option") {
			Navigator.openURL();

			ApplicationsMenu.gotoPortlet(
				category = "Configuration",
				panel = "Control Panel",
				portlet = "Instance Settings");

			SystemSettings.gotoConfiguration(
				configurationCategory = "User Authentication",
				configurationName = "General",
				configurationScope = "Virtual Instance Scope");

			PortalSettings.uncheckStrangersVerifyEmailCheckbox();
		}

		for (var num : list "1,2") {
			JSONUser.addUser(
				jobTitle = "Test Engineer${num}",
				userEmailAddress = "userea${num}@liferay.com",
				userFirstName = "userfn${num}",
				userLastName = "userln${num}",
				userScreenName = "usersn${num}");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea${num}@liferay.com");

			JSONRole.assignRoleToUser(
				roleTitle = "Administrator",
				userEmailAddress = "userea${num}@liferay.com");
		}

		JSONOrganization.addOrganization(organizationName = "organization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "organization Name",
			userEmailAddress = "userea2@liferay.com");

		JSONGroup.addGroup(groupName = "Test Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Experience Content Page",
			type = "content");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Site.tearDownCP();
		}
	}

	@description = "When the user creates a new experience, it is always placed in the last position of the list, always below the default experience and always set as non-active"
	@priority = "5"
	test AddNewAnyoneExperience {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Default");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewAnyoneExperience",
			segmentName = "Anyone");

		Refresh();

		PageEditor.changeExperience(newExperience = "NewAnyoneExperience");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Anyone1");

		Button.clickPublish();

		User.logoutPG();

		Navigator.gotoSitePage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Default");

		User.firstLoginPG();
	}

	@description = "The Add new experience modals appears after click on cancel in the Edit experience modal"
	@priority = "5"
	test AddNewExperienceAfterCancelEdit {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewExp1",
			segmentName = "Anyone");

		Refresh();

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		Click(locator1 = "PageEditor#EXPERIENCE_EDIT_BUTTON");

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");

		Click(locator1 = "PageEditor#EXPERIENCE_DEFAULT_BUTTON_NAME");

		Click(
			key_text = "New Experience",
			locator1 = "Button#ANY");

		SelectFrame(value1 = "relative=top");

		AssertTextEquals(
			locator1 = "PageEditor#EXPERIENCE_NEW_EXPERIENCE_MODAL_TITLE",
			value1 = "New Experience");

		AssertTextEquals(
			locator1 = "PageEditor#EXPERIENCE_NAME",
			value1 = "");

		AssertClick(
			locator1 = "Button#CANCEL",
			value1 = "Cancel");

		PageEditor.clickPublish();
	}

	@description = "This is a test for LPS-130348."
	@priority = "5"
	test AddNewExperienceBasedOtherSegmentsSegment {
		property portal.acceptance = "false";

		for (var num : list "1,2") {
			JSONSegmentsentry.addSegment(
				fieldName = "Last Name",
				groupName = "Test Site Name",
				operator = "equals",
				segmentName = "Segment With User${num}",
				text = "userln${num}");
		}

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Segments");

		Segmentation.addProperties(propertyOption = "Segment");

		Segmentation.fillProperty(selectLink = "Segment With User1");

		Segmentation.addProperties(propertyOption = "Segment");

		Segmentation.fillProperty(
			indexNumber = "2",
			selectLink = "Segment With User2");

		Segmentation.changeCriterionConjunction(criterionConjunctionItem = "Or");

		Segmentation.fillTitle(titleField = "AddNewExperienceBasedOtherSegmentsSegment Test");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "AddNewExperienceBasedOtherSegmentsSegment",
			segmentName = "AddNewExperienceBasedOtherSegmentsSegment Test");

		PageEditor.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "AddNewExperienceBasedOtherSegmentsSegment");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "User1 and User2 will see this heading");

		PageEditor.prioritizeExperience(experienceName = "AddNewExperienceBasedOtherSegmentsSegment");

		PageEditor.clickPublish();

		for (var num : list "1,2") {
			User.logoutAndLoginPG(
				freeLogin = "true",
				userLoginEmailAddress = "userea${num}@liferay.com",
				userLoginFullName = "userfn${num} userln${num}");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

			AssertTextEquals(
				locator1 = "Experience#FRAGMENT_HEADING",
				value1 = "User1 and User2 will see this heading");
		}
	}

	@description = "This is a test for LPS-130309."
	@priority = "5"
	test AddNewExperienceOrganizationCountrySegment {
		property portal.acceptance = "false";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "organization Name");

		Select(
			locator1 = "Select#COUNTRY",
			value1 = "China");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Country");

		Segmentation.fillTitle(titleField = "Org with Country");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(optionsValue = "China");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Country",
			segmentName = "Org with Country");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Country");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Country");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130302."
	@priority = "5"
	test AddNewExperienceOrganizationDateModifiedSegment {
		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Date Modified");

		Segmentation.fillTitle(titleField = "Org with Date Modified");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Modified Date",
			segmentName = "Org with Date Modified");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Modified Date");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Modified Date");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130303."
	@priority = "5"
	test AddNewExperienceOrganizationHierarchyPathSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Hierarchy Path");

		Segmentation.fillTitle(titleField = "Org with Hierarchy Path");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "organization Name");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Hierarchy Path",
			segmentName = "Org with Hierarchy Path");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Hierarchy Path");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Hierarchy Path");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130304."
	@priority = "5"
	test AddNewExperienceOrganizationNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Name");

		Segmentation.fillTitle(titleField = "Org with Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "organization Name");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Name",
			segmentName = "Org with Name");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Name");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Name");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130306."
	@priority = "5"
	test AddNewExperienceOrganizationOrganizationSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Organization");

		Segmentation.fillTitle(titleField = "Users In A Specific Org");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(selectCheckbox = "organization Name");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Users In A Specific Org",
			segmentName = "Users In A Specific Org");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Users In A Specific Org");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Users In A Specific Org");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130307."
	@priority = "5"
	test AddNewExperienceOrganizationParentOrganizationSegment {
		property portal.acceptance = "false";

		JSONOrganization.addOrganization(organizationName = "Suborganization Name");

		JSONOrganization.assignUserToOrganization(
			organizationName = "Suborganization Name",
			userEmailAddress = "userea2@liferay.com");

		User.openUsersAdmin();

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.searchCP(
			orgName = "Suborganization Name",
			searchTerm = "Suborganization Name");

		Organization.selectParentOrganizationCP(
			orgName = "Suborganization Name",
			parentOrgName = "organization Name");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Parent Organization");

		Segmentation.fillTitle(titleField = "Org with Parent");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(selectCheckbox = "organization Name");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Parent Organization",
			segmentName = "Org with Parent");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Parent Organization");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Parent Organization");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130310."
	@priority = "5"
	test AddNewExperienceOrganizationRegionSegment {
		property portal.acceptance = "false";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "organization Name");

		Select(
			locator1 = "Select#COUNTRY",
			value1 = "United States");

		Select(
			locator1 = "Select#REGION",
			value1 = "Utah");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Region");

		Segmentation.fillTitle(titleField = "Org with Region");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(optionsValue = "United States - Utah");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Region",
			segmentName = "Org with Region");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Region");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Region");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130311."
	@priority = "5"
	test AddNewExperienceOrganizationTagSegment {
		property portal.acceptance = "false";

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.editOrganizationCP(orgName = "organization Name");

		AssetCategorization.addTag(tagName = "tagName");

		PortletEntry.save();

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Tag");

		Segmentation.fillTitle(titleField = "Org with Tag");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(selectLink = "tagname");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Tag",
			segmentName = "Org with Tag");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Tag");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Tag");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130308."
	@priority = "5"
	test AddNewExperienceOrganizationTypeSegment {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "ExperienceCreateExperience#AddNewExperienceOrganizationTypeSegment";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Users",
			configurationName = "Organization Type",
			configurationScope = "System Scope");

		Button.clickAdd();

		for (var settingName : list "Name,Children Types") {
			SystemSettings.editTextAreaSetting(
				settingName = "${settingName}",
				settingValue = "Location");
		}

		for (var fieldName : list "countryEnabled,rootable") {
			FormFields.enableCheckbox(fieldName = "${fieldName}");
		}

		SystemSettings.saveConfiguration();

		JSONOrganization.addOrganization(
			organizationName = "United States",
			organizationType = "Location");

		JSONOrganization.assignUserToOrganization(
			organizationName = "United States",
			userEmailAddress = "userea2@liferay.com");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Organization");

		Segmentation.addProperties(propertyOption = "Type");

		Segmentation.fillTitle(titleField = "Org with Type");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "t");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "Experience For Org with Type",
			segmentName = "Org with Type");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "Experience For Org with Type");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Org users will see this heading");

		PageEditor.prioritizeExperience(experienceName = "Experience For Org with Type");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Org users will see this heading");
	}

	@description = "This is a test for LPS-130327."
	@priority = "5"
	test AddNewExperienceSessionBrowserSegment {
		property portal.acceptance = "false";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Segments");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Browser");

		Segmentation.fillTitle(titleField = "Session Browser Segment");

		Segmentation.fillProperty(propertyField = "Chrome");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Default");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewBrowserExperience",
			segmentName = "Session Browser Segment");

		Refresh();

		PageEditor.changeExperience(newExperience = "NewBrowserExperience");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Chrome Browser Heading");

		PageEditor.prioritizeExperience(experienceName = "NewBrowserExperience");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		Navigator.gotoSitePage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		var browserType = PropsUtil.get("browser.type");

		if ("${browserType}" == "chrome") {
			AssertTextEquals(
				locator1 = "Experience#FRAGMENT_HEADING",
				value1 = "Chrome Browser Heading");
		}

		else {
			AssertTextEquals(
				locator1 = "Experience#FRAGMENT_HEADING",
				value1 = "Default");
		}
	}

	@description = "This is a test for LPS-130328."
	@priority = "5"
	test AddNewExperienceSessionCookiesSegment {
		property portal.acceptance = "false";

		JSONUser.addUser(
			preferredLocale = "zh_CN",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Cookies");

		Segmentation.fillTitle(titleField = "SessionCookiesSegment Name");

		Segmentation.fillProperty(
			criterionKey = "GUEST_LANGUAGE_ID",
			criterionValue = "zh_CN");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "SessionCookiesSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130329."
	@priority = "5"
	test AddNewExperienceSessionDeviceBrandSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Device Brand");

		Segmentation.fillTitle(titleField = "SessionDeviceBrandSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		Segmentation.fillProperty(propertyField = "Apple");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "SessionDeviceBrandSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130330."
	@priority = "5"
	test AddNewExperienceSessionDeviceModelSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Device Model");

		Segmentation.fillTitle(titleField = "SessionDeviceModelSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		Segmentation.fillProperty(propertyField = "ios");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "SessionDeviceModelSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130331."
	@priority = "5"
	test AddNewExperienceSessionDeviceScreenResolutionHeightSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Device Screen Resolution Height");

		Segmentation.fillTitle(titleField = "SessionDeviceScreenResolutionHeightSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		Segmentation.fillProperty(resolutionValue = "480");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "SessionDeviceScreenResolutionHeightSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130332."
	@priority = "5"
	test AddNewExperienceSessionDeviceScreenResolutionWidthSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Device Screen Resolution Width");

		Segmentation.fillTitle(titleField = "SessionDeviceScreenResolutionWidthSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		Segmentation.fillProperty(resolutionValue = "320");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "SessionDeviceScreenResolutionWidthSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130333."
	@priority = "5"
	test AddNewExperienceSessionHostnameSegment {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "ExperienceCreateExperience#AddNewExperienceSessionHostnameSegment";

		HeadlessPortalInstanceAPI.addPortalInstance(
			domain = "www.able.com",
			portalInstanceId = "www.able.com",
			virtualHost = "www.able.com");

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "test@www.able.com",
			virtualHostsURL = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		ContentPages.addPage(pageName = "Experience Content Page");

		PageEditor.clickPublish();

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Segments");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Hostname");

		Segmentation.fillTitle(titleField = "HostnameSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "www.able.com");

		Button.clickSave();

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		Navigator._gotoPage(pageName = "Experience Content Page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "HostnameSegment Name");

		Button.clickPublish();

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		Navigator._gotoPage(pageName = "Experience Content Page");

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		Navigator.openSpecificURL(url = "http://www.able.com:8080/group/control_panel/manage?p_p_id=com_liferay_users_admin_web_portlet_UsersAdminPortlet");

		User.addCP(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		User.firstLoginPG(
			password = "test",
			userEmailAddress = "userea@liferay.com",
			virtualHostsURL = "http://www.able.com:8080");

		Navigator.openSpecificURL(url = "http://www.able.com:8080");

		Navigator._gotoPage(pageName = "Experience Content Page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130335."
	@priority = "5"
	test AddNewExperienceSessionLastSignInDateSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Last Sign In Date");

		Segmentation.fillTitle(titleField = "LastSignInDateSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Greater Than");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "LastSignInDateSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130336."
	@priority = "5"
	test AddNewExperienceSessionLocalDateSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Local Date");

		Segmentation.fillTitle(titleField = "LocalDateSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Greater Than or Equals");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "LocalDateSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130337."
	@priority = "5"
	test AddNewExperienceSessionReferrerURLSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Referrer URL");

		Segmentation.fillTitle(titleField = "ReferrerURLSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "8080");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "ReferrerURLSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		// Navigating to content page is a workaroud for LPS-132766, remove this when LPS-132766 get resolved

		AssertClick.assertPartialTextClickAt(
			key_pageName = "Experience Content Page",
			locator1 = "Home#PAGE",
			value1 = "Experience Content Page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130338."
	@priority = "5"
	test AddNewExperienceSessionRequestParametersSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Request Parameters");

		Segmentation.fillTitle(titleField = "SessionRequestParametersSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(
			criterionKey = "languageId",
			criterionValue = "zh_CN");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "SessionRequestParametersSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page?languageId=zh_CN");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130339."
	@priority = "5"
	test AddNewExperienceSessionSignedInSegment {
		property portal.acceptance = "false";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Segments");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "Signed In");

		Segmentation.fillTitle(titleField = "Session Signed In Segment");

		Select(
			key_criterion = "options",
			locator1 = "Segmentation#CRITERION_INPUT_FORM_CONTROL",
			value1 = "FALSE");

		Button.clickSave();

		Alert.viewSuccessMessage();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Default");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewSignedInExperience",
			segmentName = "Session Signed In Segment");

		Refresh();

		PageEditor.changeExperience(newExperience = "NewSignedInExperience");

		PageEditor.viewFragmentStyle(
			fragmentName = "Heading",
			headingLevel = "h1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "No Signed In Heading");

		PageEditor.prioritizeExperience(experienceName = "NewSignedInExperience");

		Button.clickPublish();

		User.logoutPG();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "No Signed In Heading");
	}

	@description = "This is a test for LPS-130340."
	@priority = "5"
	test AddNewExperienceSessionURLSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "URL");

		Segmentation.fillTitle(titleField = "SessionURLSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "test-site-name");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "SessionURLSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130341."
	@priority = "5"
	test AddNewExperienceSessionUserAgentSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.gotoSidebar(fieldType = "Session");

		Segmentation.addProperties(propertyOption = "User Agent");

		Segmentation.fillTitle(titleField = "SessionUserAgentSegment Name");

		Segmentation.changeCriterionInput(criterionInputOption = "Contains");

		Segmentation.fillProperty(propertyField = "Chrome");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "SessionUserAgentSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130293."
	@priority = "5"
	test AddNewExperienceUserDateModifiedSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Date Modified");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Not Equals");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "3 Members");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is heading for the new experience");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is heading for the new experience");
	}

	@description = "This is a test for LPS-130294."
	@priority = "5"
	test AddNewExperienceUserDateOfBirthSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Date of Birth");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Less Than");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "3 Members");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is heading for the new experience");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is heading for the new experience");
	}

	@description = "This is a test for LPS-130301."
	@priority = "5"
	test AddNewExperienceUserEmailAddressSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Email Address");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "userea1@liferay.com");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130295."
	@priority = "5"
	test AddNewExperienceUserFirstNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "First Name");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "userfn1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130296."
	@priority = "5"
	test AddNewExperienceUserJobTitleSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Job Title");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "Test Engineer1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130297."
	@priority = "5"
	test AddNewExperienceUserLastNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Last Name");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "userln1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130298."
	@priority = "5"
	test AddNewExperienceUserNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Name");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "userfn1 userln1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130299."
	@priority = "5"
	test AddNewExperienceUserRoleSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Regular Role");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(selectCheckbox = "Administrator");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "3 Members");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-130300."
	@priority = "5"
	test AddNewExperienceUserScreenNameSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Screen Name");

		Segmentation.fillTitle(titleField = "Segment Title");

		Segmentation.changeCriterionInput(criterionInputOption = "Equals");

		Segmentation.fillProperty(propertyField = "usersn1");

		AssertTextEquals(
			locator1 = "Segmentation#MEMBERS_MATCHED",
			value1 = "1 Member");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "Segment Title");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-132101."
	@priority = "5"
	test AddNewExperienceUserSiteOrganizationRoleSegment {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "ExperienceCreateExperience#AddNewExperienceUserSiteOrganizationRoleSegment";

		JSONGroup.assignUserToGroup(
			groupName = "Test Site Name",
			userEmailAddress = "userea2@liferay.com");

		JSONRole.addSiteRole(
			roleKey = "Site Role Name",
			roleTitle = "Site Role Name");

		JSONGroup.assignGroupRoleToUser(
			groupName = "Test Site Name",
			roleTitle = "Site Role Name",
			userEmailAddress = "userea2@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Site and Organization Role");

		Segmentation.fillTitle(titleField = "UserSiteOrganizationRoleSegment Name");

		Segmentation.fillProperty(selectCheckbox = "Site Role Name");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "UserSiteOrganizationRoleSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-132100."
	@priority = "5"
	test AddNewExperienceUserSiteSegment {
		property portal.acceptance = "false";

		JSONGroup.assignUserToGroup(
			groupName = "Test Site Name",
			userEmailAddress = "userea2@liferay.com");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Site");

		Segmentation.fillTitle(titleField = "UserSiteSegment Name");

		Segmentation.fillProperty(selectLink = "Test Site Name");

		Segmentation.viewMembers(memberName = "userfn2 userln2");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "UserSiteSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea2@liferay.com",
			userLoginFullName = "userfn2 userln2");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-132101."
	@priority = "5"
	test AddNewExperienceUserTagSegment {
		property portal.acceptance = "false";

		JSONUser.addUser(
			assetTagNames = "tagname",
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Tag");

		Segmentation.fillProperty(selectLink = "tagname");

		Segmentation.fillTitle(titleField = "UserTagSegment Name");

		Segmentation.viewMembers(memberName = "userfn userln");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "UserTagSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea@liferay.com",
			userLoginFullName = "userfn userln");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-132103."
	@priority = "5"
	test AddNewExperienceUserTeamSegment {
		property portal.acceptance = "false";

		JSONGroup.assignUserToGroup(
			groupName = "Test Site Name",
			userEmailAddress = "userea1@liferay.com");

		Site.openSiteTeamsAdmin(siteURLKey = "test-site-name");

		Team.addCP(
			teamDescription = "Site Team Description",
			teamName = "Site Team Name");

		Team.assignMembersCP(
			teamName = "Site Team Name",
			userScreenName = "usersn1");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "Team");

		Segmentation.fillProperty(selectLink = "Site Team Name");

		Segmentation.fillTitle(titleField = "UserTeamSegment Name");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "UserTeamSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			freeLogin = "true",
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-132105."
	@priority = "5"
	test AddNewExperienceUserUserGroupSegment {
		property portal.acceptance = "false";
		property test.name.skip.portal.instance = "ExperienceCreateExperience#AddNewExperienceUserUserGroupSegment";

		JSONUserGroup.addUserGroup(
			userGroupDescription = "UG UserGroup Name Description",
			userGroupName = "UG UserGroup Name");

		JSONUser.addUserToUserGroup(
			userEmailAddress = "userea1@liferay.com",
			userGroupName = "UG UserGroup Name");

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "User Group");

		Segmentation.fillProperty(chooseItem = "UG UserGroup Name");

		Segmentation.fillTitle(titleField = "UserUserGroupSegment Name");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "UserUserGroupSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "This is a test for LPS-132104."
	@priority = "5"
	test AddNewExperienceUserUserSegment {
		property portal.acceptance = "false";

		Segmentation.openSegmentsAdmin(siteURLKey = "test-site-name");

		LexiconEntry.gotoAdd();

		Segmentation.addProperties(propertyOption = "User");

		Segmentation.fillProperty(selectCheckbox = "userfn1 userln1");

		Segmentation.fillTitle(titleField = "UserUserSegment Name");

		Segmentation.viewMembers(memberName = "userfn1 userln1");

		Button.clickSave();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.addExperience(
			experienceName = "New Experience",
			segmentName = "UserUserSegment Name");

		Button.clickPublish();

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.changeExperience(newExperience = "New Experience");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "This is a new experience for you");

		PageEditor.prioritizeExperience(experienceName = "New Experience");

		PageEditor.clickPublish();

		User.logoutAndLoginPG(
			userLoginEmailAddress = "userea1@liferay.com",
			userLoginFullName = "userfn1 userln1");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "This is a new experience for you");
	}

	@description = "LPS-125710 When a user, that Belongs To two or more different segments with experiences for them and these experiences are below of any other Anyone-targeted experience, lands on the page, the Anyone-targeted experience labeled as active will be shown"
	@priority = "3"
	@uitest
	test AddTwoExperiencesBelowDefault {
		property portal.acceptance = "true";

		task ("Add segment for the user created") {
			JSONSegmentsentry.addSegment(
				fieldName = "Screen Name",
				groupName = "Test Site Name",
				operator = "contains",
				segmentName = "Segment Screen Name",
				text = "usersn1");
		}

		task ("Add another segment for the user created") {
			JSONSegmentsentry.addSegment(
				fieldName = "Email Address",
				groupName = "Test Site Name",
				operator = "equals",
				segmentName = "Segment Email Address",
				text = "userea1@liferay.com");
		}

		task ("Go to the Content Page and add a new experience for the first segment") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Experience Content Page",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");

			PageEditor.addExperience(
				experienceName = "Screen Name Experience",
				segmentName = "Segment Screen Name");

			Button.clickPublish();
		}

		task ("Edit the experience created and leave it below the Default experience") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Experience Content Page",
				siteName = "Test Site Name");

			PageEditor.changeExperience(newExperience = "Screen Name Experience");

			PageEditor.editFragmentText(
				fragmentName = "Heading",
				id = "element-text",
				text = "This is a new Screen Name experience for you");

			PageEditor.clickPublish();
		}

		task ("Go to the Content Page and add a new experience for the second segment") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Experience Content Page",
				siteName = "Test Site Name");

			PageEditor.addExperience(
				experienceName = "Email Address Experience",
				segmentName = "Segment Email Address");

			Button.clickPublish();
		}

		task ("Edit the experience created and leave it below the Default experience") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Experience Content Page",
				siteName = "Test Site Name");

			PageEditor.changeExperience(newExperience = "Email Address Experience");

			PageEditor.editFragmentText(
				fragmentName = "Heading",
				id = "element-text",
				text = "This is a new Email Address Experience for you");

			PageEditor.clickPublish();
		}

		task ("Login with the user and check that the correct experience is shown") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea1@liferay.com",
				userLoginFullName = "userfn1 userln1");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

			AssertTextEquals(
				locator1 = "Experience#FRAGMENT_HEADING",
				value1 = "Heading Example");
		}
	}

	@description = "LPS-125710 When a user, that Belongs To two or more different segments with experiences for them and these experiences are above the all other Anyone-targeted experiences, lands on the page, the experience with the higher position will be shown"
	@priority = "3"
	@uitest
	test AddTwoExperiencesOverDefault {
		property portal.acceptance = "true";

		task ("Add segment for the user created") {
			JSONSegmentsentry.addSegment(
				fieldName = "Screen Name",
				groupName = "Test Site Name",
				operator = "contains",
				segmentName = "Segment Screen Name",
				text = "usersn1");
		}

		task ("Add another segment for the user created") {
			JSONSegmentsentry.addSegment(
				fieldName = "Email Address",
				groupName = "Test Site Name",
				operator = "equals",
				segmentName = "Segment Email Address",
				text = "userea1@liferay.com");
		}

		task ("Go to the Content Page and add a new experience for the first segment") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Experience Content Page",
				siteName = "Test Site Name");

			PageEditor.addFragment(
				collectionName = "Basic Components",
				fragmentName = "Heading");

			PageEditor.addExperience(
				experienceName = "Screen Name Experience",
				segmentName = "Segment Screen Name");

			Button.clickPublish();
		}

		task ("Edit the experience created and prioritize it over the Default experience") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Experience Content Page",
				siteName = "Test Site Name");

			PageEditor.changeExperience(newExperience = "Screen Name Experience");

			PageEditor.editFragmentText(
				fragmentName = "Heading",
				id = "element-text",
				text = "This is a new Screen Name experience for you");

			PageEditor.prioritizeExperience(experienceName = "Screen Name Experience");

			PageEditor.clickPublish();
		}

		task ("Go to the Content Page and add a new experience for the second segment") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Experience Content Page",
				siteName = "Test Site Name");

			PageEditor.addExperience(
				experienceName = "Email Address Experience",
				segmentName = "Segment Email Address");

			Button.clickPublish();
		}

		task ("Edit the experience created and prioritize it over the Default experience") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Experience Content Page",
				siteName = "Test Site Name");

			PageEditor.changeExperience(newExperience = "Email Address Experience");

			PageEditor.editFragmentText(
				fragmentName = "Heading",
				id = "element-text",
				text = "This is a new Email Address Experience for you");

			PageEditor.prioritizeExperience(experienceName = "Email Address Experience");

			PageEditor.clickPublish();
		}

		task ("Login with the user and check that the correct experience is shown") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "userea1@liferay.com",
				userLoginFullName = "userfn1 userln1");

			Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

			AssertTextEquals(
				locator1 = "Experience#FRAGMENT_HEADING",
				value1 = "This is a new Screen Name experience for you");
		}
	}

	@description = "When the user clicks on the Duplicate option of an experience, a new experience with [the same name] + Copy and the same audience (Segment) appears in the last position of the list, always below the default experience"
	@priority = "5"
	test DuplicateExperience {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Default");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "NewExp1",
			segmentName = "Anyone");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "NewExp1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Exp1");

		PageEditor.prioritizeExperience(experienceName = "NewExp1");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "NewExp1");

		PageEditor.duplicateExperience(experienceName = "NewExp1");

		Button.clickPublish();

		ContentPages.clickPencil();

		PageEditor.changeExperience(newExperience = "NewExp1 (Copy)");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Exp1");

		PageEditor.editFragmentText(
			fragmentName = "Heading",
			id = "element-text",
			text = "Exp1 Copy");

		PageEditor.changeExperience(newExperience = "NewExp1");

		AssertTextEquals(
			locator1 = "Experience#FRAGMENT_HEADING",
			value1 = "Exp1");

		PageEditor.clickPublish();
	}

	@description = "Validate experience edition and deletion"
	@priority = "5"
	test EditAndDeleteExperience {
		property portal.acceptance = "true";

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/experience-content-page");

		ContentPages.clickPencil();

		PageEditor.addExperience(
			experienceName = "exp1",
			segmentName = "Anyone");

		Refresh();

		PageEditor.editExperience(newExperience = "exp1_edited");

		PageEditor.deleteExperience(experienceName = "exp1_edited");

		PageEditor.clickPublish();
	}

	@description = "This is a test for LPS-132573. Assert no error occurs after switching back to default experience with fragment removed."
	@priority = "4"
	test RemoveFragmentAndChangeBackToDefaultExperience {
		JSONWebcontent.addWebContent(
			content = "Web Content Content",
			groupName = "Test Site Name",
			title = "Web Content Title");

		ContentPagesNavigator.openEditContentPage(
			pageName = "Experience Content Page",
			siteName = "Test Site Name");

		PageEditor.addFragment(
			collectionName = "Basic Components",
			fragmentName = "Heading");

		PageEditorMapping.gotoEditableFieldMapping(
			fragmentName = "Heading",
			id = "element-text");

		PageEditorMapping.mapEditableFieldToAsset(
			entryTitle = "Web Content Title",
			navItem = "Web Content");

		Select(
			locator1 = "PageEditorEditableLink#FIELD",
			value1 = "Title");

		PageEditor.waitForAutoSave();

		AssertTextEquals(
			id = "element-text",
			key_fragmentName = "Heading",
			locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD",
			value1 = "Web Content Title");

		PageEditor.addExperience(
			experienceName = "NewExperienceName",
			segmentName = "Anyone");

		Refresh();

		PageEditor.changeExperience(newExperience = "Default");

		PageEditor.removeFragment(fragmentName = "Heading");

		AssertConsoleTextNotPresent(value1 = "java.lang.NullPointerException");

		PageEditor.viewNoFragment(fragmentName = "Heading");
	}

}