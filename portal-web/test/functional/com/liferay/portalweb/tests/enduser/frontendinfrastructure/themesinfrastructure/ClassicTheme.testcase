@component-name = "portal-frontend-infrastructure"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Theme";
	property testray.main.component.name = "Theme";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Page.tearDownCP();
		}
	}

	@priority = "5"
	@refactorneeded
	test ConfigureLookAndFeelSettingsSinglePage {
		property osgi.modules.includes = "frontend-taglib-clay-sample-web";
		property portal.acceptance = "true";

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Classic Theme Page");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Classic Theme Page");

		Navigator.gotoNavTab(navTab = "Look and Feel");

		Theme.configureLookAndFeelSpecificLook();

		Theme.configureLookAndFeelShowHeaderSearch(showHeaderSearch = "false");

		Theme.configureLookAndFeelShowMaxMinAppLinks(showMaxMinAppLinks = "true");

		Theme.configureLookAndFeelCustomCSS(cssText = '''body, #wrapper{background-color: #42f4c5;}''');

		PortletEntry.save();

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Classic Theme Page");

		Navigator.gotoNavTab(navTab = "Look and Feel");

		Navigator.gotoPage(pageName = "Classic Theme Page");

		var htmlSourceText = '''body, #wrapper{background-color: #42f4c5;}''';

		AssertHTMLSourceTextPresent(value1 = "${htmlSourceText}");

		takeScreenshot();

		AssertElementNotPresent(locator1 = "Search#EMBEDDED_SEARCH_BAR");

		Portlet.addPG(portletName = "Clay Sample");

		Portlet.gotoPortletOptions(portletName = "Clay Sample");

		Theme.viewMaxPortletOption();

		Theme.viewMinPortlet();

		AssertTextEquals(
			locator1 = "Portlet#H2_HEADER",
			value1 = "Clay Sample");

		AssertTextNotPresent(
			locator1 = "Portlet#PORTLET_CONTENT",
			value1 = "Clay Sample");

		Portlet.gotoPortletOptions(portletName = "Clay Sample");

		Theme.viewRestorePortlet();
	}

}