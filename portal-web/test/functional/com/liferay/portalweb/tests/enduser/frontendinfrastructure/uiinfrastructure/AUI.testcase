@component-name = "portal-frontend-infrastructure"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "User Interface";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Page.tearDownCP();
		}
	}

	@description = "Verify portal can be enabled to preload AUI modules"
	@priority = "5"
	@refactorneeded
	test CanBeEnabledToPreloadModules {
		property test.name.skip.portal.instance = "AUI#CanBeEnabledToPreloadModules";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Third Party",
			configurationName = "AUI",
			configurationScope = "System Scope");

		FormFields.viewCheckboxNotChecked(fieldName = "enableAUIPreload");

		SystemSettings.configureSystemSettingWithRefresh(
			enableSetting = "true",
			settingFieldName = "Preload Widely Used AUI Modules");

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Third Party",
			configurationName = "AUI",
			configurationScope = "System Scope");

		FormFields.viewCheckboxChecked(fieldName = "enableAUIPreload");

		Navigator.gotoPage(pageName = "Home");
	}

}