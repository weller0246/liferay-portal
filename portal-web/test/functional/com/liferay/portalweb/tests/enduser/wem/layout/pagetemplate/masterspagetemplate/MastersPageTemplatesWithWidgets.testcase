@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Page Templates";
	property testray.main.component.name = "Page Templates";

	setUp {
		task ("Set up instance and sign in") {
			TestCase.setUpPortalInstance();

			User.firstLoginPG();
		}

		task ("Add a site via JSON") {
			JSONGroup.addGroup(groupName = "Test Site Name");
		}

		task ("Add a custom master") {
			JSONLayoutpagetemplate.addMasterPageTemplateEntry(
				groupName = "Test Site Name",
				masterPageTemplateEntryName = "Custom Masters Page Template");

			MastersPageTemplatesAdmin.openMastersAdmin(siteURLKey = "test-site-name");
		}
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is for LPS-106813. Can set permissions for widgets in master page template."
	@priority = "5"
	test ConfigurePermissionsOfAP {
		property portal.acceptance = "true";

		task ("Add an asset publisher widget to the content page template") {
			MastersPageTemplatesAdmin.gotoMastersEllipsisItem(
				item = "Edit",
				masterLayoutName = "Custom Masters Page Template");

			PageEditor.addWidget(
				dropTarget = "Header",
				portletName = "Asset Publisher",
				scope = "Master");
		}

		task ("Assert can configure permissions of AP") {
			Portlet.gotoPortletOptions(
				portletName = "Asset Publisher",
				portletOption = "Permissions",
				siteTemplate = "true");

			IFrame.selectPermissionsFrame();

			AssertChecked(
				key_roleTitle = "guest",
				locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");

			Uncheck(
				key_roleTitle = "guest",
				locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");

			AssertNotChecked(
				key_roleTitle = "guest",
				locator1 = "Permissions#CONFIGURATION_PERMISSIONS_VIEW_CHECKBOX");

			Portlet.saveAndCloseConfig();
		}
	}

}