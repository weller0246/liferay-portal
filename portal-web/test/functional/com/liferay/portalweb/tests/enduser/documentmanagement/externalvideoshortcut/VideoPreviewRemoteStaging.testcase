@component-name = "portal-document-management"
definition {

	property app.server.bundles.size = "1";
	property custom.properties = "tunneling.servlet.shared.secret=1234567890123456${line.separator}auth.verifier.TunnelAuthVerifier.hosts.allowed=";
	property databases.size = "1";
	property minimum.slave.ram = "24";
	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Document Management";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		DMNavigator.openToConfigInSystemSettings(portlet = "FFMPEG Video Converter");

		FormFields.enableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		Clustering.shutdownSpecificServer(nodePort = "8080");

		Clustering.startSpecificServer(
			deleteLiferayHome = "true",
			keepCachedAppServerData = "true",
			nodePort = "8080");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Test Page");

		JSONLayout.addWidgetToPublicLayout(
			column = "1",
			groupName = "Site Name",
			layoutName = "Test Page",
			widgetName = "Blogs");

		Staging.remoteStagingSetUpViaJson(
			groupName = "Site Name",
			remotePort = "9080");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");

			User.logoutPG();
		}
	}

	@description = "This test ensures that a blog entry can be published successfully."
	@priority = "5"
	@refactorneeded
	@uitest
	test PublishBlogWithEmbeddedVideo {
		property test.name.skip.portal.instance = "DLVideoRemoteStaging#PublishBlogWithEmbeddedVideo";

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openToConfigInSystemSettings(
			baseURL = "http://localhost:9080",
			portlet = "FFMPEG Video Converter");

		FormFields.enableCheckbox(fieldName = "enabled");

		SystemSettings.saveConfiguration();

		User.loginPG(
			nodePort = "8080",
			password = "test",
			userEmailAddress = "test@liferay.com");

		DMNavigator.openDocumentsAndMediaAdmin(siteURLKey = "site-name");

		DMDocument.addCP(
			dmDocumentDescription = "DM Document Description",
			dmDocumentFile = "Document_1.mp4",
			dmDocumentTitle = "DM Video Title In Site");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Blogs.addEntry(
			embedVideo = "true",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			navTab = "Documents and Media",
			videoName = "Document_1.mp4",
			videoShortcutTitle = "DM Video Title In Site",
			viewInternalVideoPreview = "true");

		Navigator.gotoSitePage(
			pageName = "Test Page",
			siteName = "Site Name");

		Staging.gotoPublishToLive();

		Staging.publishToLive(remoteStaging = "true");

		User.logoutPG();

		User.firstLoginUI(
			password = "test",
			specificURL = "http://localhost:9080",
			userEmailAddress = "test@liferay.com");

		Navigator.gotoSitePage(
			baseURL = "http://localhost:9080",
			pageName = "Test Page",
			siteName = "Remote Site");

		BlogsNavigator.gotoEntryPG(
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title");

		BlogsEntry.viewEntryPG(
			embedVideo = "true",
			entryContent = "Blogs Entry Content",
			entryTitle = "Blogs Entry Title",
			internalVideo = "true",
			videoName = "Document_1.mp4");
	}

}