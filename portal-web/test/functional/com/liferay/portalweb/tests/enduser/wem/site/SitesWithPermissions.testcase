@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Site Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.firstLoginPG();

			Site.tearDownCP();

			Page.tearDownCP();
		}
	}

	@description = "This is for LPS-121422. The elements are still shown in edit mode after executing reset changes."
	@priority = "3"
	test SitesTemplatePermissionPersistence {
		property testray.component.names = "Permissions,Site Administration";

		task ("Add a new site template") {
			SiteTemplates.addCP(siteTemplateName = "Site Template Name");
		}

		task ("Add widgets to Home page of the new site template") {
			var siteName = TestCase.getSiteName(siteName = "${siteName}");

			SiteTemplatesNavigator.gotoSiteTemplatesPage(
				pageName = "Home",
				siteName = "${siteName}",
				siteTemplateName = "Site Template Name");

			ContentPages.clickPencil();

			PageEditor.addFragment(
				collectionName = "Layout Elements",
				fragmentName = "Grid");

			PageEditor.editLayoutGrid(
				columnCount = "2",
				panel = "General");

			PageEditor.addElementToColumn(
				columnNumber = "1",
				navTab = "Widgets",
				portletName = "Message Boards");

			PageEditor.clickPublish();
		}

		task ("Add a search page in the new site template") {
			Close.closeAndSelectWindow(locator1 = "title=Site Templates - ${siteName}");

			SiteTemplates.addSitePageViaSiteTemplateCP(
				pageName = "search",
				pageTemplateName = "Search",
				siteTemplateName = "Site Template Name");
		}

		task ("Add a new site based on the new site template") {
			ApplicationsMenu.gotoPortlet(
				category = "Sites",
				panel = "Control Panel",
				portlet = "Sites");

			Site.addCP(
				siteName = "Site Name",
				siteTemplateName = "Site Template Name",
				siteType = "Site Template");
		}

		task ("Assert permissions of each widgets in Home page") {
			ContentPagesNavigator.openEditContentPage(
				pageName = "Home",
				siteName = "Site Name");

			PageEditor.assertFragmentSidebarLoaded();

			PermissionsInline.gotoConfigurationPG(portletName = "Message Boards");

			PermissionsInline.assertDefaultPG(roleList = "Guest,Owner,Power User,Site Member,User");

			IFrame.closeFrame();

			PageEditor.addElementToColumn(
				columnNumber = "2",
				height = "Tall",
				navTab = "Widgets",
				portletName = "Asset Publisher");

			PageEditor.clickPublish();
		}

		task ("Reset Page Changes") {
			ContentPagesNavigator.openViewContentPage(
				pageName = "Home",
				siteName = "Site Name");

			AssertElementPresent(
				key_portletName = "AssetPublisher",
				locator1 = "Home#PORTLET_BORDERLESS");

			SiteTemplates.resetPageChanges(widgetName = "Asset Publisher");

			ContentPages.clickPencil();

			AssertElementNotPresent(
				key_fragmentName = "Asset Publisher",
				locator1 = "Fragment#FRAGMENT_HEADER");
		}

		task ("Assert permissions of each widgets in Home page") {
			PermissionsInline.gotoConfigurationPG(portletName = "Message Boards");

			PermissionsInline.assertDefaultPG(roleList = "Guest,Owner,Power User,Site Member,User");

			IFrame.closeFrame();
		}

		task ("Add thread in Message Boards") {
			MessageboardsThread.addPG(
				threadBody = "This is the message boards thread.",
				threadSubject = "Thread");

			var portalURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${portalURL}/web/site-name/home");

			MessageboardsThread.gotoPG(
				lastPostUserName = "Test Test",
				replyCount = "0",
				threadBody = "This is the message boards thread.",
				threadSubject = "Thread");

			MessageboardsThread.viewPG(
				threadBody = "This is the message boards thread.",
				threadSubject = "Thread");
		}

		task ("View Thread as guest") {
			User.logoutPG();

			var portalURL = PropsUtil.get("portal.url");

			Navigator.openSpecificURL(url = "${portalURL}/web/site-name/home");

			MessageboardsThread.gotoPG(
				lastPostUserName = "Test Test",
				replyCount = "0",
				threadBody = "This is the message boards thread.",
				threadSubject = "Thread");

			MessageboardsThread.viewPG(
				threadBody = "This is the message boards thread.",
				threadSubject = "Thread");

			AssertElementPresent(locator1 = "Search#EMBEDDED_SEARCH_BAR");
		}

		task ("Remove guest view permissions of Message Boards") {
			SignIn.signIn(
				userEmailAddress = "test@liferay.com",
				userPassword = "test");

			ContentPagesNavigator.openEditContentPage(
				pageName = "Home",
				siteName = "Site Name");

			PageEditor.assertFragmentSidebarLoaded();

			PermissionsInline.gotoConfigurationPG(portletName = "Message Boards");

			PermissionsInline.addOrRemoveViewPermissionFromAllRoles(
				addOrRemoveViewPermission = "Remove",
				roleList = "Guest,Owner,Power User,Site Member,User");

			IFrame.closeFrame();

			PageEditor.clickPublish();
		}

		task ("Assert the Message Boards is invisible to guest") {
			User.logoutPG();

			Navigator.openSpecificURL(url = "${portalURL}/web/site-name/home");

			AssertTextEquals(
				locator1 = "Message#ERROR_1",
				value1 = "You do not have the roles required to access this portlet.");
		}
	}

}