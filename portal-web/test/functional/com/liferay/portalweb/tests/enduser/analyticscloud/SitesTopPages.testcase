@component-name = "portal-analytics-cloud"
definition {

	property portal.release = "false";
	property portal.upstream = "true";
	property property.group = "analytics.cloud.profile";
	property testray.main.component.name = "Analytics Cloud";

	setUp {
		ACUtils.launchAC();

		ACSettings.takeTokenFromAnalyticsCloud();

		TestCase.setUpPortalInstance();

		ACUtils.launchDXP();

		ACUtils.addSiteAndPage();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		ACUtils.tearDownDXP();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Site Name");
		}

		ACUtils.tearDownAC();
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8304 | Test Summary: Assert Sites Top Pages Card Entrance Pages Highest Entrances"
	@priority = "3"
	test AssertSitesTopPagesCardEntrancePagesHighestEntrances {
		property portal.upstream = "quarantine";

		// AC Refactor: the issue is due to data not appearing on time
		// AC Refactor ticket: LRAC-9010

		var pageCreation = "AC Page 1,AC Page 2";
		var pageInteraction = "AC Page,AC Page 1,AC Page 1,AC Page 2,AC Page 2,AC Page 2";

		task ("Add Site and Page") {
			for (var n : list "${pageCreation}") {
				JSONLayout.addPublicLayout(
					groupName = "Site Name",
					layoutName = "${n}");
			}
		}

		task ("Connect Analytics Cloud to DXP") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Interation with Pages") {
			for (var n : list "${pageInteraction}") {
				Navigator.gotoSitePage(
					pageName = "${n}",
					siteName = "Site Name");

				Pause(locator1 = "3000");
			}
		}

		task ("AC launch") {
			ACUtils.closeAllSessionsAndWait();

			Pause(locator1 = "30000");

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Asset highest views pages highest entrances") {

			// Unable to perform the declaration because the data does not appear at the time

			ACTimeFilter.clickTimeFilterButton(cardName = "Top Pages");

			ACTimeFilter.setLast24Hours();

			ACNavigation.switchTabInCard(tabName = "Entrance Pages");

			for (var current : list "3-AC Page,2-AC Page 1,1-AC Page 2") {
				ACSites.viewVisitedTopPages(current = "${current}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8302 | Test Summary: Assert Sites Top Pages Card Exit Pages Highest Exits"
	@priority = "3"
	test AssertSitesTopPagesCardExitPagesHighestExits {
		property portal.upstream = "quarantine";

		// AC Refactor: the issue is due to data not appearing on time
		// AC Refactor ticket: LRAC-8964

		task ("Connect Analytics Cloud to DXP") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Blogs creation") {
			for (var n : list "1,2") {
				ACUtils.createBlogsAndAddToPage(entryTitle = "Test Blog ${n}");
			}
		}

		task ("Interation with Test Blogs") {
			for (var n : list "2,2,2,1,1") {
				User.logoutAndLoginPG(
					userLoginEmailAddress = "test@liferay.com",
					userLoginFullName = "test test");

				Navigator.gotoSitePage(
					pageName = "AC Page",
					siteName = "Site Name");

				BlogsNavigator.gotoPG(entryTitle = "Test Blog ${n}");

				Pause(locator1 = "3000");
			}
		}

		task ("Interation with Page") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "test@liferay.com",
				userLoginFullName = "test test");

			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			Pause(locator1 = "3000");
		}

		task ("AC launch") {
			ACUtils.closeAllSessions();

			Pause(locator1 = "30000");

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Asset highest views pages Top Pages") {

			// Unable to perform the declaration because the data does not appear at the time

			ACTimeFilter.clickTimeFilterButton(cardName = "Top Pages");

			ACTimeFilter.setLast24Hours();

			ACNavigation.switchTabInCard(tabName = "Exit Pages");

			for (var current : list "1-Test Blog 2,2-Test Blog 1,3-AC Page") {
				ACSites.viewVisitedTopPages(current = "${current}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8301 | Test Summary: Assert Sites Top Pages Card Visited Pages Highest Views"
	@priority = "3"
	test AssertSitesTopPagesCardVisitedPagesHighestViews {
		property portal.upstream = "quarantine";

		// AC Refactor: the issue is due to data not appearing on time
		// AC Refactor ticket: LRAC-8961

		var num = "1,2";

		task ("Add two new users") {
			for (var name : list "ac,liferay") {
				JSONUser.addUser(
					userEmailAddress = "${name}@liferay.com",
					userFirstName = "${name}",
					userLastName = "${name}",
					userScreenName = "${name}");
			}
		}

		task ("Connect Analytics Cloud to DXP") {
			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Blogs creation") {
			for (var n : list "${num}") {
				ACUtils.createBlogsAndAddToPage(entryTitle = "Test Blog ${n}");
			}
		}

		task ("Access the page as a Test user") {
			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			Pause(locator1 = "5000");
		}

		task ("Interation with ac user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "ac@liferay.com",
				userLoginFullName = "ac ac");

			for (var n : list "${num}") {
				Navigator.gotoSitePage(
					pageName = "AC Page",
					siteName = "Site Name");

				BlogsNavigator.gotoPG(entryTitle = "Test Blog ${n}");

				Pause(locator1 = "3000");
			}
		}

		task ("Interation with liferay user") {
			User.logoutAndLoginPG(
				userLoginEmailAddress = "liferay@liferay.com",
				userLoginFullName = "liferay liferay");

			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			BlogsNavigator.gotoPG(entryTitle = "Test Blog 2");
		}

		task ("AC launch") {
			ACUtils.closeAllSessions();

			Pause(locator1 = "30000");

			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Asset highest views pages Top Pages") {

			// Unable to perform the declaration because the data does not appear at the time

			ACTimeFilter.clickTimeFilterButton(cardName = "Top Pages");

			ACTimeFilter.setLast24Hours();

			for (var current : list "1-AC Page,2-Test Blog 2,3-Test Blog 1") {
				ACSites.viewVisitedTopPages(current = "${current}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8305 | Test Summary: Assert Sites Top Pages Change Time Filter"
	@priority = "3"
	test AssertSitesTopPagesChangeTimeFilter {
		property portal.upstream = "quarantine";

		// AC Refactor: the issue is due to data not appearing on time
		// AC Refactor ticket: LRAC-8815

		task ("Site and blogs creation and connection with AC") {
			ACUtils.createBlogsAndAddToPage();

			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Interation with pages") {
			Navigator.gotoSitePage(
				pageName = "AC Page",
				siteName = "Site Name");

			BlogsNavigator.gotoPG(entryTitle = "Blogs AC Title");

			Pause(locator1 = "6000");

			ACUtils.closeAllSessions();

			Pause(locator1 = "30000");
		}
		task ("AC launch") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Asset last 180 days time period filter ") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Top Pages");

			ACTimeFilter.setLast180Days();

			ACCards.noViewTopSitesCardByIndexes(key_index = "1");
		}

		task ("Asset last 24 hours time period filter ") {

			// Unable to perform the declaration because the data does not appear at the time

			ACTimeFilter.clickTimeFilterButton(cardName = "Top Pages");

			ACTimeFilter.setLast24Hours();

			ACCards.viewTopSitesCardByIndexes(key_index = "1");
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8296 | Test Summary: Show Top 5 Entrance Pages"
	@priority = "5"
	test ShowTop5EntrancePages {
		property portal.upstream = "quarantine";

		// AC Refactor: the issue is due to data not appearing on time
		// AC Refactor ticket: LRAC-8725

		task ("Site and blogs creation and connection with AC") {
			for (var n : list "2,3,4,5") {
				ACUtils.createBlogsAndAddToPage(entryTitle = "Test Blog ${n}");
			}

			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Interation with pages") {
			for (var n : list "2,3,4,5") {
				Refresh();

				Navigator.gotoSitePage(
					pageName = "AC Page",
					siteName = "Site Name");

				BlogsNavigator.gotoPG(entryTitle = "Test Blog ${n}");

				Refresh();

				Pause(locator1 = "3000");
			}
			ACUtils.closeAllSessions();

			Pause(locator1 = "60000");
		}
		task ("AC launch") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}
		task ("Asset top 5 entrances pages") {

			// Unable to perform the declaration because the data does not appear at the time

			ACNavigation.switchTab(tabName = "Pages");

			ACTimeFilter.clickTimeFilterButton();

			ACTimeFilter.setLast24Hours();

			ClickNoError(locator1 = "ACSites#TOP_PAGES_ENTRANCES_BUTTON");

			ACCards.viewTopSitesByIndexes(
				key_entry = "AC Page",
				key_index = "1");

			for (var n : list "2,3,4,5") {
				ACCards.viewTopSitesByIndexes(
					key_entry = "Test Blog ${n}",
					key_index = "${n}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8297 | Test Summary: Show Top 5 Exit Pages"
	@priority = "5"
	test ShowTop5ExitPages {
		property portal.upstream = "quarantine";

		// AC Refactor: the issue is due to data not appearing on time
		// AC Refactor ticket: LRAC-8898

		task ("Site and blogs creation and connection with AC") {
			var pages = "AC Page,AC Page 2,AC Page 3,AC Page 4,AC Page 5";

			for (var n : list "${pages}") {
				if ("${n}" != "AC Page") {
					JSONLayout.addPublicLayout(
						groupName = "Site Name",
						layoutName = "${n}");
				}
				ACUtils.addWidgetToPage(
					layoutName = "${n}",
					widgetName = "Blogs");
			}

			ACUtils.createBlogsAndAddToPage();

			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Interation with pages") {
			for (var n : list "${pages}") {
				Navigator.gotoSitePage(
					pageName = "${n}",
					siteName = "Site Name");

				Pause(locator1 = "5000");

				User.logoutAndLoginPG(
					userLoginEmailAddress = "test@liferay.com",
					userLoginFullName = "test test");
			}

			ACUtils.closeAllSessions();

			Pause(locator1 = "30000");
		}

		task ("AC launch") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}

		task ("Setting filter") {
			ACTimeFilter.clickTimeFilterButton(cardName = "Top Pages");

			ACTimeFilter.setLast24Hours();

			ACNavigation.switchTabInCard(tabName = "Exit Pages");
		}

		task ("Asset top 5 exit pages") {

			// Unable to perform the declaration because the data does not appear at the time

			var pagesList = "AC Page-2,AC Page 2-3,AC Page 3-4,AC Page 4-5,AC Page 5-1";

			for (var current : list "${pagesList}") {
				var name = StringUtil.extractFirst("${current}","-");
				var n = StringUtil.extractLast("${current}","-");

				ACCards.viewTopSitesByIndexes(
					key_entry = "${name}",
					key_index = "${n}");
			}
		}
	}

	@description = "Feature ID: Legacy | Automation ID: LRAC-8294 | Test Summary: Show Top 5 Visited Pages"
	@priority = "5"
	test ShowTop5VisitedPages {
		property portal.upstream = "quarantine";

		// AC Refactor: This test is flaky due to timing issues
		// AC Refactor ticket: LRAC-8764

		var n = "1,2,3,4,5";
		var u = "1,2,3,4";

		task ("Site, users and blogs creation then connect with AC") {
			for (var x : list "${n}") {
				ACUtils.createBlogsAndAddToPage(entryTitle = "Test Blog ${x}");
			}

			JSONUser.addUser(
				userEmailAddress = "test1@liferay.com",
				userFirstName = "test1",
				userLastName = "test1",
				userScreenName = "test1");

			var propertyName = ACDXPSettings.connectDXPtoAnalyticsCloud(siteName = "Site Name");
		}

		task ("Interation with pages") {
			for (var x : list "${n}") {
				Navigator.gotoSitePage(
					pageName = "AC Page",
					siteName = "Site Name");

				BlogsNavigator.gotoPG(entryTitle = "Test Blog ${x}");
				Pause(locator1 = "5000");
			}

			User.logoutAndLoginPG(
				userLoginEmailAddress = "test1@liferay.com",
				userLoginFullName = "test1 test1");

			for (var x : list "${u}") {
				Navigator.gotoSitePage(
					pageName = "AC Page",
					siteName = "Site Name");

				BlogsNavigator.gotoPG(entryTitle = "Test Blog ${x}");
				Pause(locator1 = "5000");
			}
		}
		task ("Close all sessions") {
			ACUtils.closeAllSessionsAndWait();
		}
		task ("AC launch") {
			ACUtils.launchAC();

			ACProperties.switchProperty(propertyName = "${propertyName}");
		}
		task ("Assert top 5 visited pages") {

			// Unable to perform the declaration because the data does not appear at the time

			ACTimeFilter.clickTimeFilterButton(cardName = "Top Pages");

			ACTimeFilter.setLast24Hours();

			ACCards.viewTopVisitedPages(
				key_entry = "AC Page",
				key_result = "");

			for (var x : list "${u}") {
				ACCards.viewTopVisitedPages(
					key_entry = "Test Blog ${x}",
					key_result = "");
			}
			ACCards.noViewTopVisitedPages(
				kay_result = "",
				key_entry = "Test Blog 5");
		}
	}

}