definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Remote Apps";
	property testray.main.component.name = "Remote Apps";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		Navigator.openURL();

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			RemoteApps.tearDown();

			Page.tearDownCP();
		}
	}

	@description = "Verify remote app can be created"
	@priority = "5"
	test CanBeCreated {
		property portal.acceptance = "true";

		ApplicationsMenu.gotoPortlet(
			category = "Custom Apps",
			panel = "Applications",
			portlet = "Remote Apps");

		RemoteApps.addApp(
			entryName = "Test Remote App",
			entryURL = "http://www.liferay.com");

		RemoteApps.viewTableEntryName(entryName = "Test Remote App");
		RemoteApps.viewTableEntryURL(entryURL = "http://www.liferay.com");
	}

	@description = "Verify remote app can be deleted"
	@priority = "5"
	test CanBeDeleted {
		property portal.acceptance = "true";

		ApplicationsMenu.gotoPortlet(
			category = "Custom Apps",
			panel = "Applications",
			portlet = "Remote Apps");

		RemoteApps.addApp(
			entryName = "Test Remote App",
			entryURL = "http://www.liferay.com");

		RemoteApps.deleteRemoteApp(tableEntry = "Test Remote App");

		RemoteApps.viewTableEntryNameNotPresent(entryName = "Test Remote App");

		RemoteApps.viewEmptyRemoteTable();
	}

}