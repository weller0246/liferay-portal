@component-name = "portal-friendly-url"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Friendly URL";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");

			Site.tearDownCP();
		}
	}

	@priority = "4"
	test VerifyFriendlyURLsOnlyDisplayLocaleOnce {
		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name");

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.gotoPageMenuItem(
			menuItem = "Configure",
			pageName = "Test Page");

		Click(locator1 = "Dropdown#FRIENDLY_URL_LOCALE");

		MenuItem.click(menuItem = "hu-HU");

		Type(
			locator1 = "TextInput#TEXT",
			value1 = "Test Page");

		Type(
			locator1 = "TextInput#FRIENDLY_URL",
			value1 = "/teszt-page");

		Button.clickSave();

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openWithAppendToBaseURL(urlAppend = "hu/web/test-site-name/test-page");

		AssertLocation(value1 = "${portalURL}/hu/web/test-site-name/teszt-page");
	}

	@priority = "5"
	test ViewCanonicalURLWithLocalizedFriendlyURL {
		property portal.acceptance = "quarantine";
		property portal.upstream = "quarantine";

		JSONLayout.addPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page");

		User.logoutPG();

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openSpecificURL(url = "${portalURL}/web/test-site-name");

		Page.assertCanonicalURL(customCanonicalURL = "${portalURL}/web/test-site-name");

		Navigator.openSpecificURL(url = "${portalURL}/es/web/test-site-name");

		Page.assertCanonicalURL(customCanonicalURL = "${portalURL}/web/test-site-name");
	}

	@priority = "4"
	test ViewFriendlyURLWithSharedLocalesButDifferentLanguages {
		property custom.properties = "locale.prepend.friendly.url.style=2${line.separator}locales.enabled=en_US,fr_FR,fr_CA";
		property test.name.skip.portal.instance = "FriendlyURL#ViewFriendlyURLWithSharedLocalesButDifferentLanguages";

		for (var siteName : list "USA Site Name,France Site Name,Canada Site Name") {
			JSONGroup.addGroup(groupName = "${siteName}");

			JSONLayout.addPublicLayout(
				groupName = "${siteName}",
				layoutName = "Test Page");

			JSONLayout.addWidgetToPublicLayout(
				groupName = "${siteName}",
				layoutName = "Test Page",
				widgetName = "Language Selector");
		}

		Site.openSiteSettingsAdmin(siteURLKey = "france-site-name");

		Site.configureCurrentLanguagesCP(defaultSiteLanguage = "French (France)");

		Navigator.gotoBack();

		Click(
			key_itemName = "Site Configuration",
			locator1 = "ListGroupItem#ITEM_TEXT");

		PortletEntry.inputName(name = "France Site Name");

		PortletEntry.save();

		Site.openSiteSettingsAdmin(siteURLKey = "canada-site-name");

		Site.configureCurrentLanguagesCP(defaultSiteLanguage = "French (Canada)");

		Navigator.gotoBack();

		Click(
			key_itemName = "Site Configuration",
			locator1 = "ListGroupItem#ITEM_TEXT");

		PortletEntry.inputName(name = "Canada Site Name");

		PortletEntry.save();

		var portalURL = PropsUtil.get("portal.url");

		Navigator.openWithAppendToBaseURL(urlAppend = "/web/usa-site-name/test-page");

		LanguagePortlet.selectLanguagePG(
			locale = "fr_FR",
			textIcon = "français-France");

		Navigator.openWithAppendToBaseURL(urlAppend = "/web/france-site-name/test-page");

		AssertLocation(value1 = "${portalURL}/fr/web/france-site-name/test-page");

		LanguagePortlet.selectLanguagePG(
			locale = "fr_CA",
			textIcon = "français-Canada");

		Navigator.openWithAppendToBaseURL(urlAppend = "/web/canada-site-name/test-page");

		AssertLocation(value1 = "${portalURL}/fr-CA/web/canada-site-name/test-page");
	}

	@description = "This is a use case for LRQA-52002. FriendlyURLS should support Unicode characters."
	@priority = "4"
	test ViewFriendlyURLWithUnicodeChars {
		JSONLayout.addPublicLayout(
			friendlyURL = "/⚽⚽⚽",
			groupName = "Test Site Name",
			layoutName = "Test Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Test Site Name",
			layoutName = "Test Page",
			widgetName = "Asset Publisher");

		Navigator.openWithAppendToBaseURL(urlAppend = "web/test-site-name/⚽⚽⚽");

		task ("Assert navigation occurs with no errors by asserting added Widget.") {
			AssertElementPresent(
				key_portletName = "Asset Publisher",
				locator1 = "Portlet#TITLE");
		}
	}

	@description = "This is a test for LPS-135619 and LPS-134072. View the Home page in different user languages."
	@priority = "5"
	test ViewLocaleChangeThroughFriendlyURL {
		property environment.acceptance = "true";
		property portal.acceptance = "true";

		task ("View the inline text on Home page is in English as default") {
			AssertTextEquals(
				key_fragmentName = "heading",
				locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
				value1 = "Welcome to Liferay");
		}

		task ("View the tree page is shown on Home page") {
			AssertVisible(
				id = "image-square",
				key_image = "tree.png",
				key_imageDescription = "Responsive Image",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD_IMAGE_PROPERTIES");
		}

		task ("Change the locale to Chinese") {
			Navigator.openWithAppendToBaseURL(urlAppend = "zh/web/guest/home");
		}

		task ("View the inline text on Home page is in Chinese") {
			AssertTextEquals(
				key_fragmentName = "heading",
				locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
				value1 = "欢迎来到Liferay");
		}

		task ("View the tree page is shown on Home page") {
			AssertVisible(
				id = "image-square",
				key_image = "tree.png",
				key_imageDescription = "Responsive Image",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD_IMAGE_PROPERTIES");
		}

		task ("Change the locale to Portuguese") {
			Navigator.openWithAppendToBaseURL(urlAppend = "pt/web/guest/home");
		}

		task ("View the inline text on Home page is in Portuguese") {
			AssertTextEquals(
				key_fragmentName = "heading",
				locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
				value1 = "Bem Vindo ao Liferay");
		}

		task ("View the tree page is shown on Home page") {
			AssertVisible(
				id = "image-square",
				key_image = "tree.png",
				key_imageDescription = "Responsive Image",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD_IMAGE_PROPERTIES");
		}

		task ("Change the locale to French") {
			Navigator.openWithAppendToBaseURL(urlAppend = "fr/web/guest/home");
		}

		task ("View the inline text on Home page is in French") {
			AssertTextEquals(
				key_fragmentName = "heading",
				locator1 = "Fragment#FRAGMENT_BASIC_COMPONENT",
				value1 = "Bienvenue à Liferay");
		}

		task ("View the tree page is shown on Home page") {
			AssertVisible(
				id = "image-square",
				key_image = "tree.png",
				key_imageDescription = "Responsive Image",
				locator1 = "Fragment#CONTRIBUTED_FRAGMENT_EDITABLE_FIELD_IMAGE_PROPERTIES");
		}

		task ("Change the locale to English") {
			Navigator.openWithAppendToBaseURL(urlAppend = "en/web/guest/home");
		}
	}

}