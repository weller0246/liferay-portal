@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Security";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			PortalSettings.tearDownAuthenticationCP();

			PagesAdmin.tearDownCP();
		}
	}

	@description = "This is a use case for LRQA-42767. Service access policy smoke"
	@priority = "5"
	test ServiceAccessPolicySmoke {
	    property portal.upstream = "marcell";
		property custom.properties = "access.control.sanitize.security.exception=false${line.separator}json.service.auth.token.hosts.allowed=${line.separator}json.service.serialize.throwable=true";
		property test.name.skip.portal.instance = "ServiceAccessPolicy#ServiceAccessPolicySmoke";

		task ("Assert access denied for viewing liferay email") {
			var companyId = JSONCompany.getCompanyId();

			var portalURL = JSONCompany.getPortalURL();

			var curl = '''
				${portalURL}/api/jsonws/user/get-user-by-email-address \
					-d companyId=${companyId} \
					-d emailAddress=test@liferay.com
			''';

			SystemSettings.getUserEmailAddressRequestDenied(curl = "${curl}");
		}

		task ("Edit service access policy") {
			ApplicationsMenu.gotoPortlet(
				category = "Security",
				panel = "Control Panel",
				portlet = "Service Access Policy");

			ServiceAccessPolicy.editServiceAccessPolicy(
				allowedServiceSignature = "com.liferay.portal.kernel.service.UserService#getUserByEmailAddress",
				policyName = "SYSTEM_DEFAULT");
		}

		task ("Assert user doesn't have view permissions") {
			var userId = JSONUserAPI._getUserIdByEmailAddress(userEmailAddress = "test@liferay.com ");

			var curl = '''
				${portalURL}/api/jsonws/user/get-user-by-email-address \
					-d companyId=${companyId} \
					-d emailAddress=test@liferay.com
			''';


			SystemSettings.getViewUserEmailPermissionDenied(curl = "${curl}");
		}

		task ("Assert permission available") {
			var curl = '''
				${portalURL}/api/jsonws/user/get-current-user \
					-basic \
					-u test@liferay.com:test
			''';

			SystemSettings.getUserEmailSuccessfully(curl = "${curl}");
		}

		task ("Edit service access policy") {
			ApplicationsMenu.gotoPortlet(
				category = "Security",
				panel = "Control Panel",
				portlet = "Service Access Policy");

			ServiceAccessPolicy.editServiceAccessPolicy(
				allowedServiceSignature = " ",
				policyName = "SYSTEM_USER_PASSWORD");
		}

		task ("Assert permission denied") {
			var curl = '''
				${portalURL}/api/jsonws/user/get-current-user \
					-basic \
					-u test@liferay.com:test
			''';

			SystemSettings.getCurrentUserEmailResquestDenied(curl = "${curl}");
		}
	}

}