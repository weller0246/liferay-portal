@component-name = "portal-security"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "AntiSamy";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			WikiPage.tearDownCP();

			Page.tearDownCP();
		}
	}

	@description = "This is a use case for LRQA-4988."
	@priority = "4"
	test AssertNoWikiJavascript {
		property portal.upstream = "quarantine";

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "AntiSamy Test Page");

		Navigator.gotoPage(pageName = "AntiSamy Test Page");

		Portlet.addPG(portletName = "Wiki");

		var wikiPageContent = '''
				<p id='demo'>PASS</p>

				<script type='text/javascript'>
					document.getElementById('demo').innerHTML = 'FAIL';
				</script>
			''';

		WikiPage.addFrontPagePG(
			htmlSource = "true",
			wikiPageContent = "${wikiPageContent}");

		WikiPage.viewPG(
			wikiPageContent = "PASS",
			wikiPageTitle = "FrontPage");
	}

	@description = "This is a use case for LPS-112581 and LPS-115803."
	@priority = "5"
	test AssertSpecificRulesWorksForModel {
		property antisamy.enabled = "true";
		property test.name.skip.portal.instance = "AntiSamy#AssertSpecificRulesWorksForModel";

		Pause(locator1 = "5000");

		AssertConsoleTextPresent(value1 = "STARTED com.liferay.portal.security.antisamy");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Knowledge Base");

		KBArticle.addCP(
			kbArticleAddViaSource = "true",
			kbArticleContentSource = '''<p data-test="test">Hello Liferay</p>''',
			kbArticleTitle = "Test AntiSamy");

		KBAdmin.openKBAdmin(siteURLKey = "guest");

		KBArticle.viewCP(
			kbArticleContent = "Hello Liferay",
			kbArticleTitle = "Test AntiSamy");

		ProductMenu.gotoPortlet(
			category = "Content &amp; Data",
			portlet = "Knowledge Base");

		Click(
			key_rowEntry = "Test AntiSamy",
			locator1 = "Icon#ROW_VERTICAL_ELLIPSIS");

		MenuItem.click(menuItem = "Edit");

		Button.clickSaveAsDraft();

		Click(locator1 = "CKEditor#TOOLBAR_SOURCE_BUTTON");

		Click.clickAtNotVisible(locator1 = "CKEditor#BODY_FIELD_SOURCE_ON");

		AssertTextEquals.assertValue(
			locator1 = "CKEditor#BODY_SOURCE_VALUE",
			value1 = "<p>Hello Liferay</p>");

		Navigator.openURL();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "System Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "Security Tools",
			configurationName = "AntiSamy Sanitizer by Class Name",
			configurationScope = "System Scope");

		LexiconEntry.gotoEntryMenuItem(
			menuItem = "Edit",
			rowEntry = "com.liferay.knowledge.base.model.KBArticle");

		Type(
			key_label = "Configuration File URL",
			locator1 = "TextArea#ANY_LABELED",
			value1 = "/META-INF/knowledge-base-sanitizer-configuration.xml");

		SystemSettings.saveConfiguration();

		AssertElementNotPresent(locator1 = "Message#SUCCESS");
	}

	@description = "This is a use case for LRQA-42763."
	@priority = "4"
	test AssertWebContentJavascript {
		property portal.upstream = "quarantine";

		ProductMenu.gotoPortlet(
			category = "Site Builder",
			portlet = "Pages");

		SitePages.addPublicPage(pageName = "Web Content Display Page");

		Navigator.gotoPage(pageName = "Web Content Display Page");

		Portlet.addPG(portletName = "Web Content Display");

		var webContentContent = '''
				<p id='demo'>FAIL</p>

				<script type='text/javascript'>
					document.getElementById('demo').innerHTML = 'PASS';
				</script>
			''';

		WebContent.addPGViaWCD(
			webContentContent = "${webContentContent}",
			webContentTitle = "WC WebContent Title");

		WebContent.viewPGViaWCD(
			webContentContent = "PASS",
			webContentTitle = "Web Content Title");
	}

}